{"name":"Crystal.BitmapText","id":"com.crystal.bitext","description":"Implements text rendering based on bitmaps","version":"2025.4f","scripts":["main"],"classes":[{"name":"FontAtlas","type":1,"construction":"const texture = new Texture(data.texture); await texture.Load(); texture.pixelPerUnit = data.pixelPerUnit ?? 16; texture.filterMode = +(data.smooth === true); let glyphsData = data.glyphs; if (typeof glyphsData === \"string\") { const request = await FetchFile(`data/${data.glyphs}.json`); glyphsData = await request.json(); } let glyphs = []; for (let i = 0; i < glyphsData.length; i++) { const glyph = await toObject(\"FontGlyph\", glyphsData[i]); glyphs.push(glyph); } return new FontAtlas(texture, glyphs);","args":[{"name":"forcedLineHeight","type":"bool"},{"name":"lineHeight","type":"number"},{"name":"charSpacing","type":"number"}]},{"name":"FontAtlas","type":0,"construction":"return Resources.Find(data)"},{"name":"FontGlyph","type":0,"args":[{"name":"character","type":"string"},{"name":"rect","type":"Rect"}]},{"name":"Text","type":0,"construction":"return new Text(await toObject(\"FontAtlas\", data.font), await toObject(\"Material\", data.material));","args":[{"name":"color","type":"Color"},{"name":"sortingLayer","type":"number"},{"name":"sortingOrder","type":"number"},{"name":"overflowWidth","type":"bool"},{"name":"overflowHeight","type":"bool"},{"name":"width","type":"number"},{"name":"height","type":"number"},{"name":"text","type":"string"},{"name":"pivot","type":"Vector2"},{"name":"fontSize","type":"number"},{"name":"horizontalAlign","type":"number"},{"name":"verticalAlign","type":"number"},{"name":"lineHeight","type":"number"},{"name":"charSpacing","type":"number"}],"keys":[{"name":"font","type":"FontAtlas"},{"name":"material","type":"Material"}]}]}