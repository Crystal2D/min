class FontAtlas{forcedLineHeight=!0;lineHeight=16;texture=null;constructor(t,e){this.texture=t;for(let t=0;t<e.length;t++){const r=new Sprite(e[t].character,this.texture,e[t].rect);this.texture.sprites.push(r)}}Unload(){}GetGlyph(t){return this.texture.sprites.find((e=>e.name===t))}}class FontGlyph{character="";rect=null;constructor(c,t){this.character=c??"",this.rect=t??new Rect}}class TextChar{#t=[];#r=Vector2.zero;#e=Vector2.zero;#s=new Color(1,1,1);trisCount=0;textureArray=[];localVertexArray=[];colorArray=[];parent=null;get vertexArray(){return this.#t}set vertexArray(t){this.#t=t,this.#o()}get position(){return this.#r}set position(t){this.#r=t,this.#o()}get offset(){return this.#e}set offset(t){this.#e=t,this.#o()}get color(){return this.#s}set color(t){this.#s=t;const r=[t.r,t.g,t.b,t.a];this.colorArray=[...r,...r,...r,...r,...r,...r],this.parent.RemapGraphicArrays()}#o(){const t=this.#r.x+this.#e.x,r=this.#r.y-this.#e.y;let e=[...this.#t];for(let s=0;s<this.trisCount;s++){const o=2*s;e[o]+=t,e[o+1]-=r}this.localVertexArray=e}}class Text extends Renderer{#t=!1;#e=!1;#i=!1;#s=!1;#h=0;#r=0;#o=0;#n=8.5;#l=1.5;#a=1;#c="";#u=[];#g=[];#d=[];#f=[];#x=Vector2.zero;#w=Vector2.zero;#p=new Bounds;#m=Vector2.one;#V=null;#y=null;#z=null;characters=[];pivot=new Vector2(.5,.5);get meshChanged(){return this.#t}get bounds(){return new Bounds(this.#p.center,this.#p.size)}get fontSize(){return this.#a}set fontSize(t){this.#a=t,this.#v()}get font(){return this.#V}set font(t){this.#V=t,this.#A(),this.#v()}get width(){return this.#n}set width(t){this.#n=t,this.#t=!0}get height(){return this.#l}set height(t){this.#l=t,this.#t=!0}get overflowWidth(){return this.#i}set overflowWidth(t){this.#i=t,this.#t=!0}get overflowHeight(){return this.#s}set overflowHeight(t){this.#s=t,this.#t=!0}get horizontalAlign(){return this.#h}set horizontalAlign(t){this.#h=t,this.#e=!0}get verticalAlign(){return this.#r}set verticalAlign(t){this.#r=t,this.#e=!0}get text(){return this.#c}set text(t){this.#c!==t&&(this.#c=t,this.#A())}get pixelPerUnit(){return this.font.texture.pixelPerUnit}get localToWorldMatrix(){return Matrix3x3.Multiply(this.transform.localToWorldMatrix,Matrix3x3.TRS(Vector2.Scale(this.pivot,new Vector2(-this.#n,-this.#l)),0,this.#m))}get lineHeight(){return this.#z}set lineHeight(t){this.#z=t,this.#t=!0}#M=class{lineBreak=!1;space=!1;width=0;height=0;sprites=[];Add(t){this.sprites.push(t)}Update(){let t=0,e=0;for(let i=0;i<this.sprites.length;i++){const s=this.sprites[i].rect;t+=s.width,e<s.height&&(e=s.height)}this.width=t,this.height=e}};constructor(t,e){super(e),this.Reload(),this.font=t}#G(t,e){const i=t.vertices,s=i[0],h=t.triangles;let r=[],o=[];for(let t=0;t<h.length;t++){const e=i[h[t]],n=2*t;r[n]=e.x-s.x,r[n+1]=e.y-s.y,o[n]=e.x,o[n+1]=e.y}const n=new TextChar;return n.parent=this,n.trisCount=h.length,n.vertexArray=r,n.textureArray=o,n.position=e,n.color=this.#y.Duplicate(),n}#A(){const t=this.#c;let e=[new this.#M];for(let i=0;i<t.length;i++){const s="\n"===t[i];let h=null;s||(h=this.font.GetGlyph(t[i]))," "!==t[i]?s?(0!==i&&(e[e.length-1].Update(),e.push(new this.#M)),e[e.length-1].lineBreak=!0,e.push(new this.#M)):(e[e.length-1].space&&(e[e.length-1].Update(),e.push(new this.#M)),e[e.length-1].Add(h)):(0===i||e[e.length-1].space||(e[e.length-1].Update(),e.push(new this.#M)),e[e.length-1].Add(h),e[e.length-1].space=!0)}e[e.length-1].Update(),this.#u=e,this.#t=!0}#v(){const t=this.pixelPerUnit/this.#a,e=this.font.texture,i=e.width,s=e.height;this.#m=Vector2.Scale(i>s?new Vector2(1,s/i):new Vector2(i/s,1),i>s?i/t:s/t),this.#t=!0}#S(t,e){const i=this.#V.texture.width;let s=e.x,h=[];for(let r=0;r<t.length;r++){const o=t[r],n=o.rect.width/i,l=this.#G(o,new Vector2(s,-e.y));h.push(l),s+=n}return h}#b(){const t=this.pixelPerUnit/this.#a,e=this.#n/(this.#V.texture.width/t),i=this.#l/(this.#V.texture.height/t),s=this.#g,h=.5*(i-this.#o)*this.#r,r=this.characters;let o=0,n=0,l=s[0].count,a=.5*(e-s[0].size)*this.#h,c=[],u=[],g=[],d=[],f=[];for(let t=0;t<r.length;t++){if(0!==this.horizontalAlign){if(0===l){n++;const t=s[n];l=t.count,a=.5*(e-t.size)*this.#h}l--}r[t].offset=new Vector2(a,h);const i=r[t].trisCount,x=o+i;c.push(...r[t].localVertexArray),u.push(...r[t].textureArray),g.push(...r[t].colorArray),f.push(o),o=x,d.push(i-1)}this.material.SetBuffer(this.geometryBufferID,c),this.material.SetBuffer(this.textureBufferID,u),this.material.SetBuffer(this.colorBufferID,g),this.#d=d,this.#f=f,this.#e=!1}RecalcBounds(){const t=this.pivot,e=this.#w;let i=Vector2.zero;switch(this.horizontalAlign){case 0:i.x+=e.x;break;case 2:i.x-=e.x}switch(this.verticalAlign){case 0:i.y-=e.y;break;case 2:i.y+=e.y}const s=new Bounds(Vector2.zero,this.#x),h=this.transform.localToWorldMatrix,r=Matrix3x3.Multiply(h,Matrix3x3.Translate(s.min)),o=Matrix3x3.Multiply(h,Matrix3x3.Translate(new Vector2(s.min.x,s.max.y))),n=Matrix3x3.Multiply(h,Matrix3x3.Translate(new Vector2(s.max.x,s.min.y))),l=Matrix3x3.Multiply(h,Matrix3x3.Translate(s.max));s.SetMinMax(new Vector2(Math.min(r.GetValue(2,0),o.GetValue(2,0),n.GetValue(2,0),l.GetValue(2,0)),Math.min(-r.GetValue(2,1),-o.GetValue(2,1),-n.GetValue(2,1),-l.GetValue(2,1))),new Vector2(Math.max(r.GetValue(2,0),o.GetValue(2,0),n.GetValue(2,0),l.GetValue(2,0)),Math.max(-r.GetValue(2,1),-o.GetValue(2,1),-n.GetValue(2,1),-l.GetValue(2,1))));const a=Matrix3x3.Multiply(h,Matrix3x3.Translate(Vector2.Add(i,Vector2.Scale(new Vector2(.5-t.x,.5-t.y),2))));s.center=new Vector2(a.GetValue(2,0),-a.GetValue(2,1)),this.#p=s,super.RecalcBounds()}ForceMeshUpdate(){this.#y=this.color.Duplicate();const t=this.pixelPerUnit/this.#a,e=this.#V.texture.width,i=this.#V.texture.height,s=e/t,h=i/t,r=this.#n/s,o=this.#l/h,n=(this.#z??this.font.lineHeight)/i;let l=0,a=0,c=n,u=[],g=[{size:0,count:0}],d=0;for(let t=0;t<this.#u.length;t++){const s=this.#u[t];if(s.lineBreak){if(!this.#s&&a+2*c>o)break;if(0!==l){const t=g[g.length-1].size;t>d&&(d=t),g.push({size:0,count:0})}a+=c,l=0,c=n;continue}const h=s.width/e,f=!this.#i&&l+h>r;if(0===l&&f&&!s.space){const t=s.sprites;let h=!1;for(let s=0;s<t.length;s++){const f=t[s],x=f.rect.width/e;if(!this.overflowWidth&&l+x>r){if(!this.#s&&a+2*c>o){h=!0;break}const t=g[g.length-1].size;t>d&&(d=t),a+=c,l=0,c=n,g.push({size:0,count:0})}const w=f.rect.height/i;if(!this.#V.forcedLineHeight&&c<w&&(c=w),!this.#s&&a+c>o){h=!0;break}const p=this.#G(f,new Vector2(l,-a));u.push(p),l+=x,g[g.length-1].size+=x,g[g.length-1].count++}if(h)break;continue}if(f){if(!this.#s&&a+2*c>o)break;const t=g[g.length-1].size;t>d&&(d=t),a+=c,l=0,c=n,g.push({size:0,count:0})}const x=s.height/i;if(!this.#V.forcedLineHeight&&c<x&&(c=x),!this.#s&&a+c>o)break;if(s.space){if(0===l)continue;if(!this.#i){const i=this.#u[t+1];if(null==i||l+h+i.width/e>r){const t=g[g.length-1].size;t>d&&(d=t),a+=c,l=0,c=n,g.push({size:0,count:0});continue}}}const w=this.#S(s.sprites,new Vector2(l,a));u.push(...w),l+=h,g[g.length-1].size+=h,g[g.length-1].count+=s.sprites.length}const f=g[g.length-1].size;f>d&&(d=f),a+=n,this.characters=u,this.#g=g,this.#o=a;const x=new Vector2(d*s,(this.#s?a:Math.min(a,o))*h);this.#x=x,this.#w=Vector2.Scale(new Vector2(x.x-r*s,o*h-x.y),.5),this.#t=!1,this.#b(),super.ForceMeshUpdate()}RemapGraphicArrays(){this.#e=!0}Render(){this.#y.Equals(this.color)||this.ForceMeshUpdate();const t=this.characters;if(0===t.length)return;this.#e&&this.#b();const e=this.material.gl,i=this.renderMatrix;this.material.SetMatrix(this.uMatrixID,i.matrix[0][0],i.matrix[0][1],i.matrix[0][2],i.matrix[1][0],i.matrix[1][1],i.matrix[1][2],i.matrix[2][0],i.matrix[2][1],i.matrix[2][2]),this.material.SetAttribute(this.aVertexPosID,this.geometryBufferID),this.material.SetAttribute(this.aTexturePosID,this.textureBufferID),this.material.SetAttribute(this.aColorID,this.colorBufferID),e.useProgram(this.material.program),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.font.texture.GetNativeTexture()),Application.gl_multidraw.multiDrawArraysWEBGL(e.TRIANGLE_STRIP,this.#f,0,this.#d,0,t.length),e.useProgram(null)}Duplicate(){const t=new Text(this.font,this.material.Duplicate());return t.color=this.color.Duplicate(),t.sortingLayer=this.sortingLayer,t.sortingOrder=this.sortingOrder,t.overflowWidth=this.overflowWidth,t.overflowHeight=this.overflowHeight,t.width=this.width,t.height=this.height,t.text=this.text,t.pivot=this.pivot,t.fontSize=this.fontSize,t.horizontalAlign=this.horizontalAlign,t.verticalAlign=this.verticalAlign,t.lineHeight=this.lineHeight,t}}class TextAnchorX{static get Left(){return 0}static get Center(){return 1}static get Right(){return 2}}class TextAnchorY{static get Top(){return 0}static get Middle(){return 1}static get Bottom(){return 2}}