class Viewport extends GameBehavior{#e=0;Awake(){Crispixels.effect=!0}Update(){if(Input.GetKeyDown(KeyCode.F2)||GamepadInput.GetKeyDown(KeyCode.Select))switch(this.#e++,3===this.#e&&(this.#e=0),this.#e){case 0:FPSMeter.enabled=!1,FPSMeter.msMode=!1;break;case 1:FPSMeter.enabled=!0;break;case 2:FPSMeter.msMode=!0}(Input.GetKeyDown(KeyCode.F4)||GamepadInput.GetKeyDown(KeyCode.Start))&&(Window.fullscreen=!Window.fullscreen)}LateUpdate(){if(3===Options.resolution){const e=window.innerWidth*window.devicePixelRatio,t=window.innerHeight*window.devicePixelRatio,i=Math.max(e<t?e/480:t/432,1);Window.SetResolution(480*i,432*i)}FPSMeter.Update()}}class TitleScreen extends GameBehavior{#e=!1;#t=!1;#i=0;#s=0;#n=1;#a=-1;#o=0;#r=0;#l=()=>{};#c=null;#h=null;#d=null;#b=null;#m=null;Start(){this.#c=GameObject.Find("choicebox"),this.#c.transform.scale=new Vector2(1,0),this.#h=GameObject.Find("choicebox_content"),this.#d=GameObject.Find("selector"),this.#b=this.#d.GetComponent("SpriteRenderer"),this.#o=this.#d.transform.position.y,this.#h.SetActive(!1),this.#m=GameObject.Find("options").GetComponent("Options"),Transitioner.instance.onFadeIn.Add((()=>{this.#e=!0,AudioManager.instance.PlayBGM("title")})),Transitioner.instance.FadeIn(),this.Enable()}Enable(){this.#i=.125}#p(e){this.#h.SetActive(!1),this.#s=.125,null!=e&&(this.#l=e)}Update(){if(!this.#e)return;if(this.#i>0&&(this.#i-=Time.deltaTime,this.#c.transform.scale=new Vector2(1,Math.min((.125-this.#i)/.125,1)),this.#i<=0))return this.#t=!0,void this.#h.SetActive(!0);if(this.#s>0)return this.#s-=Time.deltaTime,this.#c.transform.scale=new Vector2(1,Math.max(this.#s/.125,0)),void(this.#s<=0&&(this.#t=!1,this.#l(),this.#l=()=>{}));if(!this.#t)return;this.#n=Math.Clamp(this.#n+1.75*Time.deltaTime*this.#a,.5,1),.5===this.#n?this.#a=1:1===this.#n&&(this.#a=-1),this.#b.color.a=this.#n;let e=!1;if(InputManager.IsRepeated("down")?(this.#r++,2===this.#r&&InputManager.Clear(),this.#r>2&&(this.#r=0),e=!0):InputManager.IsRepeated("up")&&(this.#r--,0===this.#r&&InputManager.Clear(),this.#r<0&&(this.#r=2),e=!0),InputManager.GetKeyDown("z"))switch(AudioManager.instance.PlayConfirm(),this.#r){case 0:this.#p((()=>{AudioManager.instance.bgm.Stop(),Transitioner.instance.onFadeOut.Add((async()=>{await SceneManager.Load(1),SceneManager.SetActiveScene(1)})),Transitioner.instance.FadeOut(1)}));break;case 1:this.#p((()=>{}));break;case 2:this.#p((()=>{this.#m.Enable()}))}e&&(this.#d.transform.position=new Vector2(this.#d.transform.position.x,this.#o-this.#b.bounds.size.y*this.#r),AudioManager.instance.PlaySelect())}}class AudioManager extends GameBehavior{static#t=100;static#e=100;static onBGMVolumeChange=new DelegateEvent;static onSEVolumeChange=new DelegateEvent;static instance=null;static get bgmVolume(){return this.#t}static set bgmVolume(t){this.#t=t,this.onBGMVolumeChange.Invoke(t/100)}static get seVolume(){return this.#e}static set seVolume(t){this.#e=t,this.onSEVolumeChange.Invoke(t/100)}#i=null;#o=null;#l=null;bgm=null;Start(){AudioManager.instance=this;const t=this.GetComponents("AudioSource");this.bgm=t[0],this.bgm.volume=.24,AudioManager.onBGMVolumeChange.Add((t=>this.bgm.volume=.24*t)),this.#i=t[1],this.#i.volume=.4,this.#o=t[2],this.#o.volume=.4,this.#l=t[3],this.#l.volume=.6,AudioManager.onSEVolumeChange.Add((t=>{this.#i.volume=.4*t,this.#o.volume=.4*t,this.#l.volume=.6*t}))}PlayBGM(t){this.bgm.clip=Resources.Find(`audio/bgm/${t}`),this.bgm.Play()}PlaySelect(){Application.isMobilePlatform?this.#i.PlayOneShot(this.#i.clip):(this.#i.Stop(),this.#i.Play())}PlayConfirm(){Application.isMobilePlatform?this.#o.PlayOneShot(this.#o.clip):(this.#o.Stop(),this.#o.Play())}PlayNo(){Application.isMobilePlatform?this.#l.PlayOneShot(this.#l.clip):(this.#l.Stop(),this.#l.Play())}}class Transitioner extends GameBehavior{static instance=null;#e=0;#i=0;#t=0;#n=0;#s=null;onFadeIn=new DelegateEvent;onFadeOut=new DelegateEvent;Awake(){Transitioner.instance=this,this.#s=this.GetComponent("SpriteRenderer")}FadeIn(e=.5){this.#e=e,this.#i=e}FadeOut(e=.5){this.#t=e,this.#n=e}Update(){return this.#e>0?(this.#e-=Time.deltaTime,this.#s.color.a=Math.max(this.#e/this.#i,0),void(this.#e<=0&&(this.onFadeIn.Invoke(),this.onFadeIn.RemoveAll()))):this.#t>0?(this.#t-=Time.deltaTime,this.#s.color.a=Math.min((this.#n-this.#t)/this.#n,1),void(this.#t<=0&&(this.onFadeOut.Invoke(),this.onFadeOut.RemoveAll()))):void 0}}class Options extends GameBehavior{static run=!1;static textSkip=!1;static resolution=1;static windowSize=0;static fps=5;#e=!1;#t=0;#n=0;#i=1;#s=-1;#a=0;#o=0;#r=null;#l=null;#c=null;#p=null;#d=null;#h=null;#u=null;Start(){this.transform.scale=new Vector2(1,0),this.#r=GameObject.Find("camera").GetComponent("TitleScreen"),this.#l=GameObject.Find("options_content"),this.#c=GameObject.Find("options_selector"),this.#p=this.#c.GetComponent("SpriteRenderer"),this.#a=this.#c.transform.position.y,this.#d=GameObject.Find("options_data").GetComponent("Text"),this.#h=GameObject.Find("options_leftarrow"),this.#u=GameObject.Find("options_rightarrow"),this.#l.SetActive(!1),this.#w()}Update(){if(this.#t>0&&(this.#t-=Time.deltaTime,this.transform.scale=new Vector2(1,Math.min((.125-this.#t)/.125,1)),this.#t<=0))return this.#e=!0,void this.#l.SetActive(!0);if(this.#n>0)return this.#n-=Time.deltaTime,this.transform.scale=new Vector2(1,Math.max(this.#n/.125,0)),void(this.#n<=0&&(this.#e=!1,this.#o=0,this.#c.transform.position=new Vector2(this.#c.transform.position.x,this.#a),this.#g(),this.#r.Enable()));if(!this.#e)return;InputManager.GetKeyDown("x")&&this.#I(),this.#i=Math.Clamp(this.#i+1.75*Time.deltaTime*this.#s,.5,1),.5===this.#i?this.#s=1:1===this.#i&&(this.#s=-1),this.#p.color.a=this.#i;let e=!1;switch(InputManager.IsRepeated("down")&&(this.#o++,8===this.#o&&InputManager.Clear(),this.#o>8&&(this.#o=0),e=!0),InputManager.IsRepeated("up")&&(this.#o--,0===this.#o&&InputManager.Clear(),this.#o<0&&(this.#o=8),e=!0),this.#o){case 0:this.#S();break;case 1:this.#f();break;case 2:this.#m();break;case 3:this.#M();break;case 4:this.#x();break;case 5:this.#O();break;case 6:this.#b();break;case 7:this.#A();break;case 8:this.#y()}if(e){let e=this.#o;this.#o>=2&&(e+=2),this.#o>=7&&(e+=2),this.#c.transform.position=new Vector2(this.#c.transform.position.x,this.#a-this.#p.bounds.size.y*e),AudioManager.instance.PlaySelect(),this.#g()}}Enable(){this.#t=.125}#I(){this.#l.SetActive(!1),this.#n=.125,AudioManager.instance.PlayNo()}#g(){let e=new Vector2(1.38,2.61);if(0===this.#o)e=new Vector2(Options.run?1.32:1.2,Options.run?2.68:2.8);else if(1===this.#o&&Options.textSkip||2===this.#o&&Window.fullscreen||6===this.#o&&Crispixels.effect)e=new Vector2(1.5,2.52);else if(3===this.#o)switch(Options.resolution){case 2:case 3:e=new Vector2(.2,3.8);break;case 4:e=new Vector2(0,4);break;default:e=new Vector2(.5,3.5)}else if(4===this.#o)switch(Options.windowSize){case 2:case 3:e=new Vector2(.2,3.8);break;case 4:e=new Vector2(.6,3.4);break;default:e=new Vector2(.5,3.5)}else if(5===this.#o){switch(Options.fps){case 3:e=new Vector2(1.3,2.7);break;case 4:e=new Vector2(.6,3.4);break;case 5:e=new Vector2(.5,5.1);break;default:e=new Vector2(1.5,2.5)}0===Options.fps&&(e.x=5.1)}else 7===this.#o&&0===AudioManager.bgmVolume||8===this.#o&&0===AudioManager.seVolume?e=new Vector2(5.1,2.34):7===this.#o&&100===AudioManager.bgmVolume||8===this.#o&&100===AudioManager.seVolume?e.y=5.1:7!==this.#o&&8!==this.#o||(e=new Vector2(1.5,2.52));this.#h.transform.localPosition=new Vector2(e.x,0),this.#u.transform.localPosition=new Vector2(e.y,0)}#w(){const toggle=e=>e?"On":"Off",e=Options.resolution+1,t=e>4?"Match "+(Window.fullscreen?"Screen":"Window"):`${480*e} x ${432*e}`,n=Options.windowSize+1,i=n>4?"Whatever":`${480*n} x ${432*n}`;let s=Application.vSyncCount>0?"V-Synced":Application.targetFrameRate;s<0&&(s="Unlimited"),this.#d.text=`${Options.run?"Run":"Walk"}\n${toggle(Options.textSkip)}\n\n\n${toggle(Window.fullscreen)}\n${t}\n${i}\n${s}\n${toggle(Crispixels.effect)}\n\n\n${AudioManager.bgmVolume}\n${AudioManager.seVolume}`,this.#g()}#S(){(InputManager.GetKeyDown("left")||InputManager.GetKeyDown("right")||InputManager.GetKeyDown("z"))&&(Options.run=!Options.run,this.#w(),AudioManager.instance.PlaySelect())}#f(){(InputManager.GetKeyDown("left")||InputManager.GetKeyDown("right")||InputManager.GetKeyDown("z"))&&(Options.textSkip=!Options.textSkip,this.#w(),AudioManager.instance.PlaySelect())}#m(){(InputManager.GetKeyDown("left")||InputManager.GetKeyDown("right")||InputManager.GetKeyDown("z"))&&(Window.fullscreen=!Window.fullscreen,this.#w(),AudioManager.instance.PlaySelect())}#M(){let e=!1;if((InputManager.IsRepeated("right")||InputManager.IsRepeated("z"))&&(Options.resolution++,Options.resolution>4&&(Options.resolution=1),e=!0),InputManager.IsRepeated("left")&&(Options.resolution--,Options.resolution<1&&(Options.resolution=4),e=!0),e){if(Options.resolution<4){const e=Options.resolution+1;Window.SetResolution(480*e,432*e)}this.#w(),AudioManager.instance.PlaySelect()}}#x(){let e=!1;if((InputManager.IsRepeated("right")||InputManager.IsRepeated("z"))&&(Options.windowSize++,Options.windowSize>4&&(Options.windowSize=0),e=!0),InputManager.IsRepeated("left")&&(Options.windowSize--,Options.windowSize<0&&(Options.windowSize=4),e=!0),!e)return;let t=Options.windowSize+1;5!==t&&(480*t>window.screen.width||432*t>window.screen.height)&&(InputManager.IsRepeated("left")?(Options.windowSize=0,t=1):(Options.windowSize=4,t=5)),t<5?(Window.resizable=!1,Window.SetWindowSize(480*t,432*t)):Window.resizable=!0,this.#w(),AudioManager.instance.PlaySelect()}#O(){let e=!1;if(Options.fps<5&&(InputManager.IsRepeated("right")||InputManager.IsRepeated("z"))&&(Options.fps++,e=!0),Options.fps>0&&InputManager.IsRepeated("left")&&(Options.fps--,e=!0),!e)return;const t=[30,60,90,120,-1];Options.fps>4?Application.vSyncCount=1:(Application.vSyncCount=0,Application.targetFrameRate=t[Options.fps]),this.#w(),AudioManager.instance.PlaySelect()}#b(){(InputManager.GetKeyDown("left")||InputManager.GetKeyDown("right")||InputManager.GetKeyDown("z"))&&(Crispixels.effect=!Crispixels.effect,this.#w(),AudioManager.instance.PlaySelect())}#A(){const e=+(InputManager.IsRepeated("right")||InputManager.IsRepeated("z"))-+InputManager.IsRepeated("left");0===e||e<0&&0===AudioManager.bgmVolume||e>0&&100===AudioManager.bgmVolume||(AudioManager.bgmVolume=Math.Clamp(AudioManager.bgmVolume+20*e,0,100),this.#w(),AudioManager.instance.PlaySelect())}#y(){const e=+(InputManager.IsRepeated("right")||InputManager.IsRepeated("z"))-+InputManager.IsRepeated("left");0===e||e<0&&0===AudioManager.seVolume||e>0&&100===AudioManager.seVolume||(AudioManager.seVolume=Math.Clamp(AudioManager.seVolume+20*e,0,100),this.#w(),AudioManager.instance.PlaySelect())}}class InputManager extends GameBehavior{static instance=null;#t=!0;#e=!1;#s=0;#i=.4;#n=.1;#h=0;#r=[];#a=null;#p=null;#o=null;#d=null;#u=null;#l=null;#c=null;#g=class{#y=[];#I=[];#B=[];#m=[];name=null;get pressed(){for(let t=0;t<this.#y.length;t++)if(Input.GetKey(this.#y[t]))return!0;for(let t=0;t<this.#I.length;t++)if(GamepadInput.GetKey(this.#I[t]))return!0;for(let t=0;t<this.#B.length;t++)if(this.#B[t].state)return!0;for(let t=0;t<this.#m.length;t++)if(this.#m[t].pressed)return!0;return!1}get pressedDown(){for(let t=0;t<this.#y.length;t++)if(Input.GetKeyDown(this.#y[t]))return!0;for(let t=0;t<this.#I.length;t++)if(GamepadInput.GetKeyDown(this.#I[t]))return!0;for(let t=0;t<this.#B.length;t++)if(this.#B[t].state&&!this.#B[t].lastState)return!0;for(let t=0;t<this.#m.length;t++)if(this.#m[t].pressedDown)return!0;return!1}get pressedUp(){for(let t=0;t<this.#y.length;t++)if(Input.GetKeyUp(this.#y[t]))return!0;for(let t=0;t<this.#I.length;t++)if(GamepadInput.GetKeyUp(this.#I[t]))return!0;for(let t=0;t<this.#B.length;t++)if(!this.#B[t].state&&this.#B[t].lastState)return!0;for(let t=0;t<this.#m.length;t++)if(this.#m[t].pressedUp)return!0;return!1}constructor(t){this.name=t}KeyboardInput(t){this.#y.push(t)}GamepadInput(t){this.#I.push(t)}GamepadAxis(t,e,s){this.#B.push({name:t,dir:e,pull:s,state:!1,lastState:!1})}TouchInput(t){this.#m.push(t)}Update(){for(let t=0;t<this.#B.length;t++){const e=this.#B[t];e.dir>0?e.state=GamepadInput.GetAxis(e.name)>=e.pull:e.state=GamepadInput.GetAxis(e.name)<=-e.pull}}UpdateEnd(){for(let t=0;t<this.#B.length;t++)this.#B[t].lastState=this.#B[t].state}};static FindKey(t){return this.instance.FindKey(t)}static GetKey(t){return this.instance.GetKey(t)}static GetKeyDown(t){return this.instance.GetKeyDown(t)}static GetKeyUp(t){return this.instance.GetKeyUp(t)}static IsPressed(t){return this.instance.IsPressed(t)}static IsTriggered(t){return this.instance.IsTriggered(t)}static IsLongPressed(t){return this.instance.IsLongPressed(t)}static IsRepeated(t){return this.instance.IsRepeated(t)}static Clear(){this.instance.Clear()}#f(t){this.#t!==t&&(this.#a.SetActive(t),this.#p.SetActive(t),this.#o.SetActive(t),this.#d.SetActive(t),this.#u.SetActive(t),this.#l.SetActive(t),this.#t=t)}Start(){InputManager.instance=this,HTMLUI.referenceResolution=new Vector2(480,432),HTMLUI.scaleMode=HUIScaleMode.Screen,HTMLUI.matchMode=HUIMatchMode.Shrink,this.#a=new HTMLUI.Button(Resources.Find("ctrls/f")),this.#a.position=new Vector2(2.25,3),this.#a.horizontalOrigin=HUIOriginX.Left,this.#a.verticalOrigin=HUIOriginY.Bottom,this.#a.registerSlide=!0,this.#p=new HTMLUI.Button(Resources.Find("ctrls/f")),this.#p.position=new Vector2(2.25,1),this.#p.rotation=180,this.#p.horizontalOrigin=HUIOriginX.Left,this.#p.verticalOrigin=HUIOriginY.Bottom,this.#p.registerSlide=!0,this.#o=new HTMLUI.Button(Resources.Find("ctrls/f")),this.#o.position=new Vector2(1.25,2),this.#o.rotation=90,this.#o.horizontalOrigin=HUIOriginX.Left,this.#o.verticalOrigin=HUIOriginY.Bottom,this.#o.registerSlide=!0,this.#d=new HTMLUI.Button(Resources.Find("ctrls/f")),this.#d.position=new Vector2(3.25,2),this.#d.rotation=270,this.#d.horizontalOrigin=HUIOriginX.Left,this.#d.verticalOrigin=HUIOriginY.Bottom,this.#d.registerSlide=!0,this.#u=new HTMLUI.Button(Resources.Find("ctrls/z")),this.#u.position=new Vector2(-2.5,1.5),this.#u.horizontalOrigin=HUIOriginX.Right,this.#u.verticalOrigin=HUIOriginY.Bottom,this.#l=new HTMLUI.Button(Resources.Find("ctrls/x")),this.#l.position=new Vector2(-1.25,2.25),this.#l.horizontalOrigin=HUIOriginX.Right,this.#l.verticalOrigin=HUIOriginY.Bottom,Application.isMobilePlatform||this.#f(!1),this.#r=[new this.#g("up"),new this.#g("down"),new this.#g("left"),new this.#g("right"),new this.#g("z"),new this.#g("x")],this.#r[0].KeyboardInput(KeyCode.ArrowUp),this.#r[0].GamepadInput(KeyCode.DpadUp),this.#r[0].GamepadAxis("left stick vertical",1,.5),this.#r[0].TouchInput(this.#a),this.#r[1].KeyboardInput(KeyCode.ArrowDown),this.#r[1].GamepadInput(KeyCode.DpadDown),this.#r[1].GamepadAxis("left stick vertical",-1,.5),this.#r[1].TouchInput(this.#p),this.#r[2].KeyboardInput(KeyCode.ArrowLeft),this.#r[2].GamepadInput(KeyCode.DpadLeft),this.#r[2].GamepadAxis("left stick horizontal",-1,.5),this.#r[2].TouchInput(this.#o),this.#r[3].KeyboardInput(KeyCode.ArrowRight),this.#r[3].GamepadInput(KeyCode.DpadRight),this.#r[3].GamepadAxis("left stick horizontal",1,.5),this.#r[3].TouchInput(this.#d),this.#r[4].KeyboardInput(KeyCode.Z),this.#r[4].GamepadInput(KeyCode.SouthButton),this.#r[4].TouchInput(this.#u),this.#r[5].KeyboardInput(KeyCode.X),this.#r[5].GamepadInput(KeyCode.EastButton),this.#r[5].TouchInput(this.#l)}EarlyUpdate(){HTMLUI.Update();let t=!1;for(let e=0;e<this.#r.length;e++){const s=this.#r[e];s.Update(),s.pressedDown&&(this.#c=s.name,this.#s=0,this.#h=0),this.#c===s.name&&s.pressed&&(t=!0)}t||(this.#c=null),null!=this.#c&&(this.#e=!1,this.#s>=this.#h&&(this.#e=!0,this.#h=this.#s+this.#n),this.#s+=Time.deltaTime)}Update(){this.#t?((Input.anyKeyDown||GamepadInput.anyKey)&&this.#f(!1),this.#a.pressedDown?this.#a.opacity=.7:this.#a.pressedUp&&(this.#a.opacity=1),this.#p.pressedDown?this.#p.opacity=.7:this.#p.pressedUp&&(this.#p.opacity=1),this.#o.pressedDown?this.#o.opacity=.7:this.#o.pressedUp&&(this.#o.opacity=1),this.#d.pressedDown?this.#d.opacity=.7:this.#d.pressedUp&&(this.#d.opacity=1),this.#u.pressedDown?this.#u.opacity=.7:this.#u.pressedUp&&(this.#u.opacity=1),this.#l.pressedDown?this.#l.opacity=.7:this.#l.pressedUp&&(this.#l.opacity=1)):Input.touchCount>0&&this.#f(!0)}LateUpdate(){HTMLUI.UpdateEnd();for(let t=0;t<this.#r.length;t++)this.#r[t].UpdateEnd()}OnDisable(){HTMLUI.Clear()}FindKey(t){return this.#r.find((e=>e.name===t))}GetKey(t){return this.FindKey(t).pressed}GetKeyDown(t){return this.FindKey(t).pressedDown}GetKeyUp(t){return this.FindKey(t).pressedUp}IsPressed(t){return this.GetKey(t)}IsTriggered(t){return this.GetKeyDown(t)}IsLongPressed(t){return this.#c===t&&this.#s>=this.#i}IsRepeated(t){return this.IsTriggered(t)||this.IsLongPressed(t)&&this.#e}Clear(){this.#c=null}}class RPGMovement extends GameBehavior{#e=!0;#t=!1;#o=0;#r=0;#i=Vector2.zero;#s=Vector2.zero;#a=Vector2.zero;_moveDir=Vector2.zero;get _shouldMove(){return this.updateMovement}updateMovement=!0;speed=1;speedScale=1;tileSize=new Vector2(.5,.5);onMoveStart=new DelegateEvent;onStop=new DelegateEvent;#n(){this._moveDir=this.#i,this.#s=Vector2.Scale(this._moveDir,this.tileSize)}#h(){this.#t||(this.#t=!0,this.onMoveStart.Invoke());const e=Vector2.Add(this.transform.position,Vector2.Scale(this._moveDir,Time.deltaTime*this.#r));if(Vector2.Abs(Vector2.Subtract(e,this.#a)).Greater(Vector2.Abs(this.#s)))return this.#i=Vector2.zero,this._moveDir=Vector2.zero,this.transform.position=Vector2.Add(this.#a,this.#s),this.#t=!1,this.#e=!0,this._OnStop(),void this.onStop.Invoke();this.transform.position=e,this._OnMove()}Update(){this._moveDir.Equals(Vector2.zero)&&(this._OnMovementGet(),this.#n(),this.#o=this.speedScale,this.#r=this.speed*this.#o,this.#a=this.transform.position),this._moveDir.Equals(Vector2.zero)?(this.#e=!0,this._OnStay()):this._shouldMove&&this.#h()}_OnMovementGet(){}_OnMove(){}_OnStop(){}_OnStay(){}MoveTowards(e){this.#e&&(this.#e=!0,this.#i=Vector2.Clamp(e,Vector2.Scale(Vector2.one,-1),Vector2.one))}}class CharController extends RPGMovement{#e=[];#t=null;#i=!1;#n=!1;#r=0;#s=0;Start(){super.Start()}Update(){this.#a(),super.Update()}_OnMovementGet(){this.#n=!1;const e=new Vector2(+InputManager.GetKey("right")-+InputManager.GetKey("left"),+InputManager.GetKey("up")-+InputManager.GetKey("down"));0!==e.x?this.#r++:0!==this.#r&&(this.#r=0),0!==e.y?this.#s++:0!==this.#s&&(this.#s=0),Vector2.Abs(e).Equals(Vector2.one)&&(this.#r>this.#s?e.x=0:e.y=0),this.MoveTowards(e),this.speedScale=this.#i?2:1}_OnMove(){this.#n=!0}#a(){this.#i=InputManager.GetKey("x")}}class CameraController extends Viewport{#t=null;#a=null;clampMin=new Vector2(-3.75,-26.75);clampMax=new Vector2(16.25,4.25);Start(){this.#t=this.GetComponent("Camera"),this.#a=GameObject.Find("char_yoki").transform}LateUpdate(){const t=this.#a.position,a=new Vector2(Math.Clamp(t.x,this.clampMin.x,this.clampMax.x),Math.Clamp(t.y,this.clampMin.y,this.clampMax.y));this.transform.position=a,super.LateUpdate()}}class Test extends GameBehavior{#t=null;Start(){this.#t=this.GetComponent("Animator")}Update(){Input.GetMouseButtonDown(0)&&this.#t.SetTrigger("toggle")}}