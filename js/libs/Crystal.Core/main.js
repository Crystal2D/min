const AsyncFunction=(async()=>{}).constructor;class DelegateEvent{#l=[];Add(l){return this.#l.push(l),l}Remove(l){const s=this.#l.indexOf(l);s<0||this.#l.splice(s,1)}RemoveAll(){this.#l=[]}Invoke(...l){for(let s=0;s<this.#l.length;s++)this.#l[s](...l)}}Application.Bind((async()=>{await SceneManager.Load(0),SceneManager.SetActiveScene(0)}),(()=>{Input.Terminate(),SceneManager.Unload(),Application.htmlCanvas.style.display="none"})),Application.wantsToQuit=new DelegateEvent,Application.unloading=new DelegateEvent,Application.quitting=new DelegateEvent;Object.prototype.name=null,Object.prototype.toString=function(){return this.name};class Resources{static#e=[];static#t=[];static async#a(name,type,data){const dat=data??{};let object=null;const foundClass=CrystalEngine.Inner.GetClassOfType(type,1);if(null==foundClass)return new Object;const construction=foundClass.construction,properties=foundClass.args;if(null!=construction){const e=new AsyncFunction("data","toObject",construction);object=await e(dat,(async(e,t)=>await SceneManager.CreateObject(e,t)))}for(let i=0;i<properties.length;i++){if("object"!=typeof properties[i]||void 0===eval(`dat.${properties[i].name}`))continue;let subObj=null;if(null!=properties[i].evaluation){const evalCall=new AsyncFunction("data",properties[i].evaluation);subObj=await evalCall(eval(`dat.${properties[i].name}`))}else if(null!=properties[i].evalType){const evalCall=new AsyncFunction("data",properties[i].evalType),objType=await evalCall(eval(`dat.${properties[i].name}`));subObj=await SceneManager.CreateObject(objType,eval(`dat.${properties[i].name}`))}else subObj=["boolean","number","string","object"].includes(properties[i].type)?eval(`dat.${properties[i].name}`):"array"===properties[i].type?await SceneManager.CreateObjectArray(eval(`dat.${properties[i].name}`)):await SceneManager.CreateObject(properties[i].type,eval(`dat.${properties[i].name}`));eval(`object.${properties[i].name} = subObj`)}return null!=name&&(object.name=name),object}static Set(e){this.UnloadAll(),this.#e=e}static Unload(...e){for(let t=0;t<e.length;t++){const a=this.#t.find((a=>a.path===e[t]));if(null==a)continue;const s=this.#t.indexOf(a);this.#t.splice(s,1)}}static UnloadAll(){this.#t=[]}static Find(e){const t=this.#t.find((t=>t.path===e));return null!=t?t.obj:{}}static async Load(...e){for(let t=0;t<e.length;t++){const a=this.#e.find((a=>a.path===e[t]));if(null==a||null!=this.#t.find((t=>t.path===e)))continue;const s=await this.#a(e[t].split("/").slice(-1)[0],a.type,a.args);this.#t.push({path:e[t],obj:s})}}}class Debug{static#e=!1;static get isDebugMode(){return this.#e}static Set(e){this.#e=e}}class Time{static frameCount=0;static unscaledTime=0;static unscaledDeltaTime=0;static timeScale=1;static time=0;static deltaTime=0;static maximumDeltaTime=.3333333;static fixedUnscaledTime=0;static fixedUnscaledDeltaTime=0;static fixedTime=0;static fixedDeltaTime=.02}class Input{static#t=!1;static#e=!1;static#i=[];static#s=class{active=!1;lastState=!1;isLetter=!1;name="";code="";constructor(t,e,i){this.name=t,this.code=e,this.isLetter=i??!1}};static#n(t){let e=-1;return this.#i.find(((i,s)=>i.name===t&&(e=s,!0))),e}static#h(t){let e=-1;return this.#i.find(((i,s)=>i.code===(i.isLetter?t.toLowerCase():t)&&(e=s,!0))),e}static Init(){this.#i=[new this.#s("up","ArrowUp"),new this.#s("down","ArrowDown"),new this.#s("left","ArrowLeft"),new this.#s("right","ArrowRight"),new this.#s("shift","Shift"),new this.#s("f4","F4"),new this.#s("f1","F1"),new this.#s("f2","F2"),new this.#s("f3","F3"),new this.#s("f5","F5"),new this.#s("f6","F6"),new this.#s("f7","F7"),new this.#s("f8","F8"),new this.#s("f9","F9"),new this.#s("f10","F10"),new this.#s("f11","F11"),new this.#s("f12","F12"),new this.#s("x","x",!0),new this.#s("z","z",!0)],document.addEventListener("keydown",(t=>{if(!document.hasFocus()||this.#e)return;const e=this.#h(t.key);-1!==e&&(t.preventDefault(),this.#i[e].active=!0)})),document.addEventListener("keyup",(t=>{if(!document.hasFocus()||this.#e)return;const e=this.#h(t.key);-1!==e&&(t.preventDefault(),this.#i[e].active=!1)})),GamepadInput.Init()}static Terminate(){this.#t=!0}static Update(){this.#e||GamepadInput.Update()}static End(){if(!this.#e){for(let t=0;t<this.#i.length;t++)this.#i[t].lastState=this.#i[t].active;GamepadInput.End(),this.#t&&(this.#e=!0)}}static GetKey(t){let e=t;if("string"==typeof t){if(e=this.#n(t),null==e)return!1}else if(t<0||t>=this.#i.length)return;return this.#i[e].active}static GetKeyDown(t){let e=t;if("string"==typeof t){if(e=this.#n(t),null==e)return!1}else if(t<0||t>=this.#i.length)return;return this.#i[e].active&&!this.#i[e].lastState}static GetKeyUp(t){let e=t;if("string"==typeof t){if(e=this.#n(t),null==e)return!1}else if(t<0||t>=this.#i.length)return;return!this.#i[e].active&&this.#i[e].lastState}}class KeyCode{static get ArrowUp(){return 0}static get ArrowDown(){return 1}static get ArrowLeft(){return 2}static get ArrowRight(){return 3}static get Shift(){return 4}static get F4(){return 5}static get F1(){return 6}static get F2(){return 7}static get F3(){return 8}static get F5(){return 9}static get F6(){return 10}static get F7(){return 11}static get F8(){return 12}static get F9(){return 13}static get F10(){return 14}static get F11(){return 15}static get F12(){return 16}static get X(){return 17}static get Z(){return 18}static get SouthButton(){return 0}static get EastButton(){return 1}static get WestButton(){return 2}static get NorthButton(){return 3}static get LeftBumper(){return 4}static get RightBumper(){return 5}static get LeftTrigger(){return 6}static get RightTrigger(){return 7}static get Select(){return 8}static get Start(){return 9}static get LeftStickButton(){return 10}static get RightStickButton(){return 11}static get DpadUp(){return 12}static get DpadDown(){return 13}static get DpadLeft(){return 14}static get DpadRight(){return 15}static get Home(){return 16}}class GamepadInput{static#t=!1;static#e=[];static#s=[];static#i=[];static#a=class{active=!1;lastState=!1;name="";constructor(t){this.name=t}};static#n=class{value=0;name="";constructor(t){this.name=t}};static#h(t){let e=-1;return this.#s.find(((s,i)=>s.name===t&&(e=i,!0))),e}static get isConnected(){return 0!==this.#e.length}static Init(){this.#s=[new this.#a("south button"),new this.#a("east button"),new this.#a("west button"),new this.#a("north button"),new this.#a("left bumper"),new this.#a("right bumper"),new this.#a("left trigger"),new this.#a("right trigger"),new this.#a("select"),new this.#a("start"),new this.#a("left stick button"),new this.#a("right stick button"),new this.#a("dpad up"),new this.#a("dpad down"),new this.#a("dpad left"),new this.#a("dpad right"),new this.#a("home")],this.#i=[new this.#n("left trigger"),new this.#n("right trigger"),new this.#n("left stick horizontal"),new this.#n("left stick vertical"),new this.#n("right stick horizontal"),new this.#n("right stick vertical")],"GamepadEvent"in window?(window.addEventListener("gamepadconnected",(t=>this.#e.push(t.gamepad))),window.addEventListener("gamepaddisconnected",(t=>this.#e.splice(this.#e.indexOf(t.gamepad),1)))):"WebkitGamepadEvent"in window?(window.addEventListener("webkitgamepadconnected",(t=>this.#e.push(t.gamepad))),window.addEventListener("webkitgamepaddisconnected",(t=>this.#e.splice(this.#e.indexOf(t.gamepad),1)))):this.#t=!0}static Update(){if(this.#t){const t=null!=navigator.getGamepads?navigator.getGamepads():null!=navigator.webkitGetGamepads?navigator.webkitGetGamepads():[];this.#e=t.filter((t=>null!=t))}const processButton=t=>t.pressed||t.touched||t.value>0;for(let t=0;t<this.#e.length;t++){const e=navigator.getGamepads()[this.#e[t].index];this.#s[0].active=processButton(e.buttons[0]),this.#s[1].active=processButton(e.buttons[1]),this.#s[2].active=processButton(e.buttons[2]),this.#s[3].active=processButton(e.buttons[3]),this.#s[4].active=processButton(e.buttons[4]),this.#s[5].active=processButton(e.buttons[5]),this.#s[6].active=processButton(e.buttons[6]),this.#s[7].active=processButton(e.buttons[7]),this.#s[8].active=processButton(e.buttons[8]),this.#s[9].active=processButton(e.buttons[9]),this.#s[10].active=processButton(e.buttons[10]),this.#s[11].active=processButton(e.buttons[11]),this.#s[12].active=processButton(e.buttons[12]),this.#s[13].active=processButton(e.buttons[13]),this.#s[14].active=processButton(e.buttons[14]),this.#s[15].active=processButton(e.buttons[15]),this.#s[16].active=processButton(e.buttons[16]),this.#i[0].value=e.buttons[6].value,this.#i[1].value=e.buttons[7].value,this.#i[2].value=e.axes[0],this.#i[3].value=-e.axes[1],this.#i[4].value=e.axes[2],this.#i[5].value=-e.axes[3]}}static End(){for(let t=0;t<this.#s.length;t++)0===this.#e.length&&(this.#s[t].active=!1),this.#s[t].lastState=this.#s[t].active}static GetKey(t){let e=t;if("string"==typeof t){if(e=this.#h(t),null==e)return!1}else if(t<0||t>=this.#s.length)return;return this.#s[e].active}static GetKeyDown(t){let e=t;if("string"==typeof t){if(e=this.#h(t),null==e)return!1}else if(t<0||t>=this.#s.length)return;return this.#s[e].active&&!this.#s[e].lastState}static GetKeyUp(t){let e=t;if("string"==typeof t){if(e=this.#h(t),null==e)return!1}else if(t<0||t>=this.#s.length)return;return!this.#s[e].active&&this.#s[e].lastState}static GetAxis(t){return this.#i.find((e=>e.name===t)).value}static GetAxisRaw(t){return Math.round(this.GetAxis(t))}}class Component{#e=null;get transform(){return this.#e.transform}set transform(e){this.#e.transform=e}get gameObject(){return this.#e}set gameObject(e){this.#e=e}BroadcastMessage(e,t,n){this.#e.BroadcastMessage(e,t,n)}GetComponent(e){return this.#e.GetComponent(e)}GetComponents(e){return this.#e.GetComponents(e)}GetComponentInParent(e){return this.#e.GetComponentInParent(e)}GetComponentsInParent(e){return this.#e.GetComponentsInParent(e)}}class Behavior extends Component{enabled=!0;get isActiveAndEnabled(){return this.gameObject.activeSelf&&this.enabled}}class GameBehavior extends Behavior{Awake(){}OnEnable(){}Start(){}FixedUpdate(){}Update(){}LateUpdate(){}OnApplicationQuit(){}OnDisable(){}OnDestroy(){}}Math.Clamp=function(a,t,n){return Math.min(Math.max(a,t),n)};class Matrix3x3{matrix=[[1,0,0],[0,1,0],[0,0,1]];static get zero(){return new Matrix3x3([0,0,0],[0,0,0],[0,0,0])}static get identity(){return new Matrix3x3([1,0,0],[0,1,0],[0,0,1])}get determinant(){const t=this.matrix;return t[0][0]*(t[1][1]*t[2][2]-t[2][1]*t[1][2])-t[1][0]*(t[0][1]*t[2][2]-t[2][1]*t[0][2])+t[2][0]*(t[0][1]*t[1][2]-t[1][1]*t[0][2])}get transpose(){const t=this.matrix;return new Matrix3x3([t[0][0],t[1][0],t[2][0]],[t[0][1],t[1][1],t[2][1]],[t[0][2],t[1][2],t[2][2]])}get inverse(){const t=1/this.determinant;if(0===t)return Matrix3x3.zero;const r=this.transpose.matrix;return new Matrix3x3([t*(r[1][1]*r[2][2]-r[2][1]*r[1][2]),t*(r[1][2]*r[2][0]-r[2][2]*r[1][0]),t*(r[1][0]*r[2][1]-r[2][0]*r[1][1])],[t*(r[0][2]*r[2][1]-r[2][2]*r[0][1]),t*(r[0][0]*r[2][2]-r[2][0]*r[0][2]),t*(r[0][1]*r[2][0]-r[2][1]*r[0][0])],[t*(r[0][1]*r[1][2]-r[1][1]*r[0][2]),t*(r[0][2]*r[1][0]-r[1][2]*r[0][0]),t*(r[0][0]*r[1][1]-r[1][0]*r[0][1])])}constructor(t,r,e){this.matrix=[t??[1,0,0],r??[0,1,0],e??[0,0,1]]}static Translate(t){return new Matrix3x3([1,0,0],[0,1,0],[t.x,t.y,1])}static Rotate(t){return new Matrix3x3([Math.cos(t),Math.sin(t),0],[-Math.sin(t),Math.cos(t),0],[0,0,1])}static Scale(t){return new Matrix3x3([t.x,0,0],[0,t.y,0],[0,0,1])}static TRS(t,r,e){return new Matrix3x3([Math.cos(r)*e.x,Math.sin(r)*e.y,0],[-Math.sin(r)*e.x,Math.cos(r)*e.y,0],[t.x,t.y,1])}static Ortho(t,r,e,a){return new Matrix3x3([2/(r-t),0,0],[0,2/(a-e),0],[-(r+t)/(r-t),-(a+e)/(a-e),1])}static Multiply(t,r){const e=t.matrix,a=r.matrix;return new Matrix3x3([e[0][0]*a[0][0]+e[1][0]*a[0][1]+e[2][0]*a[0][2],e[0][1]*a[0][0]+e[1][1]*a[0][1]+e[2][1]*a[0][2],e[0][2]*a[0][0]+e[1][2]*a[0][1]+e[2][2]*a[0][2]],[e[0][0]*a[1][0]+e[1][0]*a[1][1]+e[2][0]*a[1][2],e[0][1]*a[1][0]+e[1][1]*a[1][1]+e[2][1]*a[1][2],e[0][2]*a[1][0]+e[1][2]*a[1][1]+e[2][2]*a[1][2]],[e[0][0]*a[2][0]+e[1][0]*a[2][1]+e[2][0]*a[2][2],e[0][1]*a[2][0]+e[1][1]*a[2][1]+e[2][1]*a[2][2],e[0][2]*a[2][0]+e[1][2]*a[2][1]+e[2][2]*a[2][2]])}Duplicate(){const t=this.matrix;return new Matrix3x3([t[0][0],t[0][1],t[0][2]],[t[1][0],t[1][1],t[1][2]],[t[2][0],t[2][1],t[2][2]])}GetValue(t,r){return this.matrix[t][r]}GetColumn(t){let r=[0,0,0];for(let e=0;e<=2;e++)r[e]=this.GetValue(t,e);return r}GetRow(t){let r=[0,0,0];for(let e=0;e<=2;e++)r[e]=this.GetValue(e,t);return r}SetValue(t,r,e){this.matrix[t][r]=e}SetColumn(t,r){for(let e=0;e<=2;e++)this.SetValue(t,e,r[e])}SetRow(t,r){for(let e=0;e<=2;e++)this.SetValue(e,t,r[e])}}class Vector2{static get zero(){return new Vector2(0,0)}static get one(){return new Vector2(1,1)}static get up(){return new Vector2(0,1)}static get down(){return new Vector2(0,-1)}static get left(){return new Vector2(-1,0)}static get right(){return new Vector2(1,0)}x=0;y=0;get magnitude(){return Math.sqrt(this.sqrMagnitude)}get sqrMagnitude(){return this.x*this.x+this.y*this.y}get normalized(){return new Vector2(this.x/this.magnitude||0,this.y/this.magnitude||0)}get abs(){return new Vector2(Math.abs(this.x),Math.abs(this.y))}constructor(t,e){this.Set(t??0,e??0)}static Distance(t,e){return Math.sqrt((t.x-e.x)**2+(t.y-e.y)**2)}static Dot(t,e){return t.x*e.x+t.y*e.y}static Min(t,e){return new Vector2(Math.min(t.x,e.x),Math.min(t.y,e.y))}static Max(t,e){return new Vector2(Math.max(t.x,e.x),Math.max(t.y,e.y))}static Clamp(t,e,r){return Vector2.Min(Vector2.Max(t,e),r)}static Abs(t){return new Vector2(Math.abs(t.x),Math.abs(t.y))}static Add(t,e){return"number"==typeof e?new Vector2(t.x+e,t.y+e):new Vector2(t.x+e.x,t.y+e.y)}static Subtract(t,e){return"number"==typeof e?new Vector2(t.x-e,t.y-e):new Vector2(t.x-e.x,t.y-e.y)}static Scale(t,e){return"number"==typeof e?new Vector2(t.x*e,t.y*e):new Vector2(t.x*e.x,t.y*e.y)}static Divide(t,e){return"number"==typeof e?new Vector2(t.x/e,t.y/e):new Vector2(t.x/e.x,t.y/e.y)}toString(){return`(${this.x}, ${this.y})`}Equals(t){return this.x==t.x&&this.y==t.y}Greater(t){const e=[this.x<t.x,this.y<t.y],r=[this.x>t.x&&!e[0],this.y>t.y&&!e[1]];return r[0]||r[1]}Normalize(){const t=this.magnitude;this.x=this.x/t||0,this.y=this.y/t||0}Set(t,e){this.x=t,this.y=e}}class Color{static get black(){return new Color}static get white(){return new Color(1,1,1)}static get red(){return new Color(1,0,0)}static get green(){return new Color(0,1,0)}static get blue(){return new Color(0,0,1)}r=0;g=0;b=0;a=1;get grayscale(){let t=.3*this.r+.59*this.g+.11*this.b;return new Color(t,t,t,this.a)}constructor(t,r,e,s){this.Set(t,r,e,s??1)}toString(){return`${this.r}, ${this.g}, ${this.b}, ${this.a}`}Set(t,r,e,s){this.r=t,this.g=r,this.b=e,null!=s&&(this.a=s)}Equals(t){return this.r===t.r&&this.g===t.g&&this.b===t.b&&this.a===t.a}Duplicate(){return new Color(this.r,this.g,this.b,this.a)}}class Rect{x=0;y=0;width=1;height=1;get xMin(){return this.x}set xMin(t){const i=this.xMax;this.x=t,this.width=i-this.x}get yMin(){return this.y}set yMin(t){const i=this.yMax;this.y=t,this.height=i-this.y}get xMax(){return this.x+this.width}set xMax(t){this.width=t-this.x}get yMax(){return this.y+this.height}set yMax(t){this.height=t-this.y}get position(){return new Vector2(this.x,this.y)}set position(t){this.x=t.x,this.y=t.y}get size(){return new Vector2(this.width,this.height)}set size(t){this.width=t.x,this.height=t.y}get center(){return new Vector2(this.x+.5*this.width,this.y+.5*this.height)}set center(t){this.x=t.x-.5*this.width,this.y=t.y-.5*this.height}get min(){return new Vector2(this.xMin,this.yMin)}set min(t){this.xMin=t.x,this.yMin=t.y}get max(){return new Vector2(this.xMax,this.yMax)}set max(t){this.xMax=t.x,this.yMax=t.y}constructor(t,i,h,s){this.Set(t??0,i??0,h??1,s??1)}static MinMaxRect(t,i,h,s){return new Rect(t,i,h-t,s-i)}Contains(t){return t instanceof Rect?this.Contains(t.min)&&this.Contains(t.max):t.x>=this.xMin&&t.x<this.xMax&&t.y>=this.yMin&&t.y<this.yMax}Overlaps(t){return t.xMax>this.xMin&&t.xMin<this.xMax&&t.yMax>this.yMin&&t.yMin<this.yMax}toString(){return`${this.x}, ${this.y}, ${this.width}, ${this.height}`}Set(t,i,h,s){this.x=t,this.y=i,this.width=h,this.height=s}}class Bounds{center=null;extents=null;get size(){return Vector2.Scale(this.extents,2)}set size(t){this.extents=Vector2.Scale(t,.5)}get min(){return Vector2.Subtract(this.center,this.extents)}set min(t){this.SetMinMax(t,this.max)}get max(){return Vector2.Add(this.center,this.extents)}set max(t){this.SetMinMax(this.min,t)}constructor(t,e){this.center=t??Vector2.zero,this.size=e??Vector2.one}Contains(t){return t instanceof Bounds?this.Contains(t.min)&&this.Contains(t.max):t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y}ClosestPoint(t){return new Vector2(Math.clamp(t.x,this.min.x,this.max.x),Math.clamp(t.y,this.min.y,this.max.y))}Intersects(t){return t.min.x<=this.max.x&&t.max.x>=this.min.x&&t.min.y<=this.max.y&&t.max.y>=this.min.y}SqrDistance(t){const e=this.ClosestPoint(t);return(t.x-e.center.x)**2+(t.y-e.center.y)**2}toString(){return`Center: ${this.center.toString()}, Extents: ${this.extents.toString()}`}SetMinMax(t,e){this.extents=Vector2.Scale(Vector2.Subtract(e,t),.5),this.center=Vector2.Add(t,this.extents)}Encapsulate(t){if(t instanceof Bounds)return this.Encapsulate(Vector2.Subtract(t.center,t.extents)),void this.Encapsulate(Vector2.Add(t.center,t.extents));this.SetMinMax(Vector2.Min(this.min,t),Vector2.Max(this.max,t))}Expand(t){this.extents=Vector2.Add(this.extents,Vector2.Scale(new Vector2(.5,.5),t))}}class Transform extends Component{#t=0;#e=[];#i=Vector2.zero;#s=Vector2.one;#a=new Matrix3x3;#n=new Matrix3x3;#o=null;get localRotation(){return this.#t}set localRotation(t){this.#t!==t&&(this.#t=t,this.Recalc())}get localPosition(){return new Vector2(this.#i.x,this.#i.y)}set localPosition(t){this.#i.Equals(t)||(this.#i=t,this.Recalc())}get localScale(){return new Vector2(this.#s.x,this.#s.y)}set localScale(t){this.#s.Equals(t)||(this.#s=t,this.Recalc())}get rotation(){return this.localRotation+(this.parent?.rotation??0)}set rotation(t){this.localRotation=t-(this.parent?.rotation??0)}get position(){return Vector2.Add(this.localPosition,this.parent?.position??Vector2.zero)}set position(t){this.localPosition=Vector2.Subtract(t,this.parent?.position??Vector2.zero)}get scale(){return Vector2.Scale(this.localScale,this.parent?.scale??Vector2.one)}set scale(t){this.localScale=Vector2.Divide(t,this.parent?.scale??Vector2.one)}get childCount(){return this.#e.length}get localToWorldMatrix(){return this.#a.Duplicate()}get worldToLocalMatrix(){return this.#n.Duplicate()}get parent(){return this.#o}set parent(t){this.SetParent(t)}get gameObject(){return super.gameObject}set gameObject(t){super.gameObject=t,this.#l()}#l(){null!=this.#o&&null!=this.gameObject&&(this.#o.AttachChild(this),this.#a=Matrix3x3.TRS(Vector2.Scale(this.position,new Vector2(1,-1)),.005555555555555556*-this.rotation*Math.PI,this.scale),this.#n=this.#a.inverse)}Recalc(){this.#a=Matrix3x3.TRS(Vector2.Scale(this.position,new Vector2(1,-1)),.005555555555555556*-this.rotation*Math.PI,this.scale),this.#n=this.#a.inverse,null!=this.gameObject&&this.GetComponent("Renderer")?.RecalcBounds();for(let t=0;t<this.childCount;t++)this.GetChild(t).Recalc()}SetParent(t){if(this.#o===t)return;const e=this.#o;this.#o=t,null!=this.gameObject&&e?.DetachChildByID(this.gameObject.GetSceneID()),this.#o=t,this.#l()}IsChildOf(t){return this.#o===t}Find(t){let e=null;return this.#e.find((i=>{const s=GameObject.FindByID(i);return s.name===t&&(e=s.transform,!0)})),e}DetachChildByID(t){let e=[];for(let i=0;i<this.childCount;i++){const s=this.#e[i];if(s!==t)e.push(s);else{const t=this.GetChild(i);t.parent=null,t.Recalc()}}this.#e=e}DetachChild(t){const e=this.#e[t];this.DetachChildByID(e)}DetachChildren(){for(let t=0;t<this.childCount;t++){const e=this.GetChild(t);e.parent=null,e.Recalc()}this.#e=[]}AttachChild(t){t.parent!==this&&(t.parent=this,t.Recalc());const e=t.gameObject.GetSceneID();this.#e.push(e)}AttachChildByID(t){const e=GameObject.FindByID(t).transform;this.AttachChild(e)}GetChild(t){const e=this.#e[t];return GameObject.FindByID(e).transform}}class GameObject{#e=!1;#t=!1;#n="Empty Object";#s=[];#a=null;destroying=!1;scene=null;sceneTreeNode=null;get activeSelf(){return this.#e}get name(){return this.#n}set name(e){this.#n=e;const t=this.#s;for(let e=0;e<this.#s.length;e++)t[e].name=this.name}get transform(){return this.#s[0]}set transform(e){this.#s[0]=e,this.#s[0].gameObject=this,this.#s[0].name=this.name}get components(){return this.#s}set components(e){let t=[this.#s[0]];for(let n=0;n<e.length;n++)t.push(e[n]);this.#s=t;for(let e=0;e<this.#s.length;e++)this.#s[e].gameObject=this,this.#s[e].name=this.name}constructor(e,t,n,s,a){this.#a=a,this.#n=e??"Empty Object",this.#e=n??!0,this.#s[0]=s??new Transform,this.components=t??[]}static Find(e){return SceneManager.GetActiveScene().gameObjects.find((t=>t.name===e&&t.activeSelf))}static FindByID(e){return SceneManager.GetActiveScene().gameObjects.find((t=>t.GetSceneID()===e))}static FindComponents(e){const t=SceneManager.GetActiveScene().gameObjects.filter((e=>e.activeSelf));let n=[];for(let s=0;s<t.length;s++)n.push(...t[s].GetComponents(e));return n}static Destroy(e){e.destroying=!0}#i(item,type,includeInactive){return!(!eval(`item instanceof ${type}`)||item instanceof Behavior&&!item.enabled&&!includeInactive)}GetSceneID(){return this.#a}SetActive(e){this.#e=e}BroadcastMessage(method,params,data){let args="",dat=data??{};if(null==dat.specialCall&&(dat.specialCall=0),!this.#e&&!dat.passActive)return;switch(dat.specialCall){case 2:if(this.#t||!this.#e)return;this.#t=!0;break;case 3:if(!this.#t||this.#e)return;this.#t=!1}if(Array.isArray(params))for(let e=0;e<params.length;e++)args+=`params[${e}]`,e!==params.length-1&&(args+=",");else args=params;const components=this.#s.filter((e=>(e.enabled||1===dat.specialCall)&&e instanceof GameBehavior));for(let i=0;i<components.length;i++)eval(`components[i].${method}(${args})`),dat.clearAfter&&eval(`components[i].${method} = () => { }`),components[i].gameObject=this,components[i].name=this.name}GetComponent(e){return this.#s.find((t=>this.#i(t,e,!1)))}GetComponents(e){return this.#s.filter((t=>this.#i(t,e,!1)))}GetComponentInParent(e){return this.transform.parent.GetComponent(e)}GetComponentsInParent(e){return this.transform.parent.GetComponents(e)}}class QuadTreeItem{item=null;size=null}class QuadTreeNode{#t=0;#e=[];#i=[];#s=[];#h=null;get area(){return this.#h}get count(){let t=this.#s.length;for(let e=0;e<4;e++)null!=this.#i[e]&&(t+=this.#i[e].count);return t}constructor(t,e){this.#t=e,this.Resize(t)}Remove(t){const e=this.#s.find((e=>e.item===t));if(null==e)return;const i=this.#s.indexOf(e);this.#s.splice(i,1)}Clear(){this.#s=[];for(let t=0;t<4;t++)null!=this.#i[t]&&(this.#i[t].Clear(),this.#i[t]=null)}Resize(t){this.Clear(),this.#h=t;const e=Vector2.Scale(t.size,.5);this.#e=[new Rect(t.x,t.y,e.x,e.y),new Rect(t.x+e.x,t.y,e.x,e.y),new Rect(t.x,t.y+e.y,e.x,e.y),new Rect(t.x+e.x,t.y+e.y,e.x,e.y)]}Insert(t,e){for(let i=0;i<4&&!(this.#t+1>=QuadTree.maxDepth);i++)if(this.#e[i].Contains(e))return null==this.#i[i]&&(this.#i[i]=new QuadTreeNode(this.#e[i],this.#t+1)),void this.#i[i].Insert(t,e);t.sceneTreeNode=this;const i=new QuadTreeItem;i.item=t,i.size=e,this.#s.push(i)}Find(t){let e=[];return this.FindByParam(t,e),e}FindByParam(t,e){for(let i=0;i<this.#s.length;i++)t.Overlaps(this.#s[i].size)&&e.push(this.#s[i].item);for(let i=0;i<4;i++)null!=this.#i[i]&&(t.Contains(this.#e[i])?this.#i[i].GetItems(e):this.#e[i].Overlaps(t)&&this.#i[i].FindByParam(t,e))}GetItems(t){for(let e=0;e<this.#s.length;e++)t.push(this.#s[e].item);for(let e=0;e<4;e++)null!=this.#i[e]&&this.#i[e].GetItems(t)}}class QuadTree{static maxDepth=0;#e=[];#t=null;get count(){return this.#e.length}get area(){return this.#t.area}constructor(e){this.#t=new QuadTreeNode(e,0)}Find(e){return this.#t.Find(e)}Remove(e){const t=this.#e.indexOf(e);t<0||(e.sceneTreeNode.Remove(e),this.#e.splice(t,1))}Clear(){this.#t.Clear(),this.#e=[]}Resize(e){this.#t.Resize(e)}Insert(e,t){this.#e.push(e),this.#t.Insert(e,t)}Relocate(e,t){e.sceneTreeNode.Remove(e),this.#t.Insert(e,t)}}class Scene{#t=!1;#e=!1;#a=null;isDirty=!1;name="scene";gameObjects=[];tree=null;get isLoaded(){return this.#e}get isInvalid(){return this.#t}get path(){return this.#a.path}get index(){return this.#a.index}get resources(){return this.#a.resources??[]}constructor(t,e,a){this.name=t??"Scene",this.#a=e??{},this.#t=a??!1}async#n(t){let e=[];for(let a=0;a<t.length;a++)e.push(await SceneManager.CreateObject(t[a].type,t[a].args));return e}async#s(){if(null!=this.#a.gameObjects){for(let t=0;t<this.#a.gameObjects.length;t++){const e=this.#a.gameObjects[t],a=await this.#n(e.components??[]);let n=null;null!=e.parent&&(n=this.gameObjects.find((t=>t.GetSceneID()===e.parent)).transform);const s=await SceneManager.CreateObject("GameObject",{name:e.name,components:a,active:e.active,transform:e.transform,id:e.id,parent:n});s.scene=this;const i=s.GetComponent("Renderer");if(null!=i){const t=i.bounds.min,e=i.bounds.max,a=Rect.MinMaxRect(t.x,t.y,e.x,e.y);this.tree.Insert(s,a)}this.gameObjects.push(s)}for(let t=0;t<this.gameObjects;t++)this.gameObjects[t].BroadcastMessage("Awake",null,{specialCall:0,clearAfter:!0})}}async Load(){if(this.#e||this.#t)return;const t=new Vector2;this.#a.partioning?.disabled||(t.x=this.#a.partioning?.size?.x??1024,t.y=this.#a.partioning?.size?.y??1024);const e=Vector2.Add(Vector2.Scale(t,-.5),new Vector2(this.#a.partioning?.offset?.x,this.#a.partioning?.offset?.y));null!=this.#a.partioning?.maxDepth&&(QuadTree.maxDepth=this.#a.partioning?.maxDepth),this.tree=new QuadTree(new Rect(e.x,e.y,t.x,t.y)),await this.#s(),this.#e=!0}}class SceneManager{static#e=!1;static#t=new Scene;static#n=[];static#a=[];static#s=null;static sceneLoaded=new DelegateEvent;static sceneUnloaded=new DelegateEvent;static activeSceneChanged=new DelegateEvent;static get sceneCount(){return this.#n.length}static get loadedSceneCount(){return this.#a.filter((e=>e.isLoaded)).length}static SetActiveScene(e){if(this.GetActiveScene().index===e)return;const t=this.GetScene(e);return!t.isInvalid&&(t.isDirty=!0,this.#s=t,this.activeSceneChanged.Invoke(),!0)}static GetActiveScene(){return this.#s??this.#t}static GetScene(e){return this.#a.find((t=>t.index===e&&t.isLoaded))??new Scene(null,null,!0)}static Set(e){this.#e||(this.#n=e,this.#e=!0)}static Unload(...e){for(let t=0;t<e.length;t++){this.GetActiveScene().index===e[t]&&(this.#s=null);const n=this.GetScene(e[t]);if(n.isInvalid)return;for(let a=0;a<n.resources.length;a++){const s=n.resources[a];null==this.#a.find((n=>n.index!==e[t]&&null!=n.resources.find((e=>e===s))))&&Resources.Unload(s)}const a=this.#a.indexOf(n);this.#a.splice(a,1),this.sceneUnloaded.Invoke()}}static async Load(...e){for(let t=0;t<e.length;t++){if(this.#a.find((n=>n.index===e[t])))return;const n=`data/scenes/${this.#n[e[t]]}.json`,a=await fetch(n),s=await a.json(),c=new Scene(s.name,{partioning:s.partioning,resources:s.resources,gameObjects:s.gameObjects,path:n,index:e[t]});await Resources.Load(...c.resources),await c.Load(),this.#a.push(c),this.sceneLoaded.Invoke()}}static async CreateObject(type,data){const dat=data??{};let object=null;const foundClass=CrystalEngine.Inner.GetClassOfType(type,0);if(null==foundClass)return new Object;const construction=foundClass.construction,properties=foundClass.args;if(null!=construction){const e=new AsyncFunction("data","toObject",construction);object=await e(dat,(async(e,t)=>await this.CreateObject(e,t)))}else object=eval(`new ${type}()`);for(let i=0;i<properties.length;i++){if("object"!=typeof properties[i]||void 0===eval(`dat.${properties[i].name}`))continue;let subObj=null;if(null!=properties[i].evaluation){const evalCall=new AsyncFunction("data",properties[i].evaluation);subObj=await evalCall(eval(`dat.${properties[i].name}`))}else if(null!=properties[i].evalType){const evalCall=new AsyncFunction("data",properties[i].evalType),objType=await evalCall(eval(`dat.${properties[i].name}`));subObj=await this.CreateObject(objType,eval(`dat.${properties[i].name}`))}else subObj=["boolean","number","string","object"].includes(properties[i].type)?eval(`dat.${properties[i].name}`):"array"===properties[i].type?await this.CreateObjectArray(eval(`dat.${properties[i].name}`)):await this.CreateObject(properties[i].type,eval(`dat.${properties[i].name}`));eval(`object.${properties[i].name} = subObj`)}return null!=dat.name&&"GameObject"!==type&&(object.name=dat.name),object}static async CreateObjectArray(e){let t=[];for(let n=0;n<e.length;n++){let a=null;a=Array.isArray(e[n])?await this.CreateObjectArray(e[n]):"object"==typeof e[n]&&e[n].__compiled?await this.CreateObject(e[n].type,e[n].args):e[n],t.push(a)}return t}}class PlayerLoop{static#e=!1;static#t=!1;static#i=0;static#a(){0===Application.targetFrameRate||1===Application.vSyncCount?requestAnimationFrame(this.#s.bind(this)):2===Application.vSyncCount?requestAnimationFrame((()=>requestAnimationFrame(this.#s.bind(this)))):setTimeout(this.#s.bind(this),0)}static#l(){Time.unscaledDeltaTime=.001*performance.now()-Time.unscaledTime,Time.unscaledTime+=Time.unscaledDeltaTime;let e=Time.unscaledDeltaTime;e>Time.maximumDeltaTime&&(e=Time.maximumDeltaTime),Time.deltaTime=e*Time.timeScale,Time.time+=Time.deltaTime,Time.frameCount++,this.#t=!0}static async#s(){if(this.#e||Application.isLoaded||(Application.Load(),this.#e=!0),!Application.isLoaded&&!Application.isUnloaded)return void this.#a();const e=SceneManager.GetActiveScene(),t=e.gameObjects;if(document.hasFocus()){for(let e=0;e<t.length;e++)t[e].BroadcastMessage("Awake",null,{specialCall:1,clearAfter:!0});for(let e=0;e<t.length;e++)t[e].BroadcastMessage("OnEnable",null,{specialCall:2});for(let e=0;e<t.length;e++)t[e].BroadcastMessage("Start",null,{clearAfter:!0})}if(Application.targetFrameRate>0&&0===Application.vSyncCount){const e=1/Application.targetFrameRate-.005;let t=.001*performance.now()-Time.unscaledTime;for(;t>=e;)this.#l(),t-=e}else this.#l();if(this.#t){if(document.hasFocus()&&0!==Time.timeScale){const e=Application.gl;e.viewport(0,0,Application.htmlCanvas.width,Application.htmlCanvas.height);const t=GameObject.FindComponents("Camera");if(t.length>0){const i=t[t.length-1].backgroundColor;e.clearColor(i.r,i.g,i.b,i.a),e.clear(e.COLOR_BUFFER_BIT),e.enable(e.BLEND),e.blendFunc(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA)}}document.hasFocus()&&0!==Time.timeScale&&Input.Update()}for(;Time.fixedTime<Time.time;)if(Time.fixedUnscaledDeltaTime=.001*performance.now()-Time.fixedUnscaledTime,Time.fixedUnscaledTime+=Time.fixedUnscaledDeltaTime,Time.fixedTime+=Time.fixedDeltaTime*Time.timeScale,document.hasFocus()&&0!==Time.timeScale)for(let e=0;e<t.length;e++)t[e].BroadcastMessage("FixedUpdate");if(this.#t&&document.hasFocus()&&0!==Time.timeScale)for(let e=0;e<t.length;e++)t[e].BroadcastMessage("Update");if(this.#t&&document.hasFocus()&&0!==Time.timeScale)for(let e=0;e<t.length;e++)t[e].BroadcastMessage("LateUpdate");if(this.#t){if(this.#t=!1,document.hasFocus()&&0!==Time.timeScale){const e=GameObject.FindComponents("Renderer");for(let t=0;t<e.length;t++)e[t].meshChanged&&e[t].ForceMeshUpdate();const t=GameObject.FindComponents("Camera");for(let e=0;e<t.length;e++)t[e].Render();Application.gl.flush()}if(Input.End(),document.hasFocus()&&0!==Time.timeScale){if(2===this.#i){for(let e=0;e<t.length;e++)t[e].BroadcastMessage("OnApplicationQuit"),GameObject.Destroy(t[e]);Application.quitting.Invoke()}for(let e=0;e<t.length;e++)t[e].destroying&&t[e].SetActive(!1),t[e].BroadcastMessage("OnDisable",null,{passActive:!0,specialCall:3});const i=e.tree,a=t.filter((e=>e.destroying));for(let t=0;t<a.length;t++){a[t].BroadcastMessage("OnDestroy"),i.Remove(a[t]);const s=e.gameObjects.indexOf(a[t]);e.gameObjects.splice(s,1)}if(2===this.#i)return Application.Unload(),void window.close();Application.isPlaying||(Application.wantsToQuit.Invoke(),this.#i=1),1===this.#i&&(Application.isPlaying?this.#i=0:this.#i++)}}this.#a()}static Init(){this.#e||this.#a()}}class Shader{static#e=!1;static#t=[];static get isLoaded(){return this.#e}#s=null;#a=null;get type(){return this.#s}get shader(){return this.#a}constructor(e,t,s){this.name=e,this.#s=s;const a=Application.gl;let i;switch(this.#s){case"VERTEX":i=a.VERTEX_SHADER;break;case"FRAGMENT":i=a.FRAGMENT_SHADER}this.#a=a.createShader(i),a.shaderSource(this.#a,t),a.compileShader(this.#a)}static#i(e){let t=0,s="",a=["",""],i=0,r=!1,h="";for(let d=0;d<e.length;d++)if("/"!==e[d]||"/"!==e[d+1]){if(t>=4)break;if("\n"!==e[d]&&"\r"!==e[d])if("'"!==e[d]&&'"'!==e[d]){if(r||" "!==e[d])if(":"!==e[d])0===i?s+=e[d]:a[i-1]+=e[d];else{switch(i=-1,s){case"NAME":i=1;break;case"TYPE":i=2}s=""}}else{if(r&&e[d]===h){r=!1,h="";continue}r=!0,h=e[d]}}else t++,i=0,s="",d++;return{name:a[0],type:a[1]}}static Find(e,t){return this.#t.find((s=>s.name===e&&(null==t||s.type===t)))??this.Find("Default/Standard",t)}static Set(e){for(let t=0;t<e.length;t++){if(""===e[t])continue;const s=this.#i(e[t]),a=new Shader(s.name,e[t],s.type);this.#t.push(a)}this.#e=!0}}class GraphicsBufferTarget{static get Array(){return 0}static get ElementArray(){return 1}}class GraphicsBufferUsage{static get Static(){return 0}static get Dynamic(){return 1}static get Stream(){return 2}}class GraphicsBuffer{#e=1;#t=null;#r=null;target=0;usageType=0;name="";get stride(){return this.#e}constructor(e,t){this.name=e,this.#e=t??1,this.#t=Application.gl,this.#r=this.#t.createBuffer()}GetNativeBuffer(){return this.#r}SetData(e){const t=this.#t,r=0===this.target?t.ARRAY_BUFFER:t.ELEMENT_ARRAY_BUFFER;t.bindBuffer(r,this.#r);let s=null;switch(this.usageType){case 0:s=t.STATIC_DRAW;break;case 1:s=t.DYNAMIC_DRAW;break;case 2:s=t.STREAM_DRAW}t.bufferData(r,new Float32Array(e),s),t.bindBuffer(r,null)}}class ShaderAttribute{#t=0;#e=0;#i=1;#s="";#r=null;#n=null;enabled=!0;get name(){return this.#s}constructor(t,e,i){this.#r=Application.gl,this.#n=i,this.#s=t.endsWith("[0]")?t.slice(0,-3):t;const s=this.#r;this.#t=s.getAttribLocation(this.#n,t),e.startsWith("FLOAT")?this.#e=s.FLOAT:e.startsWith("INT")?this.#e=s.INT:e.startsWith("UNSIGNED_INT")&&(this.#e=s.UNSIGNED_INT);const r=parseInt(e[e.length-1]);Number.isNaN(r)||1===r||(this.#i=r)}Set(t,e){const i=this.#r;i.useProgram(this.#n),i.bindBuffer(i.ARRAY_BUFFER,t.GetNativeBuffer()),this.enabled?i.enableVertexAttribArray(this.#t):i.disableVertexAttribArray(this.#t),i.vertexAttribPointer(this.#t,this.#i,this.#e,!1,4*t.stride,4*(e??0)),i.bindBuffer(i.ARRAY_BUFFER,null),i.useProgram(null)}}class Material{#t=[];#r=[];#e=[];#s=null;#a=null;#i=null;#n=null;get vertexShader(){return this.#i}get fragmentShader(){return this.#n}get gl(){return this.#s}get program(){return this.#a}#o=class{array=!1;index=0;size=0;name="";type="";location=null;constructor(t,r,e){this.array=t.endsWith("[0]"),this.name=this.array?t.slice(0,-3):t,this.type=r,this.size=e}};constructor(t,r){this.#s=Application.gl,this.#i=t??Shader.Find("Default/Standard","VERTEX"),this.#n=r??Shader.Find("Default/Standard","FRAGMENT");const e=this.#s;this.#a=e.createProgram();const s=this.#a;if(e.attachShader(s,this.#i.shader),e.attachShader(s,this.#n.shader),e.linkProgram(s),!e.getProgramParameter(s,e.LINK_STATUS)){const t=e.getShaderInfoLog(this.#i.shader),r=e.getShaderInfoLog(this.#n.shader);console.error(`Shader Errors:\n${""===t?"":`Vertex:\n${t}`}${""===t||""===r?"":"\n\n"}${""===r?"":`Fragment:\n${r}`}`)}const a=this.#s.getProgramParameter(s,e.ACTIVE_UNIFORMS);for(let t=0;t<a;t++){const r=e.getActiveUniform(s,t),a=r.name;if(a.startsWith("gl_")||a.startsWith("webgl_"))continue;const i=new this.#o(a,this.#h(r.type),r.size);i.index=e.getUniformIndices(s,[i.name])[0],i.location=e.getUniformLocation(s,i.name),this.#t.push(i)}const i=e.getProgramParameter(s,e.ACTIVE_ATTRIBUTES);for(let t=0;t<i;t++){const r=e.getActiveAttrib(s,t),a=r.name;a.startsWith("gl_")||a.startsWith("webgl_")||this.#e.push(new ShaderAttribute(a,this.#h(r.type),s))}e.detachShader(s,this.#i.shader),e.detachShader(s,this.#n.shader)}#h(t){const r=this.#s;for(const e in r)if(r[e]===t)return e;return`0x${t.toString(16)}`}#u(t){let r=t;return"string"==typeof r&&(r=this.GetPropertyNameID(r)),this.#t[r].location}#f(t,r,e){if("string"==typeof t)return null!=this.#t.find((s=>s.name===t&&s.type===r&&s.array===e));const s=this.#t[t];return null!=s&&s.type===r}#p(t,r,e){const s=this.#f(t,`${r}2`,e),a=this.#f(t,`${r}3`,e),i=this.#f(t,`${r}4`,e);return s?2:a?3:i?4:0}#m(t,r,e){return 0!==this.#p(t,`${r}_VEC`,!0)}#c(t,r,e){const s=this.#p(t,"FLOAT_VEC",r);if(0===s)return;const a=this.#s,i=this.#u(t),n=new Float32Array(e);switch(a.useProgram(this.#a),s){case 2:a.uniform2fv(i,n);break;case 3:a.uniform3fv(i,n);break;case 4:a.uniform4fv(i,n)}a.useProgram(null)}#l(t,r,e,s){const a=this.#p(t,`${r}_VEC`,e);if(0===a)return;const i=this.#s,n=this.#u(t),o=new Int32Array(s);switch(i.useProgram(this.#a),a){case 2:i.uniform2iv(n,o);break;case 3:i.uniform3iv(n,o);break;case 4:i.uniform4iv(n,o)}i.useProgram(null)}#y(t,r,e){const s=this.#p(t,"UNSIGNED_INT_VEC",r);if(0===s)return;const a=this.#s,i=this.#u(t),n=new Uint32Array(e);switch(a.useProgram(this.#a),s){case 2:a.uniform2uiv(i,n);break;case 3:a.uniform3uiv(i,n);break;case 4:a.uniform4uiv(i,n)}a.useProgram(null)}#g(t,r){const e=this.#p(t,"FLOAT_MAT",r);if(0!==e)return`${e}`;const s=this.#f(t,"FLOAT_MAT2x3",r),a=this.#f(t,"FLOAT_MAT2x4",r);if(s)return"23";if(a)return"24";const i=this.#f(t,"FLOAT_MAT3x2",r),n=this.#f(t,"FLOAT_MAT3x4",r);if(i)return"32";if(n)return"34";const o=this.#f(t,"FLOAT_MAT4x2",r),h=this.#f(t,"FLOAT_MAT4x3",r);return o?"42":h?"43":"0"}#S(t,r,e){const s=this.#g(t,r);if("0"===s)return;const a=this.#s,i=this.#u(t),n=new Float32Array(e);switch(a.useProgram(this.#a),s){case"2":a.uniformMatrix2fv(i,!1,n);break;case"3":a.uniformMatrix3fv(i,!1,n);break;case"4":a.uniformMatrix4fv(i,!1,n);break;case"23":a.uniformMatrix2x3fv(i,!1,n);break;case"24":a.uniformMatrix2x4fv(i,!1,n);break;case"32":a.uniformMatrix3x2fv(i,!1,n);break;case"34":a.uniformMatrix3x4fv(i,!1,n);break;case"42":a.uniformMatrix4x2fv(i,!1,n);break;case"43":a.uniformMatrix4x3fv(i,!1,n)}a.useProgram(null)}Duplicate(){return new Material(this.#i,this.#n)}GetPropertyNames(){return this.#t.map((t=>t.name))}GetPropertyNameID(t){let r=-1;return this.#t.find(((e,s)=>e.name===t&&(r=s,!0))),r}GetPropertyIndex(t){let r=-1;return this.#t.find((e=>e.name===t&&(r=e.index,!0))),r}GetBufferNames(){return this.#r.map((t=>t.name))}GetBufferNameID(t){let r=-1;return this.#r.find(((e,s)=>e.name===t&&(r=s,!0))),r}GetAttributeNames(){return this.#e.map((t=>t.name))}GetAttributeNameID(t){let r=-1;return this.#e.find(((e,s)=>e.name===t&&(r=s,!0))),r}GetAttributeIndex(t){let r=-1;return this.#e.find((e=>e.name===t&&(r=e.index,!0))),r}HasProperty(t){if("string"==typeof t)return null!=this.#t.find((r=>r.name===t));return null!=this.#t[t]}HasBoolean(t){return this.#f(t,"BOOL",!1)}HasBooleanArray(t){return this.#f(t,"BOOL",!0)}HasInt(t){return this.#f(t,"INT",!1)}HasIntArray(t){return this.#f(t,"INT",!0)}HasUint(t){return this.#f(t,"UNSIGNED_INT",!1)}HasUintArray(t){return this.#f(t,"UNSIGNED_INT",!0)}HasFloat(t){return this.#f(t,"FLOAT",!1)}HasFloatArray(t){return this.#f(t,"FLOAT",!0)}HasSampler2D(t){return this.#f(t,"SAMPLER_2D",!1)}HasSampler2DArray(t){return this.#f(t,"SAMPLER_2D",!0)}HasSamplerCube(t){return this.#f(t,"SAMPLER_CUBE",!1)}HasSamplerCubeArray(t){return this.#f(t,"SAMPLER_CUBE",!0)}HasVector(t){return this.#m(t,"FLOAT",!1)}HasVectorArray(t){return this.#m(t,"FLOAT",!0)}HasBooleanVector(t){return this.#m(t,"BOOL",!1)}HasBooleanVectorArray(t){return this.#m(t,"BOOL",!0)}HasIntVector(t){return this.#m(t,"INT",!1)}HasIntVectorArray(t){return this.#m(t,"INT",!0)}HasUintVector(t){return this.#m(t,"UNSIGNED_INT",!1)}HasUintVectorArray(t){return this.#m(t,"UNSIGNED_INT",!0)}HasMatrix(t){return"0"!==this.#g(t,!1)}HasMatrixArray(t){return"0"!==this.#g(t,!0)}HasBuffer(t){return null!=this.GetBuffer(t)}HasAttribute(t){return null!=this.GetAttribute(t)}GetProperty(t){const r=this.#u(t);return this.#s.getUniform(this.#a,r)}GetBuffer(t){return"string"==typeof t?this.#r.find((r=>r.name===t)):this.#r[t]}GetAttribute(t){return"string"==typeof t?this.#e.find((r=>r.name===t)):this.#e[t]}SetBoolean(t,r){this.SetInt(t,+r)}SetBooleanArray(t,r){let e=[];for(let t=0;t<r.length;t++)e.push(+r[t]);this.SetIntArray(t,e)}SetInt(t,r){const e=this.#s,s=this.#u(t);e.useProgram(this.#a),e.uniform1i(s,r),e.useProgram(null)}SetIntArray(t,r){const e=this.#s,s=this.#u(t);e.useProgram(this.#a),e.uniform1iv(s,new Int32Array(r)),e.useProgram(null)}SetUint(t,r){const e=this.#s,s=this.#u(t);e.useProgram(this.#a),e.uniform1ui(s,r),e.useProgram(null)}SetUintArray(t,r){const e=this.#s,s=this.#u(t);e.useProgram(this.#a),e.uniform1uiv(s,new Uint32Array(r)),e.useProgram(null)}SetFloat(t,r){const e=this.#s,s=this.#u(t);e.useProgram(this.#a),e.uniform1f(s,r),e.useProgram(null)}SetFloatArray(t,r){const e=this.#s,s=this.#u(t);e.useProgram(this.#a),e.uniform1fv(s,new Float32Array(r)),e.useProgram(null)}SetSampler2D(t,r){this.SetInt(t,r)}SetSampler2DArray(t,r){this.SetIntArray(t,r)}SetSamplerCube(t,r){this.SetInt(t,r)}SetSamplerCubeArray(t,r){this.SetIntArray(t,r)}SetVector(t,...r){this.#c(t,!1,r)}SetVectorArray(t,...r){this.#c(t,!0,r.flat(1))}SetBooleanVector(t,...r){this.#l(t,"BOOL",!1,r)}SetBooleanVectorArray(t,...r){this.#l(t,"BOOL",!0,r.flat(1))}SetIntVector(t,...r){this.#l(t,"INT",!1,r)}SetIntVectorArray(t,...r){this.#l(t,"INT",!0,r.flat(1))}SetUintVector(t,...r){this.#y(t,!1,r)}SetUintVectorArray(t,...r){this.#y(t,!0,r.flat(1))}SetMatrix(t,...r){this.#S(t,!1,r)}SetMatrixArray(t,...r){this.#S(t,!0,r.flat(1))}AddBuffer(t,r,e){let s=this.GetBuffer(t);return null!=s?(null!=r&&s.SetData(r),this.GetBufferNameID(t)):(s=new GraphicsBuffer(t,e),null!=r&&s.SetData(r),this.#r.push(s),this.#r.length-1)}SetBuffer(t,r){this.GetBuffer(t).SetData(r)}SetAttribute(t,r,e){const s=this.GetAttribute(t),a=this.GetBuffer(r);s.Set(a,e)}}class Texture{#t=!1;#e=0;#i=0;#r=0;#s=0;#h="";#T=null;#E=null;#l=null;pixelPerUnit=16;sprites=[];get isLoaded(){return this.#t}get width(){return this.#e}get height(){return this.#i}get wrapMode(){return this.#r}set wrapMode(t){this.#r=t;const e=this.#E;let i=null;switch(t){case 0:i=e.CLAMP_TO_EDGE;break;case 1:i=e.REPEAT;break;case 2:i=e.MIRRORED_REPEAT}e.bindTexture(e.TEXTURE_2D,this.#l),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,i),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,i),e.bindTexture(e.TEXTURE_2D,null)}get filterMode(){return this.#s}set filterMode(t){this.#s=t;const e=this.#E;let i=null;switch(t){case 0:i=e.NEAREST;break;case 1:i=e.LINEAR}e.bindTexture(e.TEXTURE_2D,this.#l),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,i),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,i),e.bindTexture(e.TEXTURE_2D,null)}get img(){return this.#T}constructor(t){this.#T=new Image,this.#T.sprite=this,this.#E=Application.gl,this.#l=this.#E.createTexture(),this.wrapMode=0,this.filterMode=0,this.#h=t}GetNativeTexture(){return this.#l}async Load(){if(this.#t)return;this.#T.src=`img/${this.#h}`,await new Promise((t=>this.#T.onload=t)),this.#e=this.#T.width,this.#i=this.#T.height;const t=this.#E;t.bindTexture(t.TEXTURE_2D,this.#l),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,this.#e,this.#i,0,t.RGBA,t.UNSIGNED_BYTE,this.#T),t.bindTexture(t.TEXTURE_2D,null),this.sprites[0]=new Sprite(null,this),this.#t=!0}}class Sprite{pivot=new Vector2(.5,.5);texture=null;rect=null;get pixelPerUnit(){return this.texture.pixelPerUnit}get triangles(){return[0,2,1,2,3,1]}get vertices(){const t=new Rect(this.rect.x/this.texture.width,this.rect.y/this.texture.height,this.rect.width/this.texture.width,this.rect.height/this.texture.height);return[new Vector2(t.x,t.y),new Vector2(t.xMax,t.y),new Vector2(t.x,t.yMax),new Vector2(t.xMax,t.yMax)]}constructor(t,e,i){this.name=t,this.texture=e,this.rect=i??new Rect(0,0,e.width,e.height)}Duplicate(){const t=new Sprite(this.name,this.texture,this.rect);return t.pivot=this.pivot,t}}class SortingLayer{static#e=[new SortingLayer("Default",0,0)];static#t=[];static get layers(){return this.#e}static get ids(){return this.#t}id=0;value=0;name="";static Add(e){for(let t=0;t<e.length;t++)this.#e.push(new SortingLayer(e[t].name,e[t].id,e[t].value));this.#e.sort(((e,t)=>e.value-t.value)),this.#t=this.#e.map((e=>e.id))}constructor(e,t,s){this.name=e,this.id=t,this.value=s}}class Camera extends Behavior{#r=!0;#t=null;orthographicSize=9;backgroundColor=new Color;get bounds(){const r=this.orthographicSize;return new Bounds(this.transform.position,new Vector2(Window.aspect*r,1*r))}get projectionMatrix(){return this.#t}set projectionMatrix(r){this.#r=!1,this.projMatrix=r}get cameraToWorldMatrix(){return this.transform.localToWorldMatrix}get worldToCameraMatrix(){return this.transform.worldToLocalMatrix}Render(){const r=this.worldToCameraMatrix;this.#r&&(this.#t=Matrix3x3.Ortho(0,this.orthographicSize,0,this.orthographicSize));const t=new Vector2(1/Window.aspect,-1),e=Matrix3x3.TRS(t,0,t),o=this.bounds.min,i=this.bounds.max,n=this.gameObject.scene.tree.Find(Rect.MinMaxRect(o.x,o.y,i.x,i.y));n.sort(((r,t)=>r.GetComponent("Renderer").sortingOrder-t.GetComponent("Renderer").sortingOrder)),SortingLayer.ids.length>1&&n.sort(((r,t)=>SortingLayer.ids.indexOf(r.GetComponent("Renderer").sortingLayer)-SortingLayer.ids.indexOf(t.GetComponent("Renderer").sortingLayer)));for(let t=0;t<n.length;t++){const o=n[t].GetComponent("Renderer"),i=o.localToWorldMatrix,a=Matrix3x3.Multiply(Matrix3x3.Multiply(Matrix3x3.Multiply(e,this.#t),r),i);o.renderMatrix=a,o.Render()}}}class Renderer extends Component{#e=!1;#t=null;#r=null;uMatrixID=0;geometryBufferID=0;textureBufferID=0;colorBufferID=0;aVertexPosID=0;aTexturePosID=0;aColorID=0;sortingLayer=0;sortingOrder=0;color=Color.white;renderMatrix=new Matrix3x3;onMeshUpdate=new DelegateEvent;get isLoaded(){return this.#e}get meshChanged(){return!1}get bounds(){return new Bounds}get material(){return this.#r}set material(e){this.#t=e,this.Reload()}get localToWorldMatrix(){return Matrix3x3.identity}constructor(e){super(),this.#t=e??new Material}Reload(){this.#t.SetSampler2D("uSampler",0),this.#r=this.#t,this.uMatrixID=this.material.GetPropertyNameID("uMatrix"),this.geometryBufferID=this.material.AddBuffer("geometry",null,2),this.textureBufferID=this.material.AddBuffer("texture",null,2),this.colorBufferID=this.material.AddBuffer("color",null,4),this.aVertexPosID=this.material.GetAttributeNameID("aVertexPos"),this.aTexturePosID=this.material.GetAttributeNameID("aTexturePos"),this.aColorID=this.material.GetAttributeNameID("aColor"),this.#e=!0}RecalcBounds(){const e=this.bounds.min,t=this.bounds.max,r=Rect.MinMaxRect(e.x,e.y,t.x,t.y);this.gameObject.scene.tree?.Relocate(this.gameObject,r)}ForceMeshUpdate(){this.onMeshUpdate.Invoke(),this.RecalcBounds()}Render(){}}class SpriteRenderer extends Renderer{#t=!0;#e=0;#r=Vector2.zero;#i=new Bounds;#s=new Matrix3x3;#a=null;#o=null;#l=null;get meshChanged(){return this.#t}get bounds(){return new Bounds(this.#i.center,this.#i.size)}get sprite(){return this.#o}set sprite(t){this.#a=t,this.Reload()}get localToWorldMatrix(){return Matrix3x3.Multiply(this.transform.localToWorldMatrix,this.#s)}constructor(t,e){super(e),this.sprite=t}#h(){this.#l=this.color;const t=[this.color.r,this.color.g,this.color.b,this.color.a];this.material.SetBuffer(this.colorBufferID,[...t,...t,...t,...t,...t,...t])}Reload(){if(!this.#a.texture.isLoaded)return void requestAnimationFrame((()=>this.Reload()));super.Reload(),this.#o=this.#a;const t=this.sprite.vertices,e=t[0],r=this.sprite.triangles;let i=[],s=[];for(let a=0;a<r.length;a++){const o=t[r[a]],l=2*a;i[l]=o.x-e.x,i[l+1]=o.y-e.y,s[l]=o.x,s[l+1]=o.y}this.#e=r.length,this.material.SetBuffer(this.geometryBufferID,i),this.material.SetBuffer(this.textureBufferID,s),this.#h();const a=this.sprite.pixelPerUnit,o=this.sprite.texture.width,l=this.sprite.texture.height,h=o/a,u=l/a,n=new Vector2(h*(t[3].x-e.x),u*(t[3].y-e.y));this.#r=n,this.#s=Matrix3x3.TRS(Vector2.Scale(this.sprite.pivot,Vector2.Scale(n,-1)),0,Vector2.Scale(o>l?new Vector2(1,l/o):new Vector2(o/l,1),o>l?h:u))}RecalcBounds(){const t=new Bounds(Vector2.zero,this.#r),e=this.transform.localToWorldMatrix,r=Matrix3x3.Multiply(e,Matrix3x3.Translate(t.min)),i=Matrix3x3.Multiply(e,Matrix3x3.Translate(new Vector2(t.min.x,t.max.y))),s=Matrix3x3.Multiply(e,Matrix3x3.Translate(new Vector2(t.max.x,t.min.y))),a=Matrix3x3.Multiply(e,Matrix3x3.Translate(t.max));t.SetMinMax(new Vector2(Math.min(r.GetValue(2,0),i.GetValue(2,0),s.GetValue(2,0),a.GetValue(2,0)),Math.min(-r.GetValue(2,1),-i.GetValue(2,1),-s.GetValue(2,1),-a.GetValue(2,1))),new Vector2(Math.max(r.GetValue(2,0),i.GetValue(2,0),s.GetValue(2,0),a.GetValue(2,0)),Math.max(-r.GetValue(2,1),-i.GetValue(2,1),-s.GetValue(2,1),-a.GetValue(2,1)))),this.#i=t,super.RecalcBounds()}ForceMeshUpdate(){super.ForceMeshUpdate(),this.#t=!1}Render(){if(!this.isLoaded||!this.gameObject.activeSelf)return;this.#l!==this.color&&this.#h();const t=this.material.gl,e=this.renderMatrix;this.material.SetMatrix(this.uMatrixID,e.matrix[0][0],e.matrix[0][1],e.matrix[0][2],e.matrix[1][0],e.matrix[1][1],e.matrix[1][2],e.matrix[2][0],e.matrix[2][1],e.matrix[2][2]),this.material.SetAttribute(this.aVertexPosID,this.geometryBufferID),this.material.SetAttribute(this.aTexturePosID,this.textureBufferID),this.material.SetAttribute(this.aColorID,this.colorBufferID),t.useProgram(this.material.program),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,this.sprite.texture.GetNativeTexture()),t.drawArrays(t.TRIANGLE_STRIP,0,this.#e-1),t.useProgram(null)}}class Grid extends Behavior{cellGap=Vector2.zero;cellSize=new Vector2(.5,.5);CellToWorldUnscaled(e){return Vector2.Scale(e,Vector2.Add(this.cellSize,this.cellGap))}CellToWorld(e){const l=Matrix3x3.Multiply(this.transform.localToWorldMatrix,Matrix3x3.Translate(Vector2.Scale(this.CellToWorldUnscaled(e),new Vector2(1,-1))));return new Vector2(l.GetValue(2,0),-l.GetValue(2,1))}WorldToCell(e){const l=Matrix3x3.Multiply(this.transform.worldToLocalMatrix,Matrix3x3.Translate(new Vector2(e.x,-e.y))),r=Vector2.Divide(new Vector2(l.GetValue(2,0),-l.GetValue(2,1)),Vector2.Add(this.cellSize,this.cellGap));return new Vector2(Math.round(r.x),Math.round(r.y))}SnapToGrid(e){return this.CellToWorld(this.WorldToCell(e))}}