const AsyncFunction=(async()=>{}).constructor,FetchFile=async c=>CrystalEngine.FetchFile(c);class DelegateEvent{#l=[];get count(){return this.#l.length}Add(l){return this.#l.push(l),l}Remove(l){const s=this.#l.indexOf(l);s<0||this.#l.splice(s,1)}RemoveAll(){this.#l=[]}Invoke(...l){for(let s=0;s<this.#l.length;s++)this.#l[s](...l)}}Application.Bind((async()=>{await SceneManager.Load(0),SceneManager.SetActiveScene(0)}),(()=>{Input.Terminate(),SceneManager.UnloadAll(),Application.htmlCanvas.style.display="none"})),Application.wantsToQuit=new DelegateEvent,Application.unloading=new DelegateEvent,Application.quitting=new DelegateEvent;Object.prototype.name=null,Object.prototype.toString=function(){return this.name},Object.prototype.Duplicate=()=>null,Object.InstantiationQueue=new DelegateEvent,Object.prototype.Instantiate=async function(e,n,t,o){if(!(e instanceof GameObject||e instanceof Component||e.__isPrefab))return null;let a=!1;e instanceof Component?e=e.gameObject:e.__isPrefab&&(a=!0);const c=SceneManager.GetActiveScene(),r=[];for(let n=+!a;n<e.components.length;n++){if(a){r.push(await SceneManager.CreateObject(e.components[n].type,e.components[n].args));continue}if(null==CrystalEngine.Inner.GetClassOfType(e.components[n].constructor.name,0))return;const t=e.components[n].Duplicate();null!=t&&r.push(t)}let s=0;for(;null!=GameObject.FindByID(s);)s++;let i=null;t instanceof Vector2?(i=a?await SceneManager.CreateObject("Transform",e.transform):e.transform.Duplicate(),i.position=t.Duplicate()):i=t??(a?await SceneManager.CreateObject("Transform",e.transform):e.transform.Duplicate()),null!=o&&(i.rotation=o);const u=new GameObject(`${e.name} (Clone)`,r,e.active,i,s);u.scene=c;const l=u.GetComponent("Renderer");return Object.InstantiationQueue.Add((()=>{if(null!=l){const e=l.bounds.min,n=l.bounds.max,t=Rect.MinMaxRect(e.x,e.y,n.x,n.y);c.tree.Insert(u,t)}c.gameObjects.push(u),n?.AttachChild(t)})),u},Object.prototype.DontDestroyOnLoad=function(e,n=[]){if(!(e instanceof GameObject||e instanceof Component))return null;e instanceof Component&&(e=e.gameObject),e.keepOnLoad=!0,Resources.DontDestroyOnLoad(...n)},Object.prototype.DestroyOnLoad=function(e,n=[]){if(!(e instanceof GameObject||e instanceof Component))return null;e instanceof Component&&(e=e.gameObject),e.keepOnLoad=!1,Resources.DestroyOnLoad(...n)};class Resources{static#t=[];static#e=[];static#a=[];static keepOnLoad=[];static async#s(name,type,data){const dat=data??{};let object=null;const foundClass=CrystalEngine.Inner.GetClassOfType(type,1);if(null==foundClass)return;const construction=foundClass.construction,properties=foundClass.args;if(null!=construction){const t=new AsyncFunction("data","toObject",construction);object=await t(dat,(async(t,e)=>await SceneManager.CreateObject(t,e)))}else object=eval(`new ${type}()`);for(let i=0;i<properties.length;i++){const dataIn=eval(`dat.${properties[i].name}`);if("object"!=typeof properties[i]||void 0===dataIn)continue;let subObj=null;if(null!=properties[i].evaluation){const t=new AsyncFunction("data",properties[i].evaluation);subObj=await t(dataIn)}else if(null!=properties[i].evalType){const t=new AsyncFunction("data",properties[i].evalType),e=await t(dataIn);subObj=await SceneManager.CreateObject(e,dataIn)}else subObj=["bool","number","string","object"].includes(properties[i].type)?dataIn:properties[i].array?await SceneManager.CreateObjectArray(properties[i].type,dataIn):await SceneManager.CreateObject(properties[i].type,dataIn);eval(`object.${properties[i].name} = subObj`)}return null!=name&&(object.name=name),object}static Set(t){this.UnloadAll(),this.#a=t.filter((t=>"GameObject"===t.type)).map((t=>{const e=t.args;return e.__isPrefab=!0,{path:t.path,obj:e}})),this.#t=t.filter((t=>"GameObject"!==t.type))}static Unload(...t){for(let e=0;e<t.length;e++){const a=this.#e.find((a=>a.path===t[e]));if(null==a)continue;a.obj.Unload();const s=this.keepOnLoad.indexOf(t[e]);this.keepOnLoad.splice(s,1);const n=this.#e.indexOf(a);this.#e.splice(n,1)}}static UnloadAll(){for(let t=0;t<this.#e.length;t++)this.#e[t].obj.Unload();this.#e=[],this.keepOnLoad=[]}static Find(t){const e=this.#e.find((e=>e.path===t));return e?.obj}static FindPrefab(t){const e=this.#a.find((e=>e.path===t));return e?.obj}static async Load(...t){const e=t.length;let a=0;for(let e=0;e<t.length;e++){if(Array.isArray(t[e])){(async()=>{for(let a=0;a<t[e].length;a++)await this.Load(t[e][a]);a++})();continue}if(null!=this.#e.find((e=>e.path===t)))continue;const s=this.#t.find((a=>a.path===t[e]));if(null==s)throw new Error(`Resource Non-existent "${t[e]}"`);(async()=>{const n=await this.#s(t[e].split("/").slice(-1)[0],s.type,s.args);this.#e.push({path:t[e],obj:n}),a++})()}await CrystalEngine.Wait((()=>a===e))}static DontDestroyOnLoad(...t){this.keepOnLoad.push(...t)}static DestroyOnLoad(...t){for(let e=0;e<t.length;e++){const a=this.keepOnLoad.indexOf(t[e]);this.keepOnLoad.splice(a,1)}}}class Time{static frameCount=0;static unscaledTime=0;static unscaledDeltaTime=0;static timeScale=1;static time=0;static deltaTime=0;static maximumDeltaTime=.3333333;static fixedUnscaledTime=0;static fixedUnscaledDeltaTime=0;static fixedTime=0;static fixedDeltaTime=.02}class Vector2{static get zero(){return new Vector2}static get one(){return new Vector2(1,1)}static get up(){return new Vector2(0,1)}static get down(){return new Vector2(0,-1)}static get left(){return new Vector2(-1,0)}static get right(){return new Vector2(1,0)}x=0;y=0;get magnitude(){return Math.sqrt(this.sqrMagnitude)}get sqrMagnitude(){return this.x*this.x+this.y*this.y}get normalized(){return new Vector2(this.x/this.magnitude||0,this.y/this.magnitude||0)}get abs(){return new Vector2(Math.abs(this.x),Math.abs(this.y))}constructor(t,e){this.Set(t??0,e??0)}static Distance(t,e){return Math.sqrt((t.x-e.x)**2+(t.y-e.y)**2)}static Dot(t,e){return t.x*e.x+t.y*e.y}static Min(t,e){return new Vector2(Math.min(t.x,e.x),Math.min(t.y,e.y))}static Max(t,e){return new Vector2(Math.max(t.x,e.x),Math.max(t.y,e.y))}static Clamp(t,e,r){return Vector2.Min(Vector2.Max(t,e),r)}static Abs(t){return t.abs}static Add(t,e){return"number"==typeof e?new Vector2(t.x+e,t.y+e):new Vector2(t.x+e.x,t.y+e.y)}static Subtract(t,e){return"number"==typeof e?new Vector2(t.x-e,t.y-e):new Vector2(t.x-e.x,t.y-e.y)}static Scale(t,e){return"number"==typeof e?new Vector2(t.x*e,t.y*e):new Vector2(t.x*e.x,t.y*e.y)}static Divide(t,e){return"number"==typeof e?new Vector2(t.x/e,t.y/e):new Vector2(t.x/e.x,t.y/e.y)}static Lerp(t,e,r){return new Vector2(Math.Lerp(t.x,e.x,r),Math.Lerp(t.y,e.y,r))}static LerpUnclamped(t,e,r){return new Vector2(Math.LerpUnclamped(t.x,e.x,r),Math.LerpUnclamped(t.y,e.y,r))}toString(){return`(${this.x.toFixed(2)}, ${this.y.toFixed(2)})`}Equals(t){return this.x==t.x&&this.y==t.y}Greater(t){const e=[this.x<t.x,this.y<t.y],r=[this.x>t.x&&!e[0],this.y>t.y&&!e[1]];return r[0]||r[1]}Normalize(){const t=this.normalized;this.x=t.x,this.y=t.y}Set(t,e){this.x=t,this.y=e}Duplicate(){return new Vector2(this.x,this.y)}}class Vector4{static get zero(){return new Vector4}static get one(){return new Vector4(1,1,1,1)}x=0;y=0;z=0;w=0;get magnitude(){return Math.sqrt(this.sqrMagnitude)}get sqrMagnitude(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}get normalized(){return new Vector4(this.x/this.magnitude||0,this.y/this.magnitude||0,this.z/this.magnitude||0,this.w/this.magnitude||0)}get abs(){return new Vector4(Math.abs(this.x),Math.abs(this.y),Math.abs(this.z),Math.abs(this.w))}constructor(t,e,r,i){this.Set(t??0,e??0,r??0,i??0)}static Distance(t,e){return Math.sqrt((t.x-e.x)**2+(t.y-e.y)**2+(t.z-e.z)**2+(t.w-e.w)**2)}static Dot(t,e){return t.x*e.x+t.y*e.y+t.z*e.z+t.w*e.w}static Min(t,e){return new Vector4(Math.min(t.x,e.x),Math.min(t.y,e.y),Math.min(t.z,e.z),Math.min(t.w,e.w))}static Max(t,e){return new Vector4(Math.max(t.x,e.x),Math.max(t.y,e.y),Math.max(t.z,e.z),Math.max(t.w,e.w))}static Clamp(t,e,r){return Vector4.Min(Vector4.Max(t,e),r)}static Abs(t){return t.abs}static Add(t,e){return"number"==typeof e?new Vector4(t.x+e,t.y+e,t.z+e,t.w+e):new Vector4(t.x+e.x,t.y+e.y,t.z+e.z,t.w+e.w)}static Subtract(t,e){return"number"==typeof e?new Vector4(t.x-e,t.y-e,t.z-e,t.w-e):new Vector4(t.x-e.x,t.y-e.y,t.z-e.z,t.w-e.w)}static Scale(t,e){return"number"==typeof e?new Vector4(t.x*e,t.y*e,t.z*e,t.w*e):new Vector4(t.x*e.x,t.y*e.y,t.z*e.z,t.w*e.w)}static Divide(t,e){return"number"==typeof e?new Vector4(t.x/e,t.y/e,t.z/e,t.w/e):new Vector4(t.x/e.x,t.y/e.y,t.z/e.z,t.w/e.w)}static Lerp(t,e,r){return new Vector4(Math.Lerp(t.x,e.x,r),Math.Lerp(t.y,e.y,r),Math.Lerp(t.z,e.z,r),Math.Lerp(t.w,e.w,r))}static LerpUnclamped(t,e,r){return new Vector4(Math.LerpUnclamped(t.x,e.x,r),Math.LerpUnclamped(t.y,e.y,r),Math.LerpUnclamped(t.z,e.z,r),Math.LerpUnclamped(t.w,e.w,r))}toString(){return`(${this.x.toFixed(2)}, ${this.y.toFixed(2)}, ${this.z.toFixed(2)}, ${this.w.toFixed(2)})`}Equals(t){return this.x==t.x&&this.y==t.y&&this.z==t.z&&this.w==t.w}Greater(t){const e=[this.x<t.x,this.y<t.y,this.z<t.z,this.w<t.w],r=[this.x>t.x&&!e[0],this.y>t.y&&!e[1],this.z>t.z&&!e[2],this.w>t.w&&!e[3]];return r[0]||r[1]||r[2]||r[3]}Normalize(){const t=this.normalized;this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w}Set(t,e,r,i){this.x=t,this.y=e,this.z=r,this.w=i}Duplicate(){return new Vector4(this.x,this.y,this.z,this.w)}}class TouchPhase{static get Began(){return 0}static get Moved(){return 1}static get Stationary(){return 2}static get Ended(){return 3}static get Cancelled(){return 4}}class Touch{fingerID=0;pressure=0;lastTime=0;deltaTime=0;radius=0;rawPosition=new Vector2;position=new Vector2;deltaPosition=new Vector2;phase=TouchPhase.Began}class Input{static#e=!1;static#t=!1;static#s=!1;static#i=[];static#n=[];static#h=[];static#o=[];static#a=[];static#r=new Vector2;static#c=new Vector2;static get mousePresent(){return this.#s}static get mousePosition(){return this.#r.Duplicate()}static get mousePositionDelta(){return this.#c.Duplicate()}static get touchCount(){return this.#a.length}static get touches(){return[...this.#a]}static get anyKey(){for(let e=0;e<this.#i.length;e++)if(this.#i[e].active)return!0;return!1}static get anyKeyDown(){for(let e=0;e<this.#i.length;e++)if(this.#i[e].active&&!this.#i[e].lastState)return!0;return!1}static get anyKeyUp(){for(let e=0;e<this.#i.length;e++)if(!this.#i[e].active&&this.#i[e].lastState)return!0;return!1}static#u=class{active=!1;lastState=!1;isLetter=!1;name="";code="";constructor(e,t,s){this.name=e,this.code=t,this.isLetter=s??!1}};static#y(e){let t=-1;return this.#i.find(((s,i)=>s.name===e&&(t=i,!0))),t}static#l(e){let t=-1;return this.#i.find(((s,i)=>s.code===(s.isLetter?e.toLowerCase():e)&&(t=i,!0))),t}static Init(){this.#i=[new this.#u("alt","Alt"),new this.#u("altgr","AltGraph"),new this.#u("capslock","CapsLock"),new this.#u("numlock","NumLock"),new this.#u("scrollock","ScrollLock"),new this.#u("ctrl","Control"),new this.#u("meta","Meta"),new this.#u("shift","Shift"),new this.#u("enter","Enter"),new this.#u("tab","Tab"),new this.#u("space"," "),new this.#u("arrowup","ArrowUp"),new this.#u("arrowdown","ArrowDown"),new this.#u("arrowleft","ArrowLeft"),new this.#u("arrowright","ArrowRight"),new this.#u("end","End"),new this.#u("home","Home"),new this.#u("pagedown","PageDown"),new this.#u("pageup","PageUp"),new this.#u("backspace","Backspace"),new this.#u("clear","Clear"),new this.#u("delete","Delete"),new this.#u("insert","Insert"),new this.#u("menu","ContextMenu"),new this.#u("esc","Escape"),new this.#u("help","Help"),new this.#u("pause","Pause"),new this.#u("print","Print"),new this.#u("printscreen","PrintScreen"),new this.#u("num0","0"),new this.#u("num1","1"),new this.#u("num2","2"),new this.#u("num3","3"),new this.#u("num4","4"),new this.#u("num5","5"),new this.#u("num6","6"),new this.#u("num7","7"),new this.#u("num8","8"),new this.#u("num9","9"),new this.#u("tilde","~"),new this.#u("exclaim","!"),new this.#u("at","@"),new this.#u("hash","#"),new this.#u("dollar","$"),new this.#u("percent","%"),new this.#u("caret","^"),new this.#u("ampersand","&"),new this.#u("asterisk","*"),new this.#u("leftparen","("),new this.#u("rightparen","("),new this.#u("minus","-"),new this.#u("underscore","_"),new this.#u("equals","="),new this.#u("plus","+"),new this.#u("quote","'"),new this.#u("doublequote",'"'),new this.#u("backquote","`"),new this.#u("leftbracket","["),new this.#u("rightbracket","["),new this.#u("leftcurlybracket","{"),new this.#u("rightcurlybracket","{"),new this.#u("slash","/"),new this.#u("backslash","\\"),new this.#u("pipe","|"),new this.#u("colon",":"),new this.#u("semicolon",";"),new this.#u("less","<"),new this.#u("greater",">"),new this.#u("question","?"),new this.#u("period","."),new this.#u("comma",","),new this.#u("f1","F1"),new this.#u("f2","F2"),new this.#u("f3","F3"),new this.#u("f4","F4"),new this.#u("f5","F5"),new this.#u("f6","F6"),new this.#u("f7","F7"),new this.#u("f8","F8"),new this.#u("f9","F9"),new this.#u("f10","F10"),new this.#u("f11","F11"),new this.#u("f12","F12"),new this.#u("a","a",!0),new this.#u("b","b",!0),new this.#u("c","c",!0),new this.#u("d","d",!0),new this.#u("e","e",!0),new this.#u("f","f",!0),new this.#u("g","g",!0),new this.#u("h","h",!0),new this.#u("i","i",!0),new this.#u("j","j",!0),new this.#u("k","k",!0),new this.#u("l","l",!0),new this.#u("m","m",!0),new this.#u("n","n",!0),new this.#u("o","o",!0),new this.#u("p","p",!0),new this.#u("q","q",!0),new this.#u("r","r",!0),new this.#u("s","s",!0),new this.#u("t","t",!0),new this.#u("u","u",!0),new this.#u("v","v",!0),new this.#u("w","w",!0),new this.#u("x","x",!0),new this.#u("y","y",!0),new this.#u("z","z",!0),new this.#u("mouse0","mouse0"),new this.#u("mouse1","mouse1"),new this.#u("mouse2","mouse2")],document.addEventListener("keydown",(e=>{if(!PlayerLoop.isPlaying||this.#t)return;if(Application.debugMode&&e.ctrlKey&&e.shiftKey&&["j","i","c"].includes(e.key.toLowerCase()))return void(Application.isInElectron&&Application.electronIPC.invoke("OpenDevtools"));e.preventDefault();const t=this.#l(e.key);t>=0&&(this.#i[t].active=!0)})),document.addEventListener("keyup",(e=>{if(!PlayerLoop.isPlaying||this.#t)return;e.preventDefault();const t=this.#l(e.key);t>=0&&(this.#i[t].active=!1)})),document.addEventListener("mousemove",(e=>{setMousePos(e),this.#s=!0})),document.addEventListener("mouseleave",(e=>{setMousePos(e),this.#s=!1})),document.addEventListener("contextmenu",(e=>e.preventDefault()));const setMousePos=e=>{var t,s;this.#c=new Vector2(e.movementX,e.movementY),this.#r=(t=e.clientX,s=e.clientY,new Vector2(Math.Clamp(t,0,window.innerWidth),Math.Clamp(s,0,window.innerHeight)))},e=["mouse0","mouse2","mouse1"];document.addEventListener("mousedown",(t=>{if(!PlayerLoop.isPlaying||this.#t)return;t.preventDefault(),setMousePos(t);const s=this.#l(e[t.button]);this.#i[s].active=!0})),document.addEventListener("mouseup",(t=>{if(!PlayerLoop.isPlaying||this.#t)return;t.preventDefault(),setMousePos(t);const s=this.#l(e[t.button]);this.#i[s].active=!1})),document.addEventListener("touchstart",(e=>{if(!PlayerLoop.isPlaying||this.#t)return;e.preventDefault(),this.#n=e.touches;const t=e.changedTouches;for(let e=0;e<t.length;e++)this.#h.push(t[e].identifier)}),{passive:!1}),document.addEventListener("touchmove",(e=>{if(!PlayerLoop.isPlaying||this.#t)return;e.preventDefault(),this.#n=e.touches;const t=e.changedTouches;for(let e=0;e<t.length;e++)this.#h.push(t[e].identifier)}),{passive:!1}),document.addEventListener("touchend",(e=>{if(!PlayerLoop.isPlaying||this.#t)return;e.preventDefault(),this.#n=e.touches;const t=e.changedTouches;if("touchcancel"===e.type)for(let e=0;e<t.length;e++)this.#o.push(t[e].identifier)})),document.addEventListener("touchcancel",(e=>{PlayerLoop.isPlaying&&!this.#t&&(e.preventDefault(),this.#n=e.touches)})),GamepadInput.Init()}static Terminate(){this.#e=!0}static Update(){if(this.#t)return;if(!PlayerLoop.isPlaying)return void this.Clear();const getScreenPos=(e,t)=>new Vector2(Math.Clamp(e,0,window.innerWidth),Math.Clamp(t,0,window.innerHeight));let e=[];for(let t=0;t<this.#n.length;t++){const s=this.#n[t];this.#o.includes(s.identifier)||e.push(s)}for(let t=0;t<e.length;t++){const s=e[t];if(!this.#h.includes(s.identifier))continue;let i=this.#a.find((e=>e.fingerID===s.identifier));if(null==i){i=new Touch,this.#a.push(i),i.fingerID=s.identifier,i.pressure=s.force,i.lastTime=Time.time,i.radius=.5*(s.radiusX+s.radiusY),i.rawPosition=new Vector2(s.clientX,s.clientY),i.position=getScreenPos(s.clientX,s.clientY);continue}i.pressure=s.force,i.deltaTime=Time.time-i.lastTime,i.lastTime=Time.time,i.radius=.5*(s.radiusX+s.radiusY),i.rawPosition=new Vector2(s.clientX,s.clientY);const n=getScreenPos(s.clientX,s.clientY);i.deltaPosition=Vector2.Subtract(n,i.position),i.position=n,i.phase!==TouchPhase.Began&&i.phase!==TouchPhase.Stationary||(i.phase=TouchPhase.Moved)}for(let t=0;t<this.#a.length;t++){const s=this.#a[t];e.map((e=>e.identifier)).includes(s.fingerID)||(s.phase=this.#o.includes(s.fingerID)?TouchPhase.Cancelled:TouchPhase.Ended)}this.#h=[],this.#o=[],GamepadInput.Update(),Cursor.Update()}static End(){if(this.#t||!PlayerLoop.isPlaying)return;for(let e=0;e<this.#i.length;e++)this.#i[e].lastState=this.#i[e].active;this.#c=Vector2.zero;let e=[];for(let t=0;t<this.#a.length;t++){const s=this.#a[t];switch(s.phase){case TouchPhase.Began:case TouchPhase.Moved:s.phase=TouchPhase.Stationary;break;case TouchPhase.Ended:case TouchPhase.Cancelled:e.push(s)}}for(let t=0;t<e.length;t++)this.#a.splice(this.#a.indexOf(e[t]),1);GamepadInput.End(),this.#e&&(this.#t=!0)}static Clear(){for(let e=0;e<this.#i.length;e++)this.#i[e].active=!1;this.#n=[],GamepadInput.Clear()}static GetKey(e){let t=e;if("string"==typeof e){if(t=this.#y(e),null==t)return!1}else if(e<0||e>=this.#i.length)return;return this.#i[t].active}static GetKeyDown(e){let t=e;if("string"==typeof e){if(t=this.#y(e),null==t)return!1}else if(e<0||e>=this.#i.length)return;return this.#i[t].active&&!this.#i[t].lastState}static GetKeyUp(e){let t=e;if("string"==typeof e){if(t=this.#y(e),null==t)return!1}else if(e<0||e>=this.#i.length)return;return!this.#i[t].active&&this.#i[t].lastState}static GetMouseButton(e){return this.GetKey(["mouse0","mouse1","mouse2"][e])}static GetMouseButtonDown(e){return this.GetKeyDown(["mouse0","mouse1","mouse2"][e])}static GetMouseButtonUp(e){return this.GetKeyUp(["mouse0","mouse1","mouse2"][e])}static GetTouch(e){return this.#a[e]}}class KeyCode{static get Alt(){return 0}static get AltGr(){return 1}static get CapsLock(){return 2}static get NumLock(){return 3}static get ScrollLock(){return 4}static get Ctrl(){return 5}static get Meta(){return 6}static get Shift(){return 7}static get Enter(){return 8}static get Tab(){return 9}static get Space(){return 10}static get ArrowUp(){return 11}static get ArrowDown(){return 12}static get ArrowLeft(){return 13}static get ArrowRight(){return 14}static get End(){return 15}static get Home(){return 16}static get PageDown(){return 17}static get PageUp(){return 18}static get Backspace(){return 19}static get Clear(){return 20}static get Delete(){return 21}static get Insert(){return 22}static get Menu(){return 23}static get Esc(){return 24}static get Help(){return 25}static get Pause(){return 26}static get Print(){return 27}static get PrintScreen(){return 28}static get Num0(){return 29}static get Num1(){return 30}static get Num2(){return 31}static get Num3(){return 32}static get Num4(){return 33}static get Num5(){return 34}static get Num6(){return 35}static get Num7(){return 36}static get Num8(){return 37}static get Num9(){return 38}static get Tilde(){return 39}static get Exclaim(){return 40}static get At(){return 41}static get Hash(){return 42}static get Dollar(){return 43}static get Percent(){return 44}static get Caret(){return 45}static get Ampersand(){return 46}static get Asterisk(){return 47}static get LeftParen(){return 48}static get RightParen(){return 49}static get Minus(){return 50}static get Underscore(){return 51}static get Equals(){return 52}static get Plus(){return 53}static get Quote(){return 54}static get DoubleQuote(){return 55}static get BackQuote(){return 56}static get LeftBracket(){return 57}static get RightBracket(){return 58}static get LeftCurlyBracket(){return 59}static get RightCurlyBracket(){return 60}static get Slash(){return 61}static get Backslash(){return 62}static get Pipe(){return 63}static get Colon(){return 64}static get Semicolon(){return 65}static get Less(){return 66}static get Greater(){return 67}static get Question(){return 68}static get Period(){return 69}static get Comma(){return 70}static get F1(){return 71}static get F2(){return 72}static get F3(){return 73}static get F4(){return 74}static get F5(){return 75}static get F6(){return 76}static get F7(){return 77}static get F8(){return 78}static get F9(){return 79}static get F10(){return 80}static get F11(){return 81}static get F12(){return 82}static get A(){return 83}static get B(){return 84}static get C(){return 85}static get D(){return 86}static get E(){return 87}static get F(){return 88}static get G(){return 89}static get H(){return 90}static get I(){return 91}static get J(){return 92}static get K(){return 93}static get L(){return 94}static get M(){return 95}static get N(){return 96}static get O(){return 97}static get P(){return 98}static get Q(){return 99}static get R(){return 100}static get S(){return 101}static get T(){return 102}static get U(){return 103}static get V(){return 104}static get W(){return 105}static get X(){return 106}static get Y(){return 107}static get Z(){return 108}static get Mouse0(){return 109}static get Mouse1(){return 110}static get Mouse2(){return 111}static get SouthButton(){return 0}static get EastButton(){return 1}static get WestButton(){return 2}static get NorthButton(){return 3}static get LeftBumper(){return 4}static get RightBumper(){return 5}static get LeftTrigger(){return 6}static get RightTrigger(){return 7}static get Select(){return 8}static get Start(){return 9}static get LeftStickButton(){return 10}static get RightStickButton(){return 11}static get DpadUp(){return 12}static get DpadDown(){return 13}static get DpadLeft(){return 14}static get DpadRight(){return 15}static get Home(){return 16}}class GamepadInput{static#t=!1;static#e=[];static#s=[];static#i=[];static#a=class{active=!1;lastState=!1;name="";constructor(t){this.name=t}};static#n=class{value=0;name="";constructor(t){this.name=t}};static#h(t){let e=-1;return this.#s.find(((s,i)=>s.name===t&&(e=i,!0))),e}static leftStickDeadzone=new Vector2(.125,.925);static rightStickDeadzone=new Vector2(.125,.925);static get isConnected(){return 0!==this.#e.length}static get anyKey(){for(let t=0;t<this.#s.length;t++)if(this.#s[t].active)return!0;for(let t=0;t<this.#i.length;t++)if(Math.abs(this.#i[t].value)>0)return!0;return!1}static get anyKeyDown(){for(let t=0;t<this.#s.length;t++)if(this.#s[t].active&&!this.#s[t].lastState)return!0;return!1}static get anyKeyUp(){for(let t=0;t<this.#s.length;t++)if(!this.#s[t].active&&this.#s[t].lastState)return!0;return!1}static Init(){this.#s=[new this.#a("south button"),new this.#a("east button"),new this.#a("west button"),new this.#a("north button"),new this.#a("left bumper"),new this.#a("right bumper"),new this.#a("left trigger"),new this.#a("right trigger"),new this.#a("select"),new this.#a("start"),new this.#a("left stick button"),new this.#a("right stick button"),new this.#a("dpad up"),new this.#a("dpad down"),new this.#a("dpad left"),new this.#a("dpad right"),new this.#a("home")],this.#i=[new this.#n("left trigger"),new this.#n("right trigger"),new this.#n("left stick horizontal"),new this.#n("left stick vertical"),new this.#n("right stick horizontal"),new this.#n("right stick vertical")],"GamepadEvent"in window?(window.addEventListener("gamepadconnected",(t=>this.#e.push(t.gamepad))),window.addEventListener("gamepaddisconnected",(t=>{this.#e.splice(this.#e.indexOf(t.gamepad),1),this.Clear()}))):"WebkitGamepadEvent"in window?(window.addEventListener("webkitgamepadconnected",(t=>this.#e.push(t.gamepad))),window.addEventListener("webkitgamepaddisconnected",(t=>{this.#e.splice(this.#e.indexOf(t.gamepad),1),this.Clear()}))):this.#t=!0}static Update(){const t=null!=navigator.getGamepads?navigator.getGamepads():null!=navigator.webkitGetGamepads?navigator.webkitGetGamepads():[];this.#t&&(this.#e=t.filter((t=>null!=t)),0===this.#e.length&&this.Clear());const processButton=t=>t.pressed||t.touched||t.value>0;for(let e=0;e<this.#e.length&&t.length>0;e++){const s=t[this.#e[e]?.index];this.#s[0].active=processButton(s.buttons[0]),this.#s[1].active=processButton(s.buttons[1]),this.#s[2].active=processButton(s.buttons[2]),this.#s[3].active=processButton(s.buttons[3]),this.#s[4].active=processButton(s.buttons[4]),this.#s[5].active=processButton(s.buttons[5]),this.#s[6].active=processButton(s.buttons[6]),this.#s[7].active=processButton(s.buttons[7]),this.#s[8].active=processButton(s.buttons[8]),this.#s[9].active=processButton(s.buttons[9]),this.#s[10].active=processButton(s.buttons[10]),this.#s[11].active=processButton(s.buttons[11]),this.#s[12].active=processButton(s.buttons[12]),this.#s[13].active=processButton(s.buttons[13]),this.#s[14].active=processButton(s.buttons[14]),this.#s[15].active=processButton(s.buttons[15]),this.#s[16].active=processButton(s.buttons[16]),this.#i[0].value=s.buttons[6].value,this.#i[1].value=s.buttons[7].value;let i=s.axes[0],a=-s.axes[1];Math.abs(i)<=this.leftStickDeadzone.x?i=0:Math.abs(i)>=this.leftStickDeadzone.y&&(i/=Math.abs(i)),Math.abs(a)<=this.leftStickDeadzone.x?a=0:Math.abs(a)>=this.leftStickDeadzone.y&&(a/=Math.abs(a)),this.#i[2].value=i,this.#i[3].value=a;let n=s.axes[2],h=-s.axes[3];Math.abs(n)<=this.rightStickDeadzone.x?n=0:Math.abs(n)>=this.rightStickDeadzone.y&&(n/=Math.abs(n)),Math.abs(h)<=this.rightStickDeadzone.x?h=0:Math.abs(h)>=this.rightStickDeadzone.y&&(h/=Math.abs(h)),this.#i[4].value=n,this.#i[5].value=h}}static End(){for(let t=0;t<this.#s.length;t++)this.#s[t].lastState=this.#s[t].active}static Clear(){for(let t=0;t<this.#s.length;t++)this.#s[t].active=!1;for(let t=0;t<this.#i.length;t++)this.#i[t].value=0}static GetKey(t){let e=t;if("string"==typeof t){if(e=this.#h(t),null==e)return!1}else if(t<0||t>=this.#s.length)return;return this.#s[e].active}static GetKeyDown(t){let e=t;if("string"==typeof t){if(e=this.#h(t),null==e)return!1}else if(t<0||t>=this.#s.length)return;return this.#s[e].active&&!this.#s[e].lastState}static GetKeyUp(t){let e=t;if("string"==typeof t){if(e=this.#h(t),null==e)return!1}else if(t<0||t>=this.#s.length)return;return!this.#s[e].active&&this.#s[e].lastState}static GetAxis(t){return this.#i.find((e=>e.name===t)).value}}class Cursor{static#t=!0;static locked=!1;static get visible(){return this.#t}static set visible(t){t!==this.#t&&(this.#t=t,document.body.style.cursor=t?"":"none")}static Update(){document.hasFocus()&&(document.pointerLockElement&&!this.locked?document.exitPointerLock():!document.pointerLockElement&&this.locked&&document.documentElement.requestPointerLock().catch((()=>{})))}}class Component{#e=null;get transform(){return this.#e.transform}set transform(e){this.#e.transform=e}get gameObject(){return this.#e}set gameObject(e){this.#e=e}BroadcastMessage(e,t,n){this.#e.BroadcastMessage(e,t,n)}GetComponent(e){return this.#e.GetComponent(e)}GetComponents(e){return this.#e.GetComponents(e)}GetComponentInParent(e){return this.#e.GetComponentInParent(e)}GetComponentsInParent(e){return this.#e.GetComponentsInParent(e)}}class Behavior extends Component{#e=!0;get enabled(){return this.#e}set enabled(e){this.#e=e}get isActiveAndEnabled(){return this.gameObject.activeSelf&&this.enabled}}class GameBehavior extends Behavior{Awake(){}OnEnable(){}Start(){}EarlyUpdate(){}FixedUpdate(){}Update(){}LateUpdate(){}OnApplicationPause(a){}OnApplicationFocus(a){}OnApplicationQuit(){}OnDisable(){}OnDestroy(){}}Math.Clamp=function(t,n,a){return Math.min(Math.max(t,n),a)},Math.LerpUnclamped=function(t,n,a){return t+(n-t)*a},Math.Lerp=function(t,n,a){return this.LerpUnclamped(t,n,Math.Clamp(a,0,1))};class Matrix3x3{matrix=[[1,0,0],[0,1,0],[0,0,1]];static get zero(){return new Matrix3x3([0,0,0],[0,0,0],[0,0,0])}static get identity(){return new Matrix3x3([1,0,0],[0,1,0],[0,0,1])}get determinant(){const t=this.matrix;return t[0][0]*(t[1][1]*t[2][2]-t[2][1]*t[1][2])-t[1][0]*(t[0][1]*t[2][2]-t[2][1]*t[0][2])+t[2][0]*(t[0][1]*t[1][2]-t[1][1]*t[0][2])}get transpose(){const t=this.matrix;return new Matrix3x3([t[0][0],t[1][0],t[2][0]],[t[0][1],t[1][1],t[2][1]],[t[0][2],t[1][2],t[2][2]])}get inverse(){const t=1/this.determinant;if(0===t)return Matrix3x3.zero;const r=this.transpose.matrix;return new Matrix3x3([t*(r[1][1]*r[2][2]-r[2][1]*r[1][2]),t*(r[1][2]*r[2][0]-r[2][2]*r[1][0]),t*(r[1][0]*r[2][1]-r[2][0]*r[1][1])],[t*(r[0][2]*r[2][1]-r[2][2]*r[0][1]),t*(r[0][0]*r[2][2]-r[2][0]*r[0][2]),t*(r[0][1]*r[2][0]-r[2][1]*r[0][0])],[t*(r[0][1]*r[1][2]-r[1][1]*r[0][2]),t*(r[0][2]*r[1][0]-r[1][2]*r[0][0]),t*(r[0][0]*r[1][1]-r[1][0]*r[0][1])])}constructor(t,r,e){this.matrix=[t??[1,0,0],r??[0,1,0],e??[0,0,1]]}static Translate(t){return new Matrix3x3([1,0,0],[0,1,0],[t.x,t.y,1])}static Rotate(t){return new Matrix3x3([Math.cos(t),Math.sin(t),0],[-Math.sin(t),Math.cos(t),0],[0,0,1])}static Scale(t){return new Matrix3x3([t.x,0,0],[0,t.y,0],[0,0,1])}static TRS(t,r,e){return new Matrix3x3([Math.cos(r)*e.x,Math.sin(r)*e.y,0],[-Math.sin(r)*e.x,Math.cos(r)*e.y,0],[t.x,t.y,1])}static Ortho(t,r,e,a){return new Matrix3x3([2/(r-t),0,0],[0,2/(a-e),0],[-(r+t)/(r-t),-(a+e)/(a-e),1])}static Multiply(t,r){const e=t.matrix,a=r.matrix;return new Matrix3x3([e[0][0]*a[0][0]+e[1][0]*a[0][1]+e[2][0]*a[0][2],e[0][1]*a[0][0]+e[1][1]*a[0][1]+e[2][1]*a[0][2],e[0][2]*a[0][0]+e[1][2]*a[0][1]+e[2][2]*a[0][2]],[e[0][0]*a[1][0]+e[1][0]*a[1][1]+e[2][0]*a[1][2],e[0][1]*a[1][0]+e[1][1]*a[1][1]+e[2][1]*a[1][2],e[0][2]*a[1][0]+e[1][2]*a[1][1]+e[2][2]*a[1][2]],[e[0][0]*a[2][0]+e[1][0]*a[2][1]+e[2][0]*a[2][2],e[0][1]*a[2][0]+e[1][1]*a[2][1]+e[2][1]*a[2][2],e[0][2]*a[2][0]+e[1][2]*a[2][1]+e[2][2]*a[2][2]])}Duplicate(){const t=this.matrix;return new Matrix3x3([t[0][0],t[0][1],t[0][2]],[t[1][0],t[1][1],t[1][2]],[t[2][0],t[2][1],t[2][2]])}GetValue(t,r){return this.matrix[t][r]}GetColumn(t){let r=[0,0,0];for(let e=0;e<=2;e++)r[e]=this.GetValue(t,e);return r}GetRow(t){let r=[0,0,0];for(let e=0;e<=2;e++)r[e]=this.GetValue(e,t);return r}SetValue(t,r,e){this.matrix[t][r]=e}SetColumn(t,r){for(let e=0;e<=2;e++)this.SetValue(t,e,r[e])}SetRow(t,r){for(let e=0;e<=2;e++)this.SetValue(e,t,r[e])}}class Color{static get black(){return new Color}static get white(){return new Color(1,1,1)}static get red(){return new Color(1,0,0)}static get green(){return new Color(0,1,0)}static get blue(){return new Color(0,0,1)}r=0;g=0;b=0;a=1;get grayscale(){let t=.3*this.r+.59*this.g+.11*this.b;return new Color(t,t,t,this.a)}constructor(t,r,e,i){this.Set(t,r,e,i??1)}toString(){return`${this.r.toFixed(2)}, ${this.g.toFixed(2)}, ${this.b.toFixed(2)}, ${this.a.toFixed(2)}`}Set(t,r,e,i){this.r=t,this.g=r,this.b=e,null!=i&&(this.a=i)}Equals(t){return this.r===t.r&&this.g===t.g&&this.b===t.b&&this.a===t.a}Duplicate(){return new Color(this.r,this.g,this.b,this.a)}}class Rect{x=0;y=0;width=1;height=1;get xMin(){return this.x}set xMin(t){const i=this.xMax;this.x=t,this.width=i-this.x}get yMin(){return this.y}set yMin(t){const i=this.yMax;this.y=t,this.height=i-this.y}get xMax(){return this.x+this.width}set xMax(t){this.width=t-this.x}get yMax(){return this.y+this.height}set yMax(t){this.height=t-this.y}get position(){return new Vector2(this.x,this.y)}set position(t){this.x=t.x,this.y=t.y}get size(){return new Vector2(this.width,this.height)}set size(t){this.width=t.x,this.height=t.y}get center(){return new Vector2(this.x+.5*this.width,this.y+.5*this.height)}set center(t){this.x=t.x-.5*this.width,this.y=t.y-.5*this.height}get min(){return new Vector2(this.xMin,this.yMin)}set min(t){this.xMin=t.x,this.yMin=t.y}get max(){return new Vector2(this.xMax,this.yMax)}set max(t){this.xMax=t.x,this.yMax=t.y}constructor(t,i,h,s){this.Set(t??0,i??0,h??1,s??1)}static MinMaxRect(t,i,h,s){return new Rect(t,i,h-t,s-i)}Contains(t){return t instanceof Rect?this.Contains(t.min)&&this.Contains(t.max):t.x>=this.xMin&&t.x<this.xMax&&t.y>=this.yMin&&t.y<this.yMax}Overlaps(t){return t.xMax>this.xMin&&t.xMin<this.xMax&&t.yMax>this.yMin&&t.yMin<this.yMax}toString(){return`${this.x.toFixed(2)}, ${this.y.toFixed(2)}, ${this.width.toFixed(2)}, ${this.height.toFixed(2)}`}Set(t,i,h,s){this.x=t,this.y=i,this.width=h,this.height=s}Duplicate(){return new Rect(this.x,this.y,this.width,this.height)}}class Bounds{center=null;extents=null;get size(){return Vector2.Scale(this.extents,2)}set size(t){this.extents=Vector2.Scale(t,.5)}get min(){return Vector2.Subtract(this.center,this.extents)}set min(t){this.SetMinMax(t,this.max)}get max(){return Vector2.Add(this.center,this.extents)}set max(t){this.SetMinMax(this.min,t)}constructor(t,e){this.center=t??Vector2.zero,this.size=e??Vector2.one}Contains(t){return t instanceof Bounds?this.Contains(t.min)&&this.Contains(t.max):t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y}ClosestPoint(t){return new Vector2(Math.clamp(t.x,this.min.x,this.max.x),Math.clamp(t.y,this.min.y,this.max.y))}Intersects(t){return t.min.x<=this.max.x&&t.max.x>=this.min.x&&t.min.y<=this.max.y&&t.max.y>=this.min.y}SqrDistance(t){const e=this.ClosestPoint(t);return(t.x-e.center.x)**2+(t.y-e.center.y)**2}toString(){return`Center: ${this.center.toString()}, Extents: ${this.extents.toString()}`}SetMinMax(t,e){this.extents=Vector2.Scale(Vector2.Subtract(e,t),.5),this.center=Vector2.Add(t,this.extents)}Encapsulate(t){if(t instanceof Bounds)return this.Encapsulate(Vector2.Subtract(t.center,t.extents)),void this.Encapsulate(Vector2.Add(t.center,t.extents));this.SetMinMax(Vector2.Min(this.min,t),Vector2.Max(this.max,t))}Expand(t){this.extents=Vector2.Add(this.extents,Vector2.Scale(new Vector2(.5,.5),t))}Duplicate(){return new Bounds(this.center.Duplicate(),this.size.Duplicate())}}class Transform extends Component{#t=0;#i=[];#e=Vector2.zero;#s=Vector2.one;#o=new Matrix3x3;#a=new Matrix3x3;#n=null;get localRotation(){return this.#t}set localRotation(t){this.#t!==t&&(this.#t=t,this.Recalc())}get localPosition(){return new Vector2(this.#e.x,this.#e.y)}set localPosition(t){this.#e.Equals(t)||(this.#e=t.Duplicate(),this.Recalc())}get localScale(){return new Vector2(this.#s.x,this.#s.y)}set localScale(t){this.#s.Equals(t)||(this.#s=t.Duplicate(),this.Recalc())}get rotation(){return this.localRotation+(this.parent?.rotation??0)}set rotation(t){this.localRotation=t-(this.parent?.rotation??0)}get position(){return Vector2.Add(this.localPosition,this.parent?.position??Vector2.zero)}set position(t){this.localPosition=Vector2.Subtract(t,this.parent?.position??Vector2.zero)}get scale(){return Vector2.Scale(this.localScale,this.parent?.scale??Vector2.one)}set scale(t){this.localScale=Vector2.Divide(t,this.parent?.scale??Vector2.one)}get childCount(){return this.#i.length}get localToWorldMatrix(){return this.#o.Duplicate()}get worldToLocalMatrix(){return this.#a.Duplicate()}get parent(){return this.#n}set parent(t){this.SetParent(t)}get gameObject(){return super.gameObject}set gameObject(t){super.gameObject=t,this.#l()}#l(){if(null==this.#n||null==this.gameObject)return;this.#n.AttachChild(this);const t=this.#n.rotation/(180/Math.PI),i=Vector2.Add(this.#n.position,Vector2.Scale(new Vector2(this.localPosition.x*Math.cos(t)-this.localPosition.y*Math.sin(t),this.localPosition.x*Math.sin(t)+this.localPosition.y*Math.cos(t)),this.#n.scale));this.#o=Matrix3x3.TRS(Vector2.Scale(i,new Vector2(1,-1)),.005555555555555556*-this.rotation*Math.PI,this.scale),this.#a=this.#o.inverse}Recalc(){let t=null;if(null!=this.#n){const i=this.#n.rotation/(180/Math.PI);t=Vector2.Add(this.#n.position,Vector2.Scale(new Vector2(this.localPosition.x*Math.cos(i)-this.localPosition.y*Math.sin(i),this.localPosition.x*Math.sin(i)+this.localPosition.y*Math.cos(i)),this.#n.scale))}else t=this.localPosition;this.#o=Matrix3x3.TRS(Vector2.Scale(t,new Vector2(1,-1)),.005555555555555556*-this.rotation*Math.PI,this.scale),this.#a=this.#o.inverse,null!=this.gameObject&&this.GetComponent("Renderer")?.RecalcBounds();for(let t=0;t<this.childCount;t++)this.GetChild(t).Recalc()}SetParent(t){if(this.#n===t)return;const i=this.#n;this.#n=t,null!=this.gameObject&&i?.DetachChildByID(this.gameObject.GetSceneID()),this.#n=t,this.#l()}IsChildOf(t){return this.#n===t}Find(t){const i=t.split("/");if(0===i.length)return;if(""===i[0])return GameObject.Find(t);const e=[];for(let t=0;t<this.childCount;t++){const s=GameObject.FindByID(this.#i[t]);s.name===i[0]&&e.push(s.transform)}if(!(i.length>1&&e.length>0))return e[0];for(let t=0;t<e.length;t++){const s=e[t].Find(i.slice(1).join("/"));if(null!=s)return s}}DetachChildByID(t){let i=[];for(let e=0;e<this.childCount;e++){const s=this.#i[e];if(s!==t)i.push(s);else{const t=this.GetChild(e);t.parent=null,t.Recalc()}}this.#i=i}DetachChild(t){const i=this.#i[t];this.DetachChildByID(i)}DetachChildren(){for(let t=0;t<this.childCount;t++){const i=this.GetChild(t);i.parent=null,i.Recalc()}this.#i=[]}AttachChild(t){t.parent!==this&&(t.parent=this,t.Recalc());const i=t.gameObject.GetSceneID();this.#i.push(i)}AttachChildByID(t){const i=GameObject.FindByID(t).transform;this.AttachChild(i)}GetChild(t){const i=this.#i[t];return GameObject.FindByID(i).transform}Duplicate(){const t=new Transform;t.localPosition=this.#e.Duplicate(),t.localRotation=this.#t,t.localScale=this.#s.Duplicate();for(let i=0;i<this.childCount;i++)this.Instantiate(GameObject.FindByID(this.#i[i]),t);return t}}class GameObject{#e=!1;#t=!1;#n=!1;#s="Empty Object";#i=[];#a=null;destroying=!1;scene=null;sceneTreeNode=null;get activeSelf(){return this.#t&&this.#e}get activeInHierarchy(){return null==this.transform.parent?this.activeSelf:this.activeSelf&&this.transform.parent.gameObject.activeInHierarchy}get name(){return this.#s}set name(e){this.#s=e;const t=this.#i;for(let e=0;e<this.#i.length;e++)t[e].name=this.name}get transform(){return this.#i[0]}set transform(e){this.#i[0]=e,this.#i[0].gameObject=this,this.#i[0].name=this.name}get components(){return[...this.#i]}set components(e){let t=[this.#i[0]];for(let n=0;n<e.length;n++)t.push(e[n]);this.#i=t;for(let e=0;e<this.#i.length;e++)this.#i[e].gameObject=this,this.#i[e].name=this.name}get keepOnLoad(){return this.#n}set keepOnLoad(e){if(this.#n=e,!e||this.#a<0)return;let t=-1;for(;null!=GameObject.FindByID(t);)t--;this.#a=t}constructor(e,t,n,s,a){this.#a=a,this.#s=e??"Empty Object",this.#e=n??!0,this.#i[0]=s??new Transform,this.components=t??[]}static Find(e,t){const n=e.split("/");if(0===n.length)return;if(""===n[0]){const e=SceneManager.GetActiveScene().gameObjects.filter((e=>e.name===n[1]&&(t||e.activeInHierarchy)&&null==e.transform.parent));if(n.length>2&&e.length>0){for(let t=0;t<e.length;t++){const s=e[t].transform.Find(n.slice(2).join("/"));if(null!=s)return s.gameObject}return}return e[0]}const s=SceneManager.GetActiveScene().gameObjects.filter((e=>e.name===n[0]&&(t||e.activeInHierarchy)));if(!(n.length>1&&s.length>0))return s[0];for(let e=0;e<s.length;e++){const t=s[e].transform.Find(n.slice(1).join("/"));if(null!=t)return t.gameObject}}static FindByID(e){return SceneManager.GetActiveScene().gameObjects.find((t=>t.GetSceneID()===e))}static FindComponents(e){const t=SceneManager.GetActiveScene().gameObjects.filter((e=>e.activeInHierarchy));let n=[];for(let s=0;s<t.length;s++)n.push(...t[s].GetComponents(e));return n}static Destroy(e){e.destroying=!0}#r(item,type,includeInactive){return!(!eval(`item instanceof ${type}`)||item instanceof Behavior&&!item.enabled&&!includeInactive)}GetSceneID(){return this.#a}SetActive(e){this.#e=e}BroadcastMessage(method,params,data){let args="",dat=data??{};if(null==dat.specialCall&&(dat.specialCall=0),!this.activeSelf&&!dat.passActive)return;switch(dat.specialCall){case 2:if(this.#t||!this.#e)return;this.#t=!0;break;case 3:if(!this.#t||this.#e)return;this.#t=!1}if(Array.isArray(params))for(let e=0;e<params.length;e++)args+=`params[${e}]`,e!==params.length-1&&(args+=",");else args=params;const components=this.#i.filter((e=>(e.enabled||1===dat.specialCall)&&e instanceof GameBehavior));for(let i=0;i<components.length;i++)eval(`components[i].${method}(${args})`),dat.clearAfter&&eval(`components[i].${method} = () => { }`),components[i].gameObject=this,components[i].name=this.name}GetComponent(e){return this.#i.find((t=>this.#r(t,e,!1)))}GetComponents(e){return this.#i.filter((t=>this.#r(t,e,!1)))}GetComponentInParent(e){return this.transform.parent.GetComponent(e)}GetComponentsInParent(e){return this.transform.parent.GetComponents(e)}}class QuadTreeItem{item=null;size=null}class QuadTreeNode{#t=0;#e=[];#i=[];#s=[];#h=null;get area(){return this.#h}get count(){let t=this.#s.length;for(let e=0;e<4;e++)null!=this.#i[e]&&(t+=this.#i[e].count);return t}constructor(t,e){this.#t=e,this.Resize(t)}Remove(t){const e=this.#s.find((e=>e.item===t));if(null==e)return;const i=this.#s.indexOf(e);this.#s.splice(i,1)}Clear(){this.#s=[];for(let t=0;t<4;t++)null!=this.#i[t]&&(this.#i[t].Clear(),this.#i[t]=null)}Resize(t){this.Clear(),this.#h=t;const e=Vector2.Scale(t.size,.5);this.#e=[new Rect(t.x,t.y,e.x,e.y),new Rect(t.x+e.x,t.y,e.x,e.y),new Rect(t.x,t.y+e.y,e.x,e.y),new Rect(t.x+e.x,t.y+e.y,e.x,e.y)]}Insert(t,e){for(let i=0;i<4&&!(this.#t+1>=QuadTree.maxDepth);i++)if(this.#e[i].Contains(e))return null==this.#i[i]&&(this.#i[i]=new QuadTreeNode(this.#e[i],this.#t+1)),void this.#i[i].Insert(t,e);t.sceneTreeNode=this;const i=new QuadTreeItem;i.item=t,i.size=e,this.#s.push(i)}Find(t){let e=[];return this.FindByParam(t,e),e}FindByParam(t,e){for(let i=0;i<this.#s.length;i++)t.Overlaps(this.#s[i].size)&&e.push(this.#s[i].item);for(let i=0;i<4;i++)null!=this.#i[i]&&(t.Contains(this.#e[i])?this.#i[i].GetItems(e):this.#e[i].Overlaps(t)&&this.#i[i].FindByParam(t,e))}GetItems(t){for(let e=0;e<this.#s.length;e++)t.push(this.#s[e].item);for(let e=0;e<4;e++)null!=this.#i[e]&&this.#i[e].GetItems(t)}}class QuadTree{static maxDepth=0;#e=[];#t=null;get count(){return this.#e.length}get area(){return this.#t.area}constructor(e){this.#t=new QuadTreeNode(e,0)}Find(e){return this.#t.Find(e)}Remove(e){const t=this.#e.indexOf(e);t<0||(e.sceneTreeNode.Remove(e),this.#e.splice(t,1))}Clear(){this.#t.Clear(),this.#e=[]}Resize(e){this.#t.Resize(e)}Insert(e,t){this.#e.push(e),this.#t.Insert(e,t)}Relocate(e,t){e.sceneTreeNode.Remove(e),this.#t.Insert(e,t)}}class Scene{#e=!1;#t=!1;#a=0;#s=0;#n=[];#o=new DelegateEvent;#i=null;name="scene";gameObjects=[];tree=null;get isLoaded(){return this.#t}get loadedComponents(){return this.#s===this.#o.count}get isInvalid(){return this.#e}get path(){return this.#i.path}get index(){return this.#i.index}get resources(){return this.#i.resources??[]}get resourceList(){return this.#n}constructor(e,t,s){this.name=e??"Scene",this.#i=t??{};for(let e=0;e<this.resources.length;e++)Array.isArray(this.resources[e])?this.#n.push(...this.resources[e]):this.#n.push(this.resources[e]);null==this.#i.gameObjects&&(this.#i.gameObjects=[]),this.#e=s??!1}async#r(e){let t=[];for(let s=0;s<e.length;s++)t.push(await SceneManager.CreateObject(e[s].type,e[s].args));return t}#l(a,b){const keys=Object.getOwnPropertyNames(b);for(let i=0;i<keys.length;i++)"object"==typeof eval(`b.${keys[i]}`)?this.#l(eval(`a.${keys[i]}`),eval(`b.${keys[i]}`)):eval(`a.${keys[i]} = b.${keys[i]}`)}async LoadComponents(){this.loadedComponents||(this.#o.Invoke(),await CrystalEngine.Wait((()=>this.loadedComponents)))}async#d(){for(let e=0;e<this.#i.gameObjects.length;e++){const t=this.#i.gameObjects[e];let s={};null!=t.prefab&&(s=Resources.FindPrefab(t.prefab));const n=structuredClone(s.components??[]),o=structuredClone(t.components??[]);for(let e=0;e<o.length;e++){const t=o[e].replace?n.find((t=>t.type===o[e].type)):null;null!=t?null!=t.args?this.#l(t.args,o[e].args):t.args=o[e].args:n.push(o[e])}const r={position:t.transform?.position??s.transform?.position,rotation:t.transform?.rotation??s.transform?.rotation,scale:t.transform?.scale??s.transform?.scale};let l=null;null!=t.parent&&(l=this.gameObjects.find((e=>e.GetSceneID()===t.parent)).transform);const d=await SceneManager.CreateObject("GameObject",{name:t.name??s.name,active:t.active??s.active,transform:r,id:t.id,parent:l});d.scene=this,this.gameObjects.push(d),this.#o.Add((async()=>{d.components=await this.#r(n);const e=d.GetComponent("Renderer");if(null!=e){const t=e.bounds.min,s=e.bounds.max,n=Rect.MinMaxRect(t.x,t.y,s.x,s.y);this.tree.Insert(d,n)}this.#s++})),this.#a++}}async Load(){if(this.#t||this.#e)return;const e=new Vector2;this.#i.partioning?.disabled||(e.x=this.#i.partioning?.size?.x??1024,e.y=this.#i.partioning?.size?.y??1024);const t=Vector2.Add(Vector2.Scale(e,-.5),new Vector2(this.#i.partioning?.offset?.x,this.#i.partioning?.offset?.y));null!=this.#i.partioning?.maxDepth&&(QuadTree.maxDepth=this.#i.partioning?.maxDepth),this.tree=new QuadTree(new Rect(t.x,t.y,e.x,e.y)),this.#d(),await CrystalEngine.Wait((()=>this.#a===this.#i.gameObjects.length)),this.#t=!0}}class SceneManager{static#e=!1;static#t=!1;static#a=!1;static#n=new Scene;static#i=[];static#s=[];static#c=null;static sceneLoaded=new DelegateEvent;static sceneUnloaded=new DelegateEvent;static activeSceneChanged=new DelegateEvent;static get sceneCount(){return this.#i.length}static get loadedSceneCount(){return this.#s.filter((e=>e.isLoaded)).length}static get active(){return this.#t}static async SetActiveScene(e){let t=this.GetScene(e);if(t.isInvalid)return!1;const a=this.#c,n=this.#c?.index;let s=[];if(null!=a){s=a.gameObjects.filter((e=>e.keepOnLoad));for(let e=0;e<s.length;e++){const t=a.gameObjects.indexOf(s[e]);a.gameObjects.splice(t,1)}await this.Unload(n),n===e&&(await this.Load(e),t=this.GetScene(e))}this.#c=t,await t.LoadComponents();for(let e=0;e<s.length;e++){a?.tree.Remove(s[e]);const t=s[e].GetComponent("Renderer");if(null!=t){const a=t.bounds.min,n=t.bounds.max,c=Rect.MinMaxRect(a.x,a.y,n.x,n.y);this.#c.tree.Insert(s[e],c)}s[e].scene=this.#c,this.#c.gameObjects.push(s[e])}return this.#a=!0,await new Promise((e=>{const call=()=>{PlayerLoop.onFrameEnd.Remove(call),e()};PlayerLoop.onFrameEnd.Add(call)})),this.#t=!0,this.activeSceneChanged.Invoke(e),!0}static GetActiveScene(){return this.#c??this.#n}static GetScene(e){return this.#s.find((t=>t.index===e&&t.isLoaded))??new Scene(null,null,!0)}static Set(e){this.#e||(this.#i=e,this.#e=!0)}static async UnloadAll(){await this.Unload(...this.#s.map((e=>e.index)))}static async Unload(...e){for(let t=0;t<e.length;t++){if(this.GetActiveScene().index===e[t]){this.#a=!1,this.#t=!1;for(let e=0;e<this.#c.gameObjects.length;e++)GameObject.Destroy(this.#c.gameObjects[e]);await CrystalEngine.Wait((()=>0===this.#c.gameObjects.length)),this.#c=null}const a=this.GetScene(e[t]);if(a.isInvalid)continue;const n=a.resourceList.filter((a=>!Resources.keepOnLoad.includes(a)&&null==this.#s.find((n=>n.index!==e[t]&&null!=n.resourceList.find((e=>e===a))))));Resources.Unload(...n);const s=this.#s.indexOf(a);this.#s.splice(s,1),this.sceneUnloaded.Invoke(e[t])}}static async Load(...e){for(let t=0;t<e.length;t++){if(this.#s.find((a=>a.index===e[t])))continue;const a=`data/scenes/${this.#i[e[t]]}.json`,n=await FetchFile(a),s=await n.json(),c=new Scene(s.name,{partioning:s.partioning,resources:s.resources,gameObjects:s.gameObjects,path:a,index:e[t]});let o=0;(async()=>{await Resources.Load(...c.resources),o++})(),(async()=>{await c.Load(),o++})(),await CrystalEngine.Wait((()=>2===o)),this.#s.push(c),this.sceneLoaded.Invoke(e[t])}}static async EvalProperty(propData,data,out){if("object"!=typeof propData||void 0===data)return;let output=null;if(propData.gameObject){const call=()=>{this.#a&&(output=null!=data.prefab?Resources.FindPrefab(data.prefab):"number"==typeof data?GameObject.FindByID(data):GameObject.Find(data,!0),eval(`out.${propData.realName??propData.name} = output`),PlayerLoop.onBeforeAwake.Remove(call))};PlayerLoop.onBeforeAwake.Add(call)}else{if(propData.component){let call=null;return call=propData.explicit?()=>{if(!this.#a)return;let gameObj=null;gameObj="number"==typeof data.gameObject?GameObject.FindByID(data.gameObject):GameObject.Find(data.gameObject,!0),output=gameObj.GetComponent(data.type),eval(`out.${propData.realName??propData.name} = output`),PlayerLoop.onBeforeAwake.Remove(call)}:()=>{if(!this.#a)return;let gameObj=null;gameObj="number"==typeof data?GameObject.FindByID(data):GameObject.Find(data,!0),output=gameObj.GetComponent(propData.type),eval(`out.${propData.realName??propData.name} = output`),PlayerLoop.onBeforeAwake.Remove(call)},void PlayerLoop.onBeforeAwake.Add(call)}if(null!=propData.evaluation){const e=new AsyncFunction("data",propData.evaluation);output=await e(data)}else if(null!=propData.evalType){const e=new AsyncFunction("data",propData.evalType),t=await e(data);output=await this.CreateObject(t,data)}else output=["bool","number","string","object"].includes(propData.type)?data:propData.array?await this.CreateObjectArray(propData.type,data):await this.CreateObject(propData.type,data);eval(`out.${propData.realName??propData.name} = output`)}}static async CreateObject(type,data){const dat=data??{};let object=null;const foundClass=CrystalEngine.Inner.GetClassOfType(type,0);if(null==foundClass)return;const construction=foundClass.construction,properties=foundClass.args;if(null!=construction){const e=new AsyncFunction("data","toObject",construction);object=await e(dat,(async(e,t)=>await this.CreateObject(e,t)))}else object=eval(`new ${type}()`);for(let i=0;i<properties.length;i++){const dataIn=eval(`dat.${properties[i].name}`);await this.EvalProperty(properties[i],dataIn,object)}return null!=dat.name&&"GameObject"!==type&&(object.name=dat.name),object}static async CreateObjectArray(e,t){let a=[];for(let n=0;n<t.length;n++){let s=null;s="array"===e?await this.CreateObjectArray("bool",t[n]):"bool"===e&&"object"==typeof t[n]&&t[n].__evaluated?await this.CreateObject(e,t[n]):["bool","number","string","object"].includes(e)?t[n]:await this.CreateObject(e,t[n]),a.push(s)}return a}}class PlayerLoop{static#e=!1;static#t=!1;static#i=!1;static#a=!1;static#n=!1;static#s=0;static noFixedUpdate=!1;static onBeforeAwake=new DelegateEvent;static onAfterFixedUpdate=new DelegateEvent;static onAfterUpdate=new DelegateEvent;static onFrameEnd=new DelegateEvent;static get isPlaying(){return this.#t}static#l(){0===Application.targetFrameRate||1===Application.vSyncCount?requestAnimationFrame(this.#c.bind(this)):2===Application.vSyncCount?requestAnimationFrame((()=>requestAnimationFrame(this.#c.bind(this)))):setTimeout(this.#c.bind(this),0)}static#o(){Time.unscaledDeltaTime=.001*performance.now()-Time.unscaledTime,Time.unscaledTime+=Time.unscaledDeltaTime;let e=Time.unscaledDeltaTime;e>Time.maximumDeltaTime&&(e=Time.maximumDeltaTime),Time.deltaTime=e*Time.timeScale,Time.time+=Time.deltaTime,Time.frameCount++,this.#a=!0}static async#c(){if(this.#e||Application.isLoaded||(Application.Load(),this.#e=!0),!Application.isLoaded&&!Application.isUnloaded)return this.#i=Application.isFocused,void this.#l();const e=SceneManager.GetActiveScene(),t=e.gameObjects,BroadcastMessage=(e,i,a)=>{if(!this.#n&&SceneManager.active)for(let n=0;n<t.length;n++)t[n].BroadcastMessage(e,i,a)};if(this.#t&&(Object.InstantiationQueue.Invoke(),Object.InstantiationQueue.RemoveAll(),this.onBeforeAwake.Invoke(),BroadcastMessage("Awake",null,{specialCall:1,passActive:!0,clearAfter:!0}),BroadcastMessage("OnEnable",null,{specialCall:2,passActive:!0}),BroadcastMessage("Start",null,{clearAfter:!0})),Application.targetFrameRate>0&&0===Application.vSyncCount){const e=1/Application.targetFrameRate-.005;let t=.001*performance.now()-Time.unscaledTime;for(;t>=e;)this.#o(),t-=e}else this.#o();if(this.#a){if(!this.#n&&this.#t&&0!==Time.timeScale){const e=Application.gl;e.viewport(0,0,Application.htmlCanvas.width,Application.htmlCanvas.height);const t=GameObject.FindComponents("Camera");if(t.length>0){const i=t[t.length-1].backgroundColor;e.clearColor(i.r,i.g,i.b,i.a),e.clear(e.COLOR_BUFFER_BIT),e.enable(e.BLEND),e.blendFunc(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA)}}Input.Update(),this.#t&&0!==Time.timeScale&&BroadcastMessage("EarlyUpdate")}if(!this.noFixedUpdate)for(;Time.fixedTime<Time.time;)Time.fixedUnscaledDeltaTime=.001*performance.now()-Time.fixedUnscaledTime,Time.fixedUnscaledTime+=Time.fixedUnscaledDeltaTime,Time.fixedTime+=Time.fixedDeltaTime*Time.timeScale,this.#t&&0!==Time.timeScale&&(BroadcastMessage("FixedUpdate"),this.onAfterFixedUpdate.Invoke());if(this.#a&&this.#t&&0!==Time.timeScale&&(BroadcastMessage("Update"),this.onAfterUpdate.Invoke()),this.#a&&(this.#t&&0!==Time.timeScale&&BroadcastMessage("LateUpdate"),!this.#n&&this.#t&&0!==Time.timeScale)){const e=GameObject.FindComponents("Renderer");for(let t=0;t<e.length;t++)e[t].meshChanged&&e[t].ForceMeshUpdate();const t=GameObject.FindComponents("Camera");for(let e=0;e<t.length;e++)t[e].Render();Application.gl.flush()}if(this.#a){Input.End();const i=Application.isFocused||Application.runInBackground;this.#t!=i&&BroadcastMessage("OnApplicationPause",!i);const a=Application.isFocused;if(this.#i!=a&&(this.#i=a,BroadcastMessage("OnApplicationFocus",a)),this.#t&&0!==Time.timeScale){if(2===this.#s){for(let e=0;e<t.length;e++)t[e].BroadcastMessage("OnApplicationQuit"),GameObject.Destroy(t[e]);Application.quitting.Invoke()}for(let e=0;e<t.length;e++)t[e].destroying&&t[e].SetActive(!1),t[e].BroadcastMessage("OnDisable",null,{specialCall:3,passActive:!0});const i=e.tree,a=t.filter((e=>e.destroying));for(let t=0;t<a.length;t++){a[t].BroadcastMessage("OnDestroy",{passActive:!0}),i.Remove(a[t]);const n=e.gameObjects.indexOf(a[t]);e.gameObjects.splice(n,1)}if(2===this.#s)return Application.Unload(),void window.close();if(!Application.isPlaying){try{Application.wantsToQuit.Invoke()}catch{}this.#s=1}1===this.#s&&(Application.isPlaying?this.#s=0:this.#s++),this.onFrameEnd.Invoke()}this.#t=i,this.#a=!1}this.#l()}static OnError(){this.#n||(this.#n=!0,Application.vSyncCount=1,this.#l())}static Init(){this.#e||this.#l()}}class Shader{static#e=!1;static#t=[];static get isLoaded(){return this.#e}#s=null;#a=null;get type(){return this.#s}get shader(){return this.#a}constructor(e,t,s){this.name=e,this.#s=s;const a=Application.gl;let i;switch(this.#s){case"VERTEX":i=a.VERTEX_SHADER;break;case"FRAGMENT":i=a.FRAGMENT_SHADER}this.#a=a.createShader(i),a.shaderSource(this.#a,t),a.compileShader(this.#a)}static#i(e){let t=0,s="",a=["",""],i=0,r=!1,h="";for(let d=0;d<e.length;d++)if("/"!==e[d]||"/"!==e[d+1]){if(t>=4)break;if("\n"!==e[d]&&"\r"!==e[d])if("'"!==e[d]&&'"'!==e[d]){if(r||" "!==e[d])if(":"!==e[d])0===i?s+=e[d]:a[i-1]+=e[d];else{switch(i=-1,s){case"NAME":i=1;break;case"TYPE":i=2}s=""}}else{if(r&&e[d]===h){r=!1,h="";continue}r=!0,h=e[d]}}else t++,i=0,s="",d++;return{name:a[0],type:a[1]}}static Find(e,t){return this.#t.find((s=>s.name===e&&(null==t||s.type===t)))??this.Find("Default/Standard",t)}static Set(e){for(let t=0;t<e.length;t++){if(""===e[t])continue;const s=this.#i(e[t]),a=new Shader(s.name,e[t],s.type);this.#t.push(a)}this.#e=!0}}class GraphicsBufferTarget{static get Array(){return 0}static get ElementArray(){return 1}}class GraphicsBufferUsage{static get Static(){return 0}static get Dynamic(){return 1}static get Stream(){return 2}}class GraphicsBuffer{#e=!1;#t=1;#r=null;#s=null;target=0;usageType=0;name="";get isUnloaded(){return this.#e}get stride(){return this.#t}constructor(e,t){this.name=e,this.#t=t??1,this.#r=Application.gl,this.#s=this.#r.createBuffer()}Unload(){this.#e||(this.#e=!0,this.#r.deleteBuffer(this.#s))}GetNativeBuffer(){return this.#s}SetData(e){const t=this.#r,r=0===this.target?t.ARRAY_BUFFER:t.ELEMENT_ARRAY_BUFFER;t.bindBuffer(r,this.#s);let s=null;switch(this.usageType){case 0:s=t.STATIC_DRAW;break;case 1:s=t.DYNAMIC_DRAW;break;case 2:s=t.STREAM_DRAW}t.bufferData(r,new Float32Array(e),s),t.bindBuffer(r,null)}}class ShaderAttribute{#t=0;#e=0;#i=1;#s="";#r=null;#n=null;enabled=!0;get name(){return this.#s}constructor(t,e,i){this.#r=Application.gl,this.#n=i,this.#s=t.endsWith("[0]")?t.slice(0,-3):t;const s=this.#r;this.#t=s.getAttribLocation(this.#n,t),e.startsWith("FLOAT")?this.#e=s.FLOAT:e.startsWith("INT")?this.#e=s.INT:e.startsWith("UNSIGNED_INT")&&(this.#e=s.UNSIGNED_INT);const r=parseInt(e[e.length-1]);Number.isNaN(r)||1===r||(this.#i=r)}Set(t,e){const i=this.#r;i.useProgram(this.#n),i.bindBuffer(i.ARRAY_BUFFER,t.GetNativeBuffer()),this.enabled?i.enableVertexAttribArray(this.#t):i.disableVertexAttribArray(this.#t),i.vertexAttribPointer(this.#t,this.#i,this.#e,!1,4*t.stride,4*(e??0)),i.bindBuffer(i.ARRAY_BUFFER,null),i.useProgram(null)}}class Material{#t=[];#r=[];#e=[];#s=null;#a=null;#i=null;#n=null;get vertexShader(){return this.#i}get fragmentShader(){return this.#n}get gl(){return this.#s}get program(){return this.#a}#o=class{array=!1;index=0;size=0;name="";type="";location=null;constructor(t,r,e){this.array=t.endsWith("[0]"),this.name=this.array?t.slice(0,-3):t,this.type=r,this.size=e}};constructor(t,r){this.#s=Application.gl,this.#i=t??Shader.Find("Default/Standard","VERTEX"),this.#n=r??Shader.Find("Default/Standard","FRAGMENT");const e=this.#s;this.#a=e.createProgram();const s=this.#a;if(e.attachShader(s,this.#i.shader),e.attachShader(s,this.#n.shader),e.linkProgram(s),!e.getProgramParameter(s,e.LINK_STATUS)){const t=e.getShaderInfoLog(this.#i.shader),r=e.getShaderInfoLog(this.#n.shader);console.error(`Shader Errors:\n${""===t?"":`Vertex:\n${t}`}${""===t||""===r?"":"\n\n"}${""===r?"":`Fragment:\n${r}`}`)}const a=this.#s.getProgramParameter(s,e.ACTIVE_UNIFORMS);for(let t=0;t<a;t++){const r=e.getActiveUniform(s,t),a=r.name;if(a.startsWith("gl_")||a.startsWith("webgl_"))continue;const i=new this.#o(a,this.#h(r.type),r.size);i.index=e.getUniformIndices(s,[i.name])[0],i.location=e.getUniformLocation(s,i.name),this.#t.push(i)}const i=e.getProgramParameter(s,e.ACTIVE_ATTRIBUTES);for(let t=0;t<i;t++){const r=e.getActiveAttrib(s,t),a=r.name;a.startsWith("gl_")||a.startsWith("webgl_")||this.#e.push(new ShaderAttribute(a,this.#h(r.type),s))}e.detachShader(s,this.#i.shader),e.detachShader(s,this.#n.shader)}#h(t){const r=this.#s;for(const e in r)if(r[e]===t)return e;return`0x${t.toString(16)}`}#f(t){let r=t;return"string"==typeof r&&(r=this.GetPropertyNameID(r)),this.#t[r].location}#u(t,r,e){if("string"==typeof t)return null!=this.#t.find((s=>s.name===t&&s.type===r&&s.array===e));const s=this.#t[t];return null!=s&&s.type===r}#p(t,r,e){const s=this.#u(t,`${r}2`,e),a=this.#u(t,`${r}3`,e),i=this.#u(t,`${r}4`,e);return s?2:a?3:i?4:0}#l(t,r,e){return 0!==this.#p(t,`${r}_VEC`,!0)}#m(t,r,e){const s=this.#p(t,"FLOAT_VEC",r);if(0===s)return;const a=this.#s,i=this.#f(t),n=new Float32Array(e);switch(a.useProgram(this.#a),s){case 2:a.uniform2fv(i,n);break;case 3:a.uniform3fv(i,n);break;case 4:a.uniform4fv(i,n)}a.useProgram(null)}#c(t,r,e,s){const a=this.#p(t,`${r}_VEC`,e);if(0===a)return;const i=this.#s,n=this.#f(t),o=new Int32Array(s);switch(i.useProgram(this.#a),a){case 2:i.uniform2iv(n,o);break;case 3:i.uniform3iv(n,o);break;case 4:i.uniform4iv(n,o)}i.useProgram(null)}#y(t,r,e){const s=this.#p(t,"UNSIGNED_INT_VEC",r);if(0===s)return;const a=this.#s,i=this.#f(t),n=new Uint32Array(e);switch(a.useProgram(this.#a),s){case 2:a.uniform2uiv(i,n);break;case 3:a.uniform3uiv(i,n);break;case 4:a.uniform4uiv(i,n)}a.useProgram(null)}#g(t,r){const e=this.#p(t,"FLOAT_MAT",r);if(0!==e)return`${e}`;const s=this.#u(t,"FLOAT_MAT2x3",r),a=this.#u(t,"FLOAT_MAT2x4",r);if(s)return"23";if(a)return"24";const i=this.#u(t,"FLOAT_MAT3x2",r),n=this.#u(t,"FLOAT_MAT3x4",r);if(i)return"32";if(n)return"34";const o=this.#u(t,"FLOAT_MAT4x2",r),h=this.#u(t,"FLOAT_MAT4x3",r);return o?"42":h?"43":"0"}#S(t,r,e){const s=this.#g(t,r);if("0"===s)return;const a=this.#s,i=this.#f(t),n=new Float32Array(e);switch(a.useProgram(this.#a),s){case"2":a.uniformMatrix2fv(i,!1,n);break;case"3":a.uniformMatrix3fv(i,!1,n);break;case"4":a.uniformMatrix4fv(i,!1,n);break;case"23":a.uniformMatrix2x3fv(i,!1,n);break;case"24":a.uniformMatrix2x4fv(i,!1,n);break;case"32":a.uniformMatrix3x2fv(i,!1,n);break;case"34":a.uniformMatrix3x4fv(i,!1,n);break;case"42":a.uniformMatrix4x2fv(i,!1,n);break;case"43":a.uniformMatrix4x3fv(i,!1,n)}a.useProgram(null)}Duplicate(){return new Material(this.#i,this.#n)}GetPropertyNames(){return this.#t.map((t=>t.name))}GetPropertyNameID(t){let r=-1;return this.#t.find(((e,s)=>e.name===t&&(r=s,!0))),r}GetPropertyIndex(t){let r=-1;return this.#t.find((e=>e.name===t&&(r=e.index,!0))),r}GetBufferNames(){return this.#r.map((t=>t.name))}GetBufferNameID(t){let r=-1;return this.#r.find(((e,s)=>e.name===t&&(r=s,!0))),r}GetAttributeNames(){return this.#e.map((t=>t.name))}GetAttributeNameID(t){let r=-1;return this.#e.find(((e,s)=>e.name===t&&(r=s,!0))),r}GetAttributeIndex(t){let r=-1;return this.#e.find((e=>e.name===t&&(r=e.index,!0))),r}HasProperty(t){if("string"==typeof t)return null!=this.#t.find((r=>r.name===t));return null!=this.#t[t]}HasBoolean(t){return this.#u(t,"BOOL",!1)}HasBooleanArray(t){return this.#u(t,"BOOL",!0)}HasInt(t){return this.#u(t,"INT",!1)}HasIntArray(t){return this.#u(t,"INT",!0)}HasUint(t){return this.#u(t,"UNSIGNED_INT",!1)}HasUintArray(t){return this.#u(t,"UNSIGNED_INT",!0)}HasFloat(t){return this.#u(t,"FLOAT",!1)}HasFloatArray(t){return this.#u(t,"FLOAT",!0)}HasSampler2D(t){return this.#u(t,"SAMPLER_2D",!1)}HasSampler2DArray(t){return this.#u(t,"SAMPLER_2D",!0)}HasSamplerCube(t){return this.#u(t,"SAMPLER_CUBE",!1)}HasSamplerCubeArray(t){return this.#u(t,"SAMPLER_CUBE",!0)}HasVector(t){return this.#l(t,"FLOAT",!1)}HasVectorArray(t){return this.#l(t,"FLOAT",!0)}HasBooleanVector(t){return this.#l(t,"BOOL",!1)}HasBooleanVectorArray(t){return this.#l(t,"BOOL",!0)}HasIntVector(t){return this.#l(t,"INT",!1)}HasIntVectorArray(t){return this.#l(t,"INT",!0)}HasUintVector(t){return this.#l(t,"UNSIGNED_INT",!1)}HasUintVectorArray(t){return this.#l(t,"UNSIGNED_INT",!0)}HasMatrix(t){return"0"!==this.#g(t,!1)}HasMatrixArray(t){return"0"!==this.#g(t,!0)}HasBuffer(t){return null!=this.GetBuffer(t)}HasAttribute(t){return null!=this.GetAttribute(t)}GetProperty(t){const r=this.#f(t);return this.#s.getUniform(this.#a,r)}GetBuffer(t){return"string"==typeof t?this.#r.find((r=>r.name===t)):this.#r[t]}GetAttribute(t){return"string"==typeof t?this.#e.find((r=>r.name===t)):this.#e[t]}SetBoolean(t,r){this.SetInt(t,+r)}SetBooleanArray(t,r){let e=[];for(let t=0;t<r.length;t++)e.push(+r[t]);this.SetIntArray(t,e)}SetInt(t,r){const e=this.#s,s=this.#f(t);e.useProgram(this.#a),e.uniform1i(s,r),e.useProgram(null)}SetIntArray(t,r){const e=this.#s,s=this.#f(t);e.useProgram(this.#a),e.uniform1iv(s,new Int32Array(r)),e.useProgram(null)}SetUint(t,r){const e=this.#s,s=this.#f(t);e.useProgram(this.#a),e.uniform1ui(s,r),e.useProgram(null)}SetUintArray(t,r){const e=this.#s,s=this.#f(t);e.useProgram(this.#a),e.uniform1uiv(s,new Uint32Array(r)),e.useProgram(null)}SetFloat(t,r){const e=this.#s,s=this.#f(t);e.useProgram(this.#a),e.uniform1f(s,r),e.useProgram(null)}SetFloatArray(t,r){const e=this.#s,s=this.#f(t);e.useProgram(this.#a),e.uniform1fv(s,new Float32Array(r)),e.useProgram(null)}SetSampler2D(t,r){this.SetInt(t,r)}SetSampler2DArray(t,r){this.SetIntArray(t,r)}SetSamplerCube(t,r){this.SetInt(t,r)}SetSamplerCubeArray(t,r){this.SetIntArray(t,r)}SetVector(t,...r){this.#m(t,!1,r)}SetVectorArray(t,...r){this.#m(t,!0,r.flat(1))}SetBooleanVector(t,...r){this.#c(t,"BOOL",!1,r)}SetBooleanVectorArray(t,...r){this.#c(t,"BOOL",!0,r.flat(1))}SetIntVector(t,...r){this.#c(t,"INT",!1,r)}SetIntVectorArray(t,...r){this.#c(t,"INT",!0,r.flat(1))}SetUintVector(t,...r){this.#y(t,!1,r)}SetUintVectorArray(t,...r){this.#y(t,!0,r.flat(1))}SetMatrix(t,...r){this.#S(t,!1,r)}SetMatrixArray(t,...r){this.#S(t,!0,r.flat(1))}AddBuffer(t,r,e){let s=this.GetBuffer(t);return null!=s?(null!=r&&s.SetData(r),this.GetBufferNameID(t)):(s=new GraphicsBuffer(t,e),null!=r&&s.SetData(r),this.#r.push(s),this.#r.length-1)}UnloadBuffer(t){this.GetBuffer(t).Unload()}SetBuffer(t,r){this.GetBuffer(t).SetData(r)}SetAttribute(t,r,e){const s=this.GetAttribute(t),a=this.GetBuffer(r);s.Set(a,e)}Unload(){for(let t=0;t<this.#r.length;t++)this.#r[t].Unload()}}class TextureWrapMode{static get Clamp(){return 0}static get Repeat(){return 1}static get Mirror(){return 2}}class FilterMode{static get Nearest(){return 0}static get Linear(){return 1}}class Texture{#t=!1;#e=0;#i=0;#r=0;#s=0;#h="";#l=null;#T=null;#E=null;pixelPerUnit=16;sprites=[];onUnload=new DelegateEvent;get isLoaded(){return this.#t}get width(){return this.#e}get height(){return this.#i}get wrapMode(){return this.#r}set wrapMode(t){this.#r=t;const e=this.#T;let i=null;switch(t){case 0:i=e.CLAMP_TO_EDGE;break;case 1:i=e.REPEAT;break;case 2:i=e.MIRRORED_REPEAT}e.bindTexture(e.TEXTURE_2D,this.#E),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,i),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,i),e.bindTexture(e.TEXTURE_2D,null)}get filterMode(){return this.#s}set filterMode(t){this.#s=t;const e=this.#T;let i=null;switch(t){case 0:i=e.NEAREST;break;case 1:i=e.LINEAR}e.bindTexture(e.TEXTURE_2D,this.#E),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,i),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,i),e.bindTexture(e.TEXTURE_2D,null)}get img(){return this.#l}constructor(t,e){this.#l=new Image,this.#l.sprite=this,this.#T=Application.gl,this.#E=this.#T.createTexture(),this.wrapMode=0,this.filterMode=0,this.#h=`${e??"img/"}${t}`}GetNativeTexture(){return this.#E}async Load(){if(this.#t)return;await FetchFile(this.#h),this.#l.src=this.#h,await new Promise((t=>this.#l.onload=t)),this.#e=this.#l.width,this.#i=this.#l.height;const t=this.#T;t.bindTexture(t.TEXTURE_2D,this.#E),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,this.#e,this.#i,0,t.RGBA,t.UNSIGNED_BYTE,this.#l),t.bindTexture(t.TEXTURE_2D,null),this.sprites[0]=new Sprite(null,this),this.#t=!0}Unload(){this.onUnload.Invoke(),this.#T.deleteTexture(this.#E)}}class Sprite{pivot=new Vector2(.5,.5);border=Vector4.zero;texture=null;rect=null;get pixelPerUnit(){return this.texture.pixelPerUnit}get triangles(){return[0,2,1,2,3,1]}get vertices(){const t=new Rect(this.rect.x/this.texture.width,this.rect.y/this.texture.height,this.rect.width/this.texture.width,this.rect.height/this.texture.height);return[new Vector2(t.x,t.y),new Vector2(t.xMax,t.y),new Vector2(t.x,t.yMax),new Vector2(t.xMax,t.yMax)]}constructor(t,e,r){this.name=t,this.texture=e,this.rect=r??new Rect(0,0,e.width,e.height)}Duplicate(){const t=new Sprite(this.name,this.texture,this.rect);return t.pivot=this.pivot,t.border=this.border,t}}class SpriteLibraryCategory{entries=[];GetSprite(e){return this.entries.find((r=>r.label===e))?.sprite.Duplicate()}}class SpriteLibraryAsset{categories=[];mainLibrary=null;GetSprite(e,i){return this.categories.find((i=>i.name===e))?.GetSprite(i)??this.mainLibrary?.GetSprite(e,i)}Unload(){}}class SpriteLibrary extends Component{categories=[];asset=null;GetSprite(e,t){return this.categories.find((t=>t.name===e))?.GetSprite(t)??this.asset?.GetSprite(e,t)}}class SpriteResolver extends GameBehavior{#t=null;#e=null;#l=null;#s=null;#a=null;category=null;label=null;set enabled(t){super.enabled=t,t||(this.#t.sprite=this.#e.Duplicate(),this.#s=null,this.#a=null)}get enabled(){return super.enabled}Start(){this.#t=this.GetComponent("SpriteRenderer"),this.#e=this.#t.sprite.Duplicate(),this.#l=this.GetComponent("SpriteLibrary")}Update(){this.#s===this.category&&this.#a===this.label||null!=this.category&&null!=this.label&&(this.#t.sprite=this.#l.GetSprite(this.category,this.label),this.#s=this.category,this.#a=this.label)}}class SortingLayer{static#e=[new SortingLayer("Default",0,0)];static#t=[];static get layers(){return this.#e}static get ids(){return this.#t}id=0;value=0;name="";static Add(e){for(let t=0;t<e.length;t++)this.#e.push(new SortingLayer(e[t].name,e[t].id,e[t].value));this.#e.sort(((e,t)=>e.value-t.value)),this.#t=this.#e.map((e=>e.id))}constructor(e,t,s){this.name=e,this.id=t,this.value=s}}class Camera extends Behavior{#t=!0;#r=null;orthographicSize=9;backgroundColor=new Color;get bounds(){const t=this.orthographicSize;return new Bounds(this.transform.position,new Vector2(Window.aspect*t,1*t))}get projectionMatrix(){return this.#r}set projectionMatrix(t){this.#t=!1,this.#r=t}get cameraToWorldMatrix(){return this.transform.localToWorldMatrix}get worldToCameraMatrix(){return this.transform.worldToLocalMatrix}ScreenToWorldPoint(t){const r=Matrix3x3.TRS(Vector2.Scale(this.transform.position,new Vector2(1,-1)),.005555555555555556*-this.transform.rotation*Math.PI,this.bounds.size),i=Matrix3x3.Translate(new Vector2((t.x-.5*(window.innerWidth-Window.canvasWidth))/Window.canvasWidth-.5,(t.y-.5*(window.innerHeight-Window.canvasHeight))/Window.canvasHeight-.5)),e=Matrix3x3.Multiply(r,i);return new Vector2(e.GetValue(2,0),-e.GetValue(2,1))}WorldToScreenPoint(t){const r=Matrix3x3.TRS(Vector2.Scale(this.transform.position,new Vector2(1,-1)),.005555555555555556*-this.transform.rotation*Math.PI,this.bounds.size),i=Matrix3x3.Multiply(r.inverse,Matrix3x3.Translate(t)),e=Matrix3x3.Translate(new Vector2((i.GetValue(2,0)+.5)*Window.canvasWidth+.5*(window.innerWidth-Window.canvasWidth),(.5-i.GetValue(2,1))*Window.canvasHeight+.5*(window.innerHeight-Window.canvasHeight)));return new Vector2(e.GetValue(2,0),e.GetValue(2,1))}Render(){const t=this.worldToCameraMatrix;this.#t&&(this.#r=Matrix3x3.Ortho(0,this.orthographicSize,0,this.orthographicSize));const r=new Vector2(1/Window.aspect,-1),i=Matrix3x3.TRS(r,0,r),e=this.bounds.min,o=this.bounds.max,a=this.gameObject.scene.tree.Find(Rect.MinMaxRect(e.x,e.y,o.x,o.y)).filter((t=>t.GetComponent("Renderer").isLoaded&&t.activeInHierarchy)).map((t=>t.GetComponent("Renderer"))).sort(((t,r)=>t.sortingOrder-r.sortingOrder));SortingLayer.ids.length>1&&a.sort(((t,r)=>SortingLayer.ids.indexOf(t.sortingLayer)-SortingLayer.ids.indexOf(r.sortingLayer)));for(let r=0;r<a.length;r++){const e=a[r].localToWorldMatrix,o=Matrix3x3.Multiply(Matrix3x3.Multiply(Matrix3x3.Multiply(i,this.#r),t),e);a[r].renderMatrix=o,a[r].Render()}}Duplicate(){const t=new Camera;return t.orthographicSize=this.orthographicSize,t.backgroundColor=this.backgroundColor.Duplicate(),t}}class Renderer extends Component{#e=!1;#t=null;#r=null;uMatrixID=0;geometryBufferID=0;textureBufferID=0;colorBufferID=0;aVertexPosID=0;aTexturePosID=0;aColorID=0;sortingLayer=0;sortingOrder=0;color=Color.white;renderMatrix=new Matrix3x3;onMeshUpdate=new DelegateEvent;get isLoaded(){return this.#e}get meshChanged(){return!1}get bounds(){return new Bounds}get material(){return this.#r}set material(e){this.#t=e,this.Reload()}get localToWorldMatrix(){return Matrix3x3.identity}constructor(e){super(),this.#t=e??new Material}Reload(){this.#r!==this.#t&&(this.material?.Unload(),this.#r=this.#t,this.material.SetSampler2D("uSampler",0),this.uMatrixID=this.material.GetPropertyNameID("uMatrix"),this.geometryBufferID=this.material.AddBuffer("geometry",null,2),this.textureBufferID=this.material.AddBuffer("texture",null,2),this.colorBufferID=this.material.AddBuffer("color",null,4),this.aVertexPosID=this.material.GetAttributeNameID("aVertexPos"),this.aTexturePosID=this.material.GetAttributeNameID("aTexturePos"),this.aColorID=this.material.GetAttributeNameID("aColor"),this.#e=!0)}RecalcBounds(){const e=this.bounds.min,t=this.bounds.max,r=Rect.MinMaxRect(e.x,e.y,t.x,t.y);this.gameObject.scene.tree?.Relocate(this.gameObject,r)}ForceMeshUpdate(){this.onMeshUpdate.Invoke(),this.RecalcBounds()}Render(){}}class SpriteRenderer extends Renderer{#e=!1;#t=!0;#r=0;#s=[];#o=[];#i=Vector2.zero;#n=new Bounds;#c=new Matrix3x3;#a=null;#x=null;#h=null;#l=null;get meshChanged(){return this.#t}get bounds(){return new Bounds(this.#n.center,this.#n.size)}get sprite(){return this.#x}set sprite(e){this.#a=e,this.Reload()}get drawMode(){return this.#r}set drawMode(e){this.#r=e,this.#e=!0,this.Reload()}get localToWorldMatrix(){return Matrix3x3.Multiply(this.transform.localToWorldMatrix,this.#c)}get size(){return this.#l}set size(e){this.#l=e,this.Reload()}constructor(e,t){super(t),this.#a=e,this.Reload()}#V(){this.#h=this.color.Duplicate();const e=[this.color.r,this.color.g,this.color.b,this.color.a],t=[];for(let r=0;r<this.#s.length;r++)t.push(...e,...e,...e,...e,...e,...e);this.material.SetBuffer(this.colorBufferID,t)}Reload(){super.Reload(),this.#x=this.#a;const e=this.sprite.pixelPerUnit;null==this.#l&&(this.#l=Vector2.Divide(Vector2.one,e)),this.#s=[],this.#o=[];const t=this.sprite.vertices,r=Vector2.Scale(this.#l,e);if(!r.Equals(Vector2.one)){const e=new Bounds;e.SetMinMax(t[0],t[3]),e.extents=Vector2.Scale(e.extents,r),t[0]=e.min,t[1]=new Vector2(e.max.x,e.min.y),t[2]=new Vector2(e.min.x,e.max.y),t[3]=e.max}const s=this.sprite.vertices,o=this.sprite.texture.width,i=this.sprite.texture.height,n=this.sprite.triangles;let c=0,a=[],x=[],h=t[0];const l=o/e,V=i/e;if(this.#i=new Vector2(l*(t[3].x-h.x),V*(t[3].y-h.y)),this.#r>0&&!r.Equals(Vector2.one)){const e=[Vector2.Add(t[0],new Vector2(this.sprite.border.x/o,this.sprite.border.y/i)),Vector2.Add(t[3],new Vector2(-this.sprite.border.z/o,-this.sprite.border.w/i))],l=[Vector2.Add(s[0],new Vector2(this.sprite.border.x/o,this.sprite.border.y/i)),Vector2.Add(s[3],new Vector2(-this.sprite.border.z/o,-this.sprite.border.w/i))],V=[],u=[];if(h=Vector2.Add(h,new Vector2(this.sprite.border.z/o,this.sprite.border.w/i)),V.push([t[0],new Vector2(e[0].x,t[0].y),new Vector2(t[0].x,e[0].y),e[0]]),u.push([s[0],new Vector2(l[0].x,s[0].y),new Vector2(s[0].x,l[0].y),l[0]]),V.push([new Vector2(e[1].x,t[1].y),t[1],new Vector2(e[1].x,e[0].y),new Vector2(t[1].x,e[0].y)]),u.push([new Vector2(l[1].x,s[1].y),s[1],new Vector2(l[1].x,l[0].y),new Vector2(s[1].x,l[0].y)]),V.push([new Vector2(t[2].x,e[1].y),new Vector2(e[0].x,e[1].y),t[2],new Vector2(e[0].x,t[2].y)]),u.push([new Vector2(s[2].x,l[1].y),new Vector2(l[0].x,l[1].y),s[2],new Vector2(l[0].x,s[2].y)]),V.push([e[1],new Vector2(t[3].x,e[1].y),new Vector2(e[1].x,t[3].y),t[3]]),u.push([l[1],new Vector2(s[3].x,l[1].y),new Vector2(l[1].x,s[3].y),s[3]]),1===this.#r)V.push([new Vector2(e[0].x,t[0].y),new Vector2(e[1].x,t[1].y),e[0],new Vector2(e[1].x,e[0].y)]),u.push([new Vector2(l[0].x,s[0].y),new Vector2(l[1].x,s[1].y),l[0],new Vector2(l[1].x,l[0].y)]),V.push([new Vector2(e[0].x,e[1].y),e[1],new Vector2(e[0].x,t[2].y),new Vector2(e[1].x,t[3].y)]),u.push([new Vector2(l[0].x,l[1].y),l[1],new Vector2(l[0].x,s[2].y),new Vector2(l[1].x,s[3].y)]),V.push([new Vector2(t[0].x,e[0].y),e[0],new Vector2(t[2].x,e[1].y),new Vector2(e[0].x,e[1].y)]),u.push([new Vector2(s[0].x,l[0].y),l[0],new Vector2(s[2].x,l[1].y),new Vector2(l[0].x,l[1].y)]),V.push([new Vector2(e[1].x,e[0].y),new Vector2(t[1].x,e[0].y),e[1],new Vector2(t[3].x,e[1].y)]),u.push([new Vector2(l[1].x,l[0].y),new Vector2(s[1].x,l[0].y),l[1],new Vector2(s[3].x,l[1].y)]);else{const n=Vector2.Subtract(l[1],l[0]),c=new Vector2((r.x*(s[3].x-s[0].x)-(this.sprite.border.x+this.sprite.border.z)/o)/n.x,(r.y*(s[3].y-s[0].y)-(this.sprite.border.y+this.sprite.border.w)/i)/n.y),a=new Vector2(Math.ceil(c.x),Math.ceil(c.y));for(let r=0;r<a.y;r++)for(let o=0;o<a.x;o++){const i=Vector2.Add(e[0],new Vector2(n.x*o,n.y*r)),x=Vector2.Min(Vector2.Add(i,n),e[1]),h=Vector2.Scale(l[1],new Vector2(o===a.x-1&&c.x%1||1,r===a.y-1&&c.y%1||1));V.push([i,new Vector2(x.x,i.y),new Vector2(i.x,x.y),x]),u.push([l[0],new Vector2(h.x,l[0].y),new Vector2(l[0].x,h.y),h]),0===r&&(V.push([new Vector2(i.x,t[0].y),new Vector2(x.x,t[1].y),i,x]),u.push([new Vector2(l[0].x,s[0].y),new Vector2(h.x,s[1].y),l[0],new Vector2(h.x,l[1].y)])),r===a.y-1&&(V.push([new Vector2(i.x,x.y),x,new Vector2(i.x,t[2].y),new Vector2(x.x,t[3].y)]),u.push([new Vector2(l[0].x,l[1].y),new Vector2(h.x,l[1].y),new Vector2(l[0].x,s[2].y),new Vector2(h.x,s[3].y)])),0===o&&(V.push([new Vector2(t[0].x,i.y),i,new Vector2(t[2].x,x.y),new Vector2(i.x,x.y)]),u.push([new Vector2(s[0].x,l[0].y),l[0],new Vector2(s[2].x,h.y),new Vector2(l[0].x,h.y)])),o===a.x-1&&(V.push([new Vector2(x.x,i.y),new Vector2(t[1].x,i.y),x,new Vector2(t[3].x,x.y)]),u.push([new Vector2(l[1].x,l[0].y),new Vector2(s[1].x,l[0].y),new Vector2(l[1].x,h.y),new Vector2(s[3].x,h.y)]))}}for(let e=0;e<V.length;e++){const t=V[e],r=u[e];for(let e=0;e<n.length;e++){const s=t[n[e]],o=r[n[e]];a.push(s.x-h.x,s.y-h.y),x.push(o.x,o.y)}this.#s.push(c),this.#o.push(n.length-1),c+=n.length}t[0]=e[0],t[1]=new Vector2(e[1].x,e[0].y),t[2]=new Vector2(e[0].x,e[1].y),t[3]=e[1],1===this.#r&&(s[0]=l[0],s[1]=new Vector2(l[1].x,l[0].y),s[2]=new Vector2(l[0].x,l[1].y),s[3]=l[1])}if(this.#r<2||r.Equals(Vector2.one)){for(let e=0;e<n.length;e++){const r=t[n[e]],o=s[n[e]];a.push(r.x-h.x,r.y-h.y),x.push(o.x,o.y)}this.#s.push(c),this.#o.push(n.length-1)}this.material.SetBuffer(this.geometryBufferID,a),this.material.SetBuffer(this.textureBufferID,x),(null==this.#h||this.#e)&&this.#V(),this.#c=Matrix3x3.TRS(Vector2.Scale(this.sprite.pivot,Vector2.Scale(new Vector2(l*(t[3].x-h.x),V*(t[3].y-h.y)),-1)),0,Vector2.Scale(o>i?new Vector2(1,i/o):new Vector2(o/i,1),o>i?l:V)),this.#t=!0}RecalcBounds(){const e=new Bounds(Vector2.zero,this.#i),t=this.transform.localToWorldMatrix,r=Matrix3x3.Multiply(t,Matrix3x3.Translate(e.min)),s=Matrix3x3.Multiply(t,Matrix3x3.Translate(new Vector2(e.min.x,e.max.y))),o=Matrix3x3.Multiply(t,Matrix3x3.Translate(new Vector2(e.max.x,e.min.y))),i=Matrix3x3.Multiply(t,Matrix3x3.Translate(e.max));e.SetMinMax(new Vector2(Math.min(r.GetValue(2,0),s.GetValue(2,0),o.GetValue(2,0),i.GetValue(2,0)),Math.min(-r.GetValue(2,1),-s.GetValue(2,1),-o.GetValue(2,1),-i.GetValue(2,1))),new Vector2(Math.max(r.GetValue(2,0),s.GetValue(2,0),o.GetValue(2,0),i.GetValue(2,0)),Math.max(-r.GetValue(2,1),-s.GetValue(2,1),-o.GetValue(2,1),-i.GetValue(2,1))));const n=Matrix3x3.Multiply(t,Matrix3x3.Translate(Vector2.Scale(Vector2.Add(Vector2.Scale(this.sprite.pivot,-2),1),.5)));e.center=new Vector2(n.GetValue(2,0),-n.GetValue(2,1)),this.#n=e,super.RecalcBounds()}ForceMeshUpdate(){super.ForceMeshUpdate(),this.#t=!1}Render(){this.#h.Equals(this.color)||this.#V();const e=this.material.gl,t=this.renderMatrix;this.material.SetMatrix(this.uMatrixID,t.matrix[0][0],t.matrix[0][1],t.matrix[0][2],t.matrix[1][0],t.matrix[1][1],t.matrix[1][2],t.matrix[2][0],t.matrix[2][1],t.matrix[2][2]),this.material.SetAttribute(this.aVertexPosID,this.geometryBufferID),this.material.SetAttribute(this.aTexturePosID,this.textureBufferID),this.material.SetAttribute(this.aColorID,this.colorBufferID),e.useProgram(this.material.program),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.sprite.texture.GetNativeTexture()),0===this.#r?e.drawArrays(e.TRIANGLE_STRIP,0,this.#o[0]):Application.gl_multidraw.multiDrawArraysWEBGL(e.TRIANGLE_STRIP,this.#s,0,this.#o,0,this.#s.length),e.useProgram(null)}Duplicate(){const e=new SpriteRenderer(this.sprite.Duplicate(),this.material.Duplicate());return e.color=this.color.Duplicate(),e.sortingLayer=this.sortingLayer,e.sortingOrder=this.sortingOrder,e.drawMode=this.drawMode,e.size=this.size.Duplicate(),e}}class SpriteDrawMode{static get Simple(){return 0}static get Sliced(){return 1}static get Tiled(){return 2}}class Grid extends Behavior{cellGap=Vector2.zero;cellSize=new Vector2(.5,.5);CellToWorldUnscaled(e){return Vector2.Scale(e,Vector2.Add(this.cellSize,this.cellGap))}CellToWorld(e){const l=Matrix3x3.Multiply(this.transform.localToWorldMatrix,Matrix3x3.Translate(Vector2.Scale(this.CellToWorldUnscaled(e),new Vector2(1,-1))));return new Vector2(l.GetValue(2,0),-l.GetValue(2,1))}WorldToCell(e){const l=Matrix3x3.Multiply(this.transform.worldToLocalMatrix,Matrix3x3.Translate(new Vector2(e.x,-e.y))),t=Vector2.Divide(new Vector2(l.GetValue(2,0),-l.GetValue(2,1)),Vector2.Add(this.cellSize,this.cellGap));return new Vector2(Math.round(t.x),Math.round(t.y))}SnapToGrid(e){return this.CellToWorld(this.WorldToCell(e))}Duplicate(){const e=new Grid;return e.cellGap=this.cellGap.Duplicate(),e.cellSize=this.cellSize.Duplicate(),e}}